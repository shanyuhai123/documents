import{_ as n,c as a,a as t,o as p}from"./app-DNXRdI82.js";const e={};function o(c,s){return p(),a("div",null,s[0]||(s[0]=[t(`<h1 id="typescript-常见问题" tabindex="-1"><a class="header-anchor" href="#typescript-常见问题"><span>TypeScript 常见问题</span></a></h1><h2 id="过量属性检测" tabindex="-1"><a class="header-anchor" href="#过量属性检测"><span>过量属性检测</span></a></h2><p>看下官网的<a href="https://www.typescriptlang.org/docs/handbook/interfaces.html#excess-property-checks" target="_blank" rel="noopener noreferrer">示例</a>：</p><div class="language-tsx" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">SquareConfig</span> <span class="token punctuation">{</span></span>
<span class="line">  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  width<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">createSquare</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> SquareConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span> area<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">    color<span class="token operator">:</span> config<span class="token punctuation">.</span>color <span class="token operator">||</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    area<span class="token operator">:</span> config<span class="token punctuation">.</span>width <span class="token operator">?</span> config<span class="token punctuation">.</span>width <span class="token operator">*</span> config<span class="token punctuation">.</span>width <span class="token operator">:</span> <span class="token number">20</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span> colour<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">createSquare</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token comment">// OK</span></span>
<span class="line"><span class="token function">createSquare</span><span class="token punctuation">(</span><span class="token punctuation">{</span> colour<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> width<span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// ERROR</span></span>
<span class="line"></span></code></pre></div><p>在 <a href="https://github.com/Microsoft/TypeScript/pull/3823" target="_blank" rel="noopener noreferrer">Strict object literal assignment checking</a> 应该是特地为对象字面量增加了严格模式。</p><h3 id="疑惑" tabindex="-1"><a class="header-anchor" href="#疑惑"><span>疑惑</span></a></h3><p>为什么仅为对象字面量增加严格模式呢，SF 中有一个<a href="https://stackoverflow.com/questions/52234014/in-typescript-why-is-it-that-an-object-cannot-specify-excess-properties-on-assi?rq=1" target="_blank" rel="noopener noreferrer">探讨</a>。</p><p>解释似乎很有道理，对象字面量仅在此处使用，应当严格限制，而引用的对象可能来自其他地方，如果你对其进行修改那么可能造成其余地方出现问题。</p><h2 id="提供-js-后缀" tabindex="-1"><a class="header-anchor" href="#提供-js-后缀"><span>提供 js 后缀</span></a></h2><p>在 HTML 中使用 <code>type=&quot;module&quot;</code> 时：</p><div class="language-html" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>Hello Module<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre></div><p>其中，<code>index.js</code> 由 <code>tsc</code> 生成，其中：</p><div class="language-tsx" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token comment">// index.ts</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> method1 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./modules/m1&quot;</span></span>
<span class="line"></span></code></pre></div><p>编译后得到的结果为：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// index.js</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> method1 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./modules/m1&quot;</span></span>
<span class="line"></span></code></pre></div><p>由于缺乏后缀名称，那么浏览器访问时自然就 404 了。</p><h3 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h3><p>直接增加 <code>.ts</code> 后缀？那么很明显会得到 <code>导入路径不能以“.ts”扩展名结束。</code> 的错误。</p><p>根据 <a href="https://segmentfault.com/q/1010000038671707#" target="_blank" rel="noopener noreferrer">TypeScript 编译器 tsc 命令能够自动补全完整的 js 后缀？</a> 在导入时增加 <code>.js</code> 后缀，最后生效了。</p><p>TypeScript 社区也对此进行了长期的讨论，并给出了一份<a href="https://github.com/microsoft/TypeScript/issues/16577#issuecomment-703190339" target="_blank" rel="noopener noreferrer">总结</a>。</p>`,20)]))}const i=n(e,[["render",o],["__file","typescript-normal-problems.html.vue"]]),r=JSON.parse('{"path":"/frontend/typescript/typescript-normal-problems.html","title":"TypeScript 常见问题","lang":"zh-CN","frontmatter":{"description":"TypeScript 常见问题"},"headers":[{"level":2,"title":"过量属性检测","slug":"过量属性检测","link":"#过量属性检测","children":[{"level":3,"title":"疑惑","slug":"疑惑","link":"#疑惑","children":[]}]},{"level":2,"title":"提供 js 后缀","slug":"提供-js-后缀","link":"#提供-js-后缀","children":[{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]}],"git":{"updatedTime":1637398040000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":2,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"frontend/typescript/typescript-normal-problems.md"}');export{i as comp,r as data};
