import{_ as s,p as a,q as t,a1 as p}from"./framework-e3e34937.js";const o={};function c(e,n){return a(),t("div",null,n[0]||(n[0]=[p(`<h1 id="错误的集合" tabindex="-1"><a class="header-anchor" href="#错误的集合" aria-hidden="true">#</a> 错误的集合</h1><p>略过哈希表方法。</p><h2 id="位运算" tabindex="-1"><a class="header-anchor" href="#位运算" aria-hidden="true">#</a> 位运算</h2><p>可参考<a href="./268-missing-number">丢失的数字</a>。</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">findErrorNums</span><span class="token punctuation">(</span>nums<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> totalN <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> totalS <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> missing <span class="token operator">=</span> nums<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    missing <span class="token operator">^=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> i
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>totalN <span class="token operator">-</span> totalS<span class="token punctuation">,</span> missing<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div>`,5)]))}const l=s(o,[["render",c],["__file","645-set-mismatch.html.vue"]]);export{l as default};
