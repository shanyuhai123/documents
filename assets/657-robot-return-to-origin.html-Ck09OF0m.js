import{_ as n,c as a,a as p,o as t}from"./app-DLCc4AGN.js";const e={};function o(c,s){return t(),a("div",null,[...s[0]||(s[0]=[p(`<h1 id="机器人能否返回原点" tabindex="-1"><a class="header-anchor" href="#机器人能否返回原点"><span>机器人能否返回原点</span></a></h1><h2 id="模拟" tabindex="-1"><a class="header-anchor" href="#模拟"><span>模拟</span></a></h2><p>不用考虑朝向。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">judgeCircle</span><span class="token punctuation">(</span>moves<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 数组麻烦，选择更简单的形式</span></span>
<span class="line">  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> move <span class="token keyword">of</span> moves<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;U&#39;</span><span class="token punctuation">)</span> y <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;R&#39;</span><span class="token punctuation">)</span> x <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span> y <span class="token operator">-=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span> x <span class="token operator">-=</span> <span class="token number">1</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> x <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">===</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,4)])])}const r=n(e,[["render",o]]),i=JSON.parse('{"path":"/algorithms/657-robot-return-to-origin.html","title":"机器人能否返回原点","lang":"zh-CN","frontmatter":{"autoSort":-657},"headers":[{"level":2,"title":"模拟","slug":"模拟","link":"#模拟","children":[]}],"git":{"updatedTime":1638362911000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/657-robot-return-to-origin.md"}');export{r as comp,i as data};
