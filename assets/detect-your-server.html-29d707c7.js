import{_ as e,p as n,q as s,a1 as t}from"./framework-e3e34937.js";const p={};function c(r,a){return n(),s("div",null,a[0]||(a[0]=[t(`<h1 id="检测服务器通达" tabindex="-1"><a class="header-anchor" href="#检测服务器通达" aria-hidden="true">#</a> 检测服务器通达</h1><p>首先需要确认服务端、客户端的配置均没有问题。</p><h2 id="检测" tabindex="-1"><a class="header-anchor" href="#检测" aria-hidden="true">#</a> 检测</h2><h3 id="_1-ping" tabindex="-1"><a class="header-anchor" href="#_1-ping" aria-hidden="true">#</a> 1. ping</h3><p>检查物理链路是否抵达：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ping</span> <span class="token punctuation">[</span>ip<span class="token punctuation">]</span>
</code></pre></div><h3 id="_2-tracepath" tabindex="-1"><a class="header-anchor" href="#_2-tracepath" aria-hidden="true">#</a> 2. tracepath</h3><p>路由跟踪指令：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>tracepath <span class="token punctuation">[</span>ip<span class="token punctuation">]</span>
</code></pre></div><h3 id="_3-telnet" tabindex="-1"><a class="header-anchor" href="#_3-telnet" aria-hidden="true">#</a> 3. telnet</h3><p>检查服务端是否提供服务：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>telnet <span class="token punctuation">[</span>ip<span class="token punctuation">]</span> <span class="token punctuation">[</span>port<span class="token punctuation">]</span>
</code></pre></div><p>当 telnet 提示拒绝服务时，存在两种可能性：</p><ol><li><p>服务未开启，不存在服务；</p></li><li><p>防火墙拒绝访问：</p><p>在 CentOS6 中防火墙是 iptables，在 CentOS7 中是 firewalld</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>systemctl status firewalld
</code></pre></div></li></ol>`,14)]))}const l=e(p,[["render",c],["__file","detect-your-server.html.vue"]]);export{l as default};
