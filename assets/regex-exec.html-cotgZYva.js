import{_ as a,c as s,a as e,o as t}from"./app-CQrWi6O2.js";const o={};function p(c,n){return t(),s("div",null,[...n[0]||(n[0]=[e(`<h1 id="正则-exec" tabindex="-1"><a class="header-anchor" href="#正则-exec"><span>正则 exec</span></a></h1><p><code>exec</code> 方法在一个指定字符串中执行一个搜索匹配，返回一个结果数据或 <code>null</code>。</p><p>在设置了 <code>global</code> 或 <code>sticky</code> 标志位的情况下（如 <code>/foo/g</code> 或 <code>/foo/y</code>），<code>Regex</code> 对象是有状态的。他们会将上次成功匹配后的位置记录在 <code>lastIndex</code> 属性中。使用此特性，<code>exec</code> 可用来对单个字符串中的多次匹配结果进行逐条的遍历（包括捕获到的匹配），而相比之下，<code>String.prototype.match</code> 只会返回匹配到的结果。</p><blockquote><p>稍微测试下大概会保留 10s+。</p></blockquote><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="_1-示例" tabindex="-1"><a class="header-anchor" href="#_1-示例"><span>1. 示例</span></a></h3><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo*</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token string">&quot;table football, foosball&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> arr<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>arr <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Found </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">. Next starts at </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reg<span class="token punctuation">.</span>lastIndex<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// &quot;Found foo. Next starts at 9.&quot;</span></span>
<span class="line"><span class="token comment">// &quot;Found foo. Next starts at 19.&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-返回值" tabindex="-1"><a class="header-anchor" href="#_2-返回值"><span>2. 返回值</span></a></h3><p>如果匹配成功，则返回一个数组，并更新正则对象的 <code>lastIndex</code> 属性。</p><p>如果匹配失败，<code>exec</code> 方法返回 <code>null</code>，并将 <code>lastIndex</code> 重置为 0。</p><blockquote><p>被提到这么多次的 <code>lastIndex</code> 是什么？它是下一次匹配开始的位置。这就是匹配到 <code>null</code> 的原因。</p></blockquote>`,11)])])}const i=a(o,[["render",p]]),r=JSON.parse('{"path":"/frontend/javascript/regex-exec.html","title":"正则 exec","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"1. 示例","slug":"_1-示例","link":"#_1-示例","children":[]},{"level":3,"title":"2. 返回值","slug":"_2-返回值","link":"#_2-返回值","children":[]}]}],"git":{"updatedTime":1637397829000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":2,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"frontend/javascript/regex-exec.md"}');export{i as comp,r as data};
