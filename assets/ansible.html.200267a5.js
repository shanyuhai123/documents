import{r as n,c as s,a,b as e,w as t,F as o,d as p,e as l,o as c}from"./app.eaec56a1.js";import{_ as r}from"./plugin-vue_export-helper.5a098b48.js";const i={},u=a("h2",{id:"介绍",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),p(" 介绍")],-1),m=a("p",null,"虽然也可以自己写 Shell 实现分发脚本，但由于缺乏运维系统概念，混乱、零碎的写法总是让人难受，一接触到 ansible 就知道很难回去了。",-1),k=p("Ansible 是一个用来批量管理部署远程主机上服务的工具，它通过 SSH 协议实现管理节点与远程节点之间的通信，所以首先需要完成 "),d=p("SSH 配置"),h=p("。"),b=l('<p>需要注意的是 Ansible 需要开启公钥认证，也就是添加到 <code>known_hosts</code> 中，对于大批量的操作可以禁用该行为：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">vim</span> /etc/ansible/ansible.cfg\n<span class="token comment"># 修改以下内容</span>\nhost_key_checking <span class="token operator">=</span> False <span class="token comment"># 取消注释</span>\n</code></pre></div><h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> install</h2>',3),y=p("虽然可以很简单的直接使用 "),g={href:"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#latest-release-via-dnf-or-yum",target:"_blank",rel:"noopener noreferrer"},f=p("yum 安装"),v=p("，但由于 ansible 是一个 python 编写的工具，这样就会导致 ansible 依赖于全局的 python，当全局依赖发生变化的时候可能导致 ansible 出现冲突或潜在的安全问题，所以需要隔离 ansible 与其他应用。"),_=l('<h3 id="_1-关闭限制" tabindex="-1"><a class="header-anchor" href="#_1-关闭限制" aria-hidden="true">#</a> 1. 关闭限制</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>systemctl stop firewalld\nsystemctl disable firewalld\nsystemctl status firewalld <span class="token comment"># 验证</span>\n\n<span class="token function">vim</span> /etc/sysconfig/selinux\n<span class="token comment"># 修改以下内容</span>\n<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disabled\n\n<span class="token function">reboot</span>\ngetenforce <span class="token comment"># 验证 Disabled</span>\n</code></pre></div>',2),x={id:"_2-安装-python",tabindex:"-1"},w=a("a",{class:"header-anchor",href:"#_2-安装-python","aria-hidden":"true"},"#",-1),q=p(" 2. 安装 "),j={href:"https://www.python.org/downloads/source/",target:"_blank",rel:"noopener noreferrer"},L=p("python"),A=l('<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">wget</span> https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tar.xz\n<span class="token function">tar</span> xf Python-3.6.9.tar.xz\n<span class="token builtin class-name">cd</span> Python-3.6.9\n./configure --prefix<span class="token operator">=</span>/usr/local --with-ensurepip<span class="token operator">=</span>install --enable-shared <span class="token assign-left variable">LDFLAGS</span><span class="token operator">=</span><span class="token string">&quot;-Wl,-rpath /usr/local/lib&quot;</span>\n<span class="token function">make</span> <span class="token operator">&amp;&amp;</span> <span class="token function">make</span> altinstall\n<span class="token function">which</span> pip3.6\n<span class="token function">ln</span> -s /usr/local/bin/pip3.6 /usr/local/bin/pip <span class="token comment"># 建立软连接</span>\npip <span class="token function">install</span> virtualenv\n</code></pre></div><h3 id="_3-创建实例" tabindex="-1"><a class="header-anchor" href="#_3-创建实例" aria-hidden="true">#</a> 3. 创建实例</h3><p>需要创建一个 ansible 用户，并在该系统用户下创建一个 python3.6 版本的 virtualenv 实例。</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">useradd</span> deploy\n<span class="token function">su</span> - deploy\nvirtualenv -p /usr/local/bin/python3.6 .py3-a2.8-env <span class="token comment"># 创建实例</span>\n<span class="token builtin class-name">source</span> /home/deploy/.py3-a2.8-env/bin/activate\npip <span class="token function">install</span> paramiko PyYAML  jinja2 <span class="token comment"># 安装依赖，保持顺序</span>\n</code></pre></div><h3 id="_4-安装-ansible" tabindex="-1"><a class="header-anchor" href="#_4-安装-ansible" aria-hidden="true">#</a> 4. 安装 ansible</h3>',5),S={href:"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html#latest-release-via-dnf-or-yum",target:"_blank",rel:"noopener noreferrer"},I=p("官网"),M=p("推荐的安装方式，当下载速度极慢时的"),E=p("解决方案"),F=p("。"),N=l('<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitee.com/shanyuhai123/ansible.git\n<span class="token function">mv</span> ansible .py3-a2.8-env/\n<span class="token builtin class-name">cd</span> .py3-a2.8-env/ansible\n<span class="token function">git</span> branch -a <span class="token comment"># 查看分支</span>\n<span class="token function">git</span> checkout stable-2.8\n<span class="token builtin class-name">source</span> /home/deploy/.py3-a2.8-env/ansible/hacking/env-setup -q\nansible --version <span class="token comment"># 验证</span>\n</code></pre></div><h3 id="_5-启用-ansible" tabindex="-1"><a class="header-anchor" href="#_5-启用-ansible" aria-hidden="true">#</a> 5. 启用 ansible</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">shutdown</span> -r now <span class="token comment"># 重启</span>\n\n<span class="token function">su</span> - deploy\n<span class="token builtin class-name">source</span> .py3-a2.8-env/bin/activate <span class="token comment"># 加载 py3</span>\n<span class="token builtin class-name">source</span> .py3-a2.8-env/ansible/hacking/env-setup -q <span class="token comment"># 加载 ansible</span>\nansible --version <span class="token comment"># 验证</span>\n</code></pre></div><h2 id="inventory" tabindex="-1"><a class="header-anchor" href="#inventory" aria-hidden="true">#</a> inventory</h2>',4),P=p("Ansible 可同事操作属于一个组的多台主机，组和主机之间的关系通过 "),Y={href:"https://docs.ansible.com/ansible/latest/user_guide/intro_inventory.html",target:"_blank",rel:"noopener noreferrer"},D=p("inventory"),H=p(" 文件配置。默认的文件路径为 "),z=a("code",null,"/etc/ansible/hosts",-1),R=p("，除默认文件外，还可以使用多个 inventory 文件，当然也可以从云上拉取配置信息。"),C=l('<h3 id="_1-ini-like" tabindex="-1"><a class="header-anchor" href="#_1-ini-like" aria-hidden="true">#</a> 1. INI-like</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>mail.example.com\n\n<span class="token punctuation">[</span>t1<span class="token punctuation">]</span>\n<span class="token number">192.168</span>.1.11\n<span class="token number">192.168</span>.1.12\n\n<span class="token punctuation">[</span>web<span class="token punctuation">]</span>\nwww<span class="token punctuation">[</span>01:50<span class="token punctuation">]</span>.example.com\n\n<span class="token punctuation">[</span>db<span class="token punctuation">]</span>\ndb-<span class="token punctuation">[</span>a:f<span class="token punctuation">]</span>.example.com\n\n<span class="token punctuation">[</span>webservers<span class="token punctuation">]</span>\nfoo.example.com\nbar.example.com\n\n<span class="token punctuation">[</span>dbservers<span class="token punctuation">]</span>\none.example.com\ntwo.example.com\nthree.example.com:5309\n</code></pre></div><h3 id="_2-yaml" tabindex="-1"><a class="header-anchor" href="#_2-yaml" aria-hidden="true">#</a> 2. YAML</h3><div class="language-yaml ext-yml"><pre class="language-yaml"><code><span class="token key atrule">all</span><span class="token punctuation">:</span>\n  <span class="token key atrule">hosts</span><span class="token punctuation">:</span>\n    <span class="token key atrule">mail.example.com</span><span class="token punctuation">:</span>\n  <span class="token key atrule">children</span><span class="token punctuation">:</span>\n    <span class="token key atrule">webservers</span><span class="token punctuation">:</span>\n      <span class="token key atrule">hosts</span><span class="token punctuation">:</span>\n        <span class="token key atrule">foo.example.com</span><span class="token punctuation">:</span>\n        <span class="token key atrule">bar.example.com</span><span class="token punctuation">:</span>\n    <span class="token key atrule">dbservers</span><span class="token punctuation">:</span>\n      <span class="token key atrule">hosts</span><span class="token punctuation">:</span>\n        <span class="token key atrule">one.example.com</span><span class="token punctuation">:</span>\n        <span class="token key atrule">two.example.com</span><span class="token punctuation">:</span>\n        <span class="token key atrule">three.example.com</span><span class="token punctuation">:</span>\n</code></pre></div><h3 id="_3-inheriting-variable-values" tabindex="-1"><a class="header-anchor" href="#_3-inheriting-variable-values" aria-hidden="true">#</a> 3. Inheriting variable values</h3><p>在这种情况下自己书写规则 INI-like 风格更方便一些，但是接手他人的时候更希望看到 YAML 风格，更一目了然。</p><ul><li><p>INI-like</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token punctuation">[</span>atlanta<span class="token punctuation">]</span>\nhost1\nhost2\n\n<span class="token punctuation">[</span>raleigh<span class="token punctuation">]</span>\nhost2\nhost3\n\n<span class="token punctuation">[</span>southeast:children<span class="token punctuation">]</span>\natlanta\nraleigh\n\n<span class="token punctuation">[</span>southeast:vars<span class="token punctuation">]</span>\n<span class="token assign-left variable">some_server</span><span class="token operator">=</span>foo.southeast.example.com\n<span class="token assign-left variable">halon_system_timeout</span><span class="token operator">=</span><span class="token number">30</span>\n<span class="token assign-left variable">self_destruct_countdown</span><span class="token operator">=</span><span class="token number">60</span>\n<span class="token assign-left variable">escape_pods</span><span class="token operator">=</span><span class="token number">2</span>\n\n<span class="token punctuation">[</span>usa:children<span class="token punctuation">]</span>\nsoutheast\nnortheast\nsouthwest\nnorthwest\n</code></pre></div></li><li><p>YAML</p><div class="language-yaml ext-yml"><pre class="language-yaml"><code><span class="token key atrule">all</span><span class="token punctuation">:</span>\n  <span class="token key atrule">children</span><span class="token punctuation">:</span>\n    <span class="token key atrule">usa</span><span class="token punctuation">:</span>\n      <span class="token key atrule">children</span><span class="token punctuation">:</span>\n        <span class="token key atrule">southeast</span><span class="token punctuation">:</span>\n          <span class="token key atrule">children</span><span class="token punctuation">:</span>\n            <span class="token key atrule">atlanta</span><span class="token punctuation">:</span>\n              <span class="token key atrule">hosts</span><span class="token punctuation">:</span>\n                <span class="token key atrule">host1</span><span class="token punctuation">:</span>\n                <span class="token key atrule">host2</span><span class="token punctuation">:</span>\n            <span class="token key atrule">raleigh</span><span class="token punctuation">:</span>\n              <span class="token key atrule">hosts</span><span class="token punctuation">:</span>\n                <span class="token key atrule">host2</span><span class="token punctuation">:</span>\n                <span class="token key atrule">host3</span><span class="token punctuation">:</span>\n          <span class="token key atrule">vars</span><span class="token punctuation">:</span>\n            <span class="token key atrule">some_server</span><span class="token punctuation">:</span> foo.southeast.example.com\n            <span class="token key atrule">halon_system_timeout</span><span class="token punctuation">:</span> <span class="token number">30</span>\n            <span class="token key atrule">self_destruct_countdown</span><span class="token punctuation">:</span> <span class="token number">60</span>\n            <span class="token key atrule">escape_pods</span><span class="token punctuation">:</span> <span class="token number">2</span>\n        <span class="token key atrule">northeast</span><span class="token punctuation">:</span>\n        <span class="token key atrule">northwest</span><span class="token punctuation">:</span>\n        <span class="token key atrule">southwest</span><span class="token punctuation">:</span>\n</code></pre></div></li></ul><h3 id="_4-参数" tabindex="-1"><a class="header-anchor" href="#_4-参数" aria-hidden="true">#</a> 4. 参数</h3><table><thead><tr><th style="text-align:center;">参数</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">ansible_connection</td><td>连接类型到主机。</td></tr><tr><td style="text-align:center;">ansible_host</td><td>要连接的主机的名称。</td></tr><tr><td style="text-align:center;">ansible_port</td><td>连接端口号。</td></tr><tr><td style="text-align:center;">ansible_user</td><td>连接到主机时要使用的用户名。</td></tr><tr><td style="text-align:center;">ansible_password</td><td>身份验证的密码。</td></tr><tr><td style="text-align:center;">ansible_ssh_private_key_file</td><td>ssh使用的私钥文件。</td></tr><tr><td style="text-align:center;">ansible_ssh_common_args</td><td>此设置始终附加到sftp，scp和ssh的默认命令行。</td></tr><tr><td style="text-align:center;">ansible_sftp_extra_args</td><td>此设置始终附加到默认的sftp命令行。</td></tr><tr><td style="text-align:center;">ansible_scp_extra_args</td><td>此设置始终附加到默认scp命令行。</td></tr><tr><td style="text-align:center;">ansible_ssh_extra_args</td><td>此设置始终附加到默认的ssh命令行。</td></tr><tr><td style="text-align:center;">ansible_ssh_pipelining</td><td>确定是否使用SSH流水线。</td></tr><tr><td style="text-align:center;">ansible_ssh_executable</td><td>此设置将覆盖使用系统ssh的默认行为。</td></tr><tr><td style="text-align:center;">ansible_shell_type</td><td>目标系统的shell类型。</td></tr><tr><td style="text-align:center;">ansible_python_interpreter</td><td>目标主机python路径。</td></tr></tbody></table><h2 id="ad-hoc" tabindex="-1"><a class="header-anchor" href="#ad-hoc" aria-hidden="true">#</a> ad-hoc</h2><p>ad-hoc 可以帮助完成临时任务，很多时候并不需要 Ansible 的强大力量（playbook）。</p><p>命令格式：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible <span class="token operator">&lt;</span>pattern_goes_here<span class="token operator">&gt;</span> -m <span class="token operator">&lt;</span>module_name<span class="token operator">&gt;</span> -a <span class="token operator">&lt;</span>arguments<span class="token operator">&gt;</span>\n</code></pre></div><p>仅列出部分示例。</p>',14),G={id:"_1-command",tabindex:"-1"},O=a("a",{class:"header-anchor",href:"#_1-command","aria-hidden":"true"},"#",-1),U=p(" 1. "),W={href:"https://docs.ansible.com/ansible/latest/modules/command_module.html",target:"_blank",rel:"noopener noreferrer"},X=p("command"),B=l('<p>Execute <strong>command</strong>s on targets。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible t1 -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;free -m&quot;</span>\nansible t1 -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;df -h&quot;</span>\nansible t1 -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;ls /root&quot;</span>\nansible t1 -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;cat redhat-release&quot;</span>\n</code></pre></div>',3),J={id:"_2-shell",tabindex:"-1"},K=a("a",{class:"header-anchor",href:"#_2-shell","aria-hidden":"true"},"#",-1),Q=p(" 2. "),T={href:"https://docs.ansible.com/ansible/latest/modules/shell_module.html",target:"_blank",rel:"noopener noreferrer"},V=p("shell"),Z=l('<p>Execute shell commands on targets。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible t1 -m shell -a <span class="token string">&quot;echo hello &gt; /tmp/tmp.txt&quot;</span>\nansible t1 -m shell -a <span class="token string">&quot;cat /tmp/tmp.txt&quot;</span> <span class="token comment"># 验证</span>\n</code></pre></div>',3),$={id:"_3-copy",tabindex:"-1"},nn=a("a",{class:"header-anchor",href:"#_3-copy","aria-hidden":"true"},"#",-1),sn=p(" 3. "),an={href:"https://docs.ansible.com/ansible/latest/modules/copy_module.html",target:"_blank",rel:"noopener noreferrer"},en=p("copy"),tn=l('<p>Copy files to remote locations。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible t1 -m copy -a <span class="token string">&quot;src=/root/shell dest=/tmp&quot;</span>\nansible t1 -m shell -a <span class="token string">&quot;ls /tmp&quot;</span> <span class="token comment"># 验证</span>\nansible t1 -m shell -a <span class="token string">&quot;wc -l /tmp/shell&quot;</span> <span class="token comment"># 验证</span>\n</code></pre></div>',3),on={id:"_4-script",tabindex:"-1"},pn=a("a",{class:"header-anchor",href:"#_4-script","aria-hidden":"true"},"#",-1),ln=p(" 4. "),cn={href:"https://docs.ansible.com/ansible/latest/modules/script_module.html",target:"_blank",rel:"noopener noreferrer"},rn=p("script"),un=l('<p>Runs a local script on a remote node after transferring it。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;echo hello&quot;</span> <span class="token operator">&gt;</span> /tmp/hello.sh\n<span class="token function">cat</span> /tmp/hello.sh <span class="token comment"># 验证</span>\nansible t1 -m script -a <span class="token string">&quot;/tmp/hello.sh&quot;</span> \n</code></pre></div>',3),mn={id:"_5-file",tabindex:"-1"},kn=a("a",{class:"header-anchor",href:"#_5-file","aria-hidden":"true"},"#",-1),dn=p(" 5. "),hn={href:"https://docs.ansible.com/ansible/latest/modules/file_module.html",target:"_blank",rel:"noopener noreferrer"},bn=p("file"),yn=a("p",null,"Manage files and file properties。",-1),gn={id:"_6-yum",tabindex:"-1"},fn=a("a",{class:"header-anchor",href:"#_6-yum","aria-hidden":"true"},"#",-1),vn=p(" 6. "),_n={href:"https://docs.ansible.com/ansible/latest/modules/yum_module.html",target:"_blank",rel:"noopener noreferrer"},xn=p("yum"),wn=l('<p>Manages packages with the yum package manager。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;free -m&quot;</span> <span class="token comment"># 验证</span>\n\nansible webservers -m yum -a <span class="token string">&quot;name=nginx state=installed&quot;</span>\nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;nginx -v&quot;</span> <span class="token comment"># 验证 nginx version: nginx/1.12.2</span>\n<span class="token comment"># 可以注意到并非是最新版 nginx</span>\n<span class="token comment"># 参照示例 https://docs.shanyuhai.top/os/centos/install-the-latest-version-of-nginx.html</span>\nansible webservers -m yum -a <span class="token string">&quot;name=yum-utils state=installed&quot;</span>\nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;ll /etc/yum.repos.d/nginx.repo&quot;</span> <span class="token comment"># 验证</span>\n<span class="token function">vim</span> /etc/yum.repos.d/nginx.repo\n<span class="token function">cat</span> /etc/yum.repos.d/nginx.repo <span class="token comment"># 验证</span>\n<span class="token comment"># 追加内容参考示例</span>\nansible webservers -m copy -a <span class="token string">&quot;src=/etc/yum.repos.d/nginx.repo dest=/etc/yum.repos.d/nginx.repo&quot;</span>\nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;cat /etc/yum.repos.d/nginx.repo&quot;</span> <span class="token comment"># 验证</span>\nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;yum-config-manager --enable nginx-mainline&quot;</span>\nansible webservers -m yum -a <span class="token string">&quot;name=nginx state=installed&quot;</span> <span class="token comment"># 更新</span>\n<span class="token comment"># installed 测试时未能更新，可能需要 present 参数</span>\n<span class="token comment"># 不推荐使用 yum 卸载</span>\nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;nginx -v&quot;</span> <span class="token comment"># 验证 </span>\n</code></pre></div>',3),qn={id:"_7-systemd",tabindex:"-1"},jn=a("a",{class:"header-anchor",href:"#_7-systemd","aria-hidden":"true"},"#",-1),Ln=p(" 7. "),An={href:"https://docs.ansible.com/ansible/latest/modules/systemd_module.html",target:"_blank",rel:"noopener noreferrer"},Sn=p("systemd"),In=l('<p>Manage services。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 最好将服务写完整</span>\nansible t1 -m systemd -a <span class="token string">&quot;name=crond.service  enabled=yes state=started&quot;</span>\nansible t1 -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;systemctl status crond&quot;</span> <span class="token comment"># 验证</span>\n</code></pre></div>',3),Mn={id:"_8-cron",tabindex:"-1"},En=a("a",{class:"header-anchor",href:"#_8-cron","aria-hidden":"true"},"#",-1),Fn=p(" 8. "),Nn={href:"https://docs.ansible.com/ansible/latest/modules/cron_module.html",target:"_blank",rel:"noopener noreferrer"},Pn=p("cron"),Yn=l('<p>Manage cron.d and crontab entries。</p><p>实践：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>ansible webservers -m <span class="token function">cron</span> -a <span class="token string">&quot;name=&#39;sync time&#39; minute=00 hour=00 job=&#39;/usr/sbin/ntpdate time.nist.gov &gt; /dev/null 2&gt;&amp;1&#39;&quot;</span> \nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;crontab -l&quot;</span> <span class="token comment"># 验证</span>\n\n<span class="token comment"># 删除任务</span>\nansible webservers -m <span class="token function">cron</span> -a <span class="token string">&quot;name=&#39;sync time&#39; state=absent&quot;</span> \nansible webservers -m <span class="token builtin class-name">command</span> -a <span class="token string">&quot;crontab -l&quot;</span> <span class="token comment"># 验证</span>\n</code></pre></div><h2 id="playbooks" tabindex="-1"><a class="header-anchor" href="#playbooks" aria-hidden="true">#</a> playbooks</h2><p>相对于 ad-hoc，playbooks 则强大的多，当然也复杂得多。playbook 由一个或多个 plays 组成，在 play 中，一组机器被映射为定义好的角色，其内容被称为 tasks（任务），在基本层次的应用中，一个任务是一个对 ansible 模块的调用。</p>',5),Dn=p("对于如何良好的实践这些内容，有一些整套的 "),Hn={href:"https://github.com/ansible/ansible-examples",target:"_blank",rel:"noopener noreferrer"},zn=p("playbooks"),Rn=p("。"),Cn=l('<h3 id="_1-one-play" tabindex="-1"><a class="header-anchor" href="#_1-one-play" aria-hidden="true">#</a> 1. one play</h3><div class="language-yaml ext-yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> webservers\n  <span class="token key atrule">vars</span><span class="token punctuation">:</span>\n    <span class="token key atrule">http_port</span><span class="token punctuation">:</span> <span class="token number">80</span>\n    <span class="token key atrule">max_clients</span><span class="token punctuation">:</span> <span class="token number">200</span>\n  <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root\n  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ensure apache is at the latest version\n    <span class="token key atrule">yum</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> httpd\n      <span class="token key atrule">state</span><span class="token punctuation">:</span> latest\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> write the apache config file\n    <span class="token key atrule">template</span><span class="token punctuation">:</span>\n      <span class="token key atrule">src</span><span class="token punctuation">:</span> /srv/httpd.j2\n      <span class="token key atrule">dest</span><span class="token punctuation">:</span> /etc/httpd.conf\n    <span class="token key atrule">notify</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> restart apache\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ensure apache is running\n    <span class="token key atrule">service</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> httpd\n      <span class="token key atrule">state</span><span class="token punctuation">:</span> started\n  <span class="token key atrule">handlers</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> restart apache\n      <span class="token key atrule">service</span><span class="token punctuation">:</span>\n        <span class="token key atrule">name</span><span class="token punctuation">:</span> httpd\n        <span class="token key atrule">state</span><span class="token punctuation">:</span> restarted\n</code></pre></div><h3 id="_2-multiple-plays" tabindex="-1"><a class="header-anchor" href="#_2-multiple-plays" aria-hidden="true">#</a> 2. multiple plays</h3><div class="language-yaml ext-yml"><pre class="language-yaml"><code><span class="token punctuation">---</span>\n<span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> webservers\n  <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root\n\n  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ensure apache is at the latest version\n    <span class="token key atrule">yum</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> httpd\n      <span class="token key atrule">state</span><span class="token punctuation">:</span> latest\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> write the apache config file\n    <span class="token key atrule">template</span><span class="token punctuation">:</span>\n      <span class="token key atrule">src</span><span class="token punctuation">:</span> /srv/httpd.j2\n      <span class="token key atrule">dest</span><span class="token punctuation">:</span> /etc/httpd.conf\n\n<span class="token punctuation">-</span> <span class="token key atrule">hosts</span><span class="token punctuation">:</span> databases\n  <span class="token key atrule">remote_user</span><span class="token punctuation">:</span> root\n\n  <span class="token key atrule">tasks</span><span class="token punctuation">:</span>\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ensure postgresql is at the latest version\n    <span class="token key atrule">yum</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> postgresql\n      <span class="token key atrule">state</span><span class="token punctuation">:</span> latest\n  <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> ensure that postgresql is started\n    <span class="token key atrule">service</span><span class="token punctuation">:</span>\n      <span class="token key atrule">name</span><span class="token punctuation">:</span> postgresql\n      <span class="token key atrule">state</span><span class="token punctuation">:</span> started\n</code></pre></div><h3 id="_3-directory-layout" tabindex="-1"><a class="header-anchor" href="#_3-directory-layout" aria-hidden="true">#</a> 3. Directory Layout</h3><div class="language-yaml ext-yml"><pre class="language-yaml"><code>production                <span class="token comment"># inventory file for production servers</span>\nstaging                   <span class="token comment"># inventory file for staging environment</span>\n\ngroup_vars/\n   group1.yml             <span class="token comment"># here we assign variables to particular groups</span>\n   group2.yml\nhost_vars/\n   hostname1.yml          <span class="token comment"># here we assign variables to particular systems</span>\n   hostname2.yml\n\nlibrary/                  <span class="token comment"># if any custom modules, put them here (optional)</span>\nmodule_utils/             <span class="token comment"># if any custom module_utils to support modules, put them here (optional)</span>\nfilter_plugins/           <span class="token comment"># if any custom filter plugins, put them here (optional)</span>\n\nsite.yml                  <span class="token comment"># master playbook</span>\nwebservers.yml            <span class="token comment"># playbook for webserver tier</span>\ndbservers.yml             <span class="token comment"># playbook for dbserver tier</span>\n\nroles/\n    common/               <span class="token comment"># this hierarchy represents a &quot;role&quot;</span>\n        tasks/            <span class="token comment">#</span>\n            main.yml      <span class="token comment">#  &lt;-- tasks file can include smaller files if warranted</span>\n        handlers/         <span class="token comment">#</span>\n            main.yml      <span class="token comment">#  &lt;-- handlers file</span>\n        templates/        <span class="token comment">#  &lt;-- files for use with the template resource</span>\n            ntp.conf.j2   <span class="token comment">#  &lt;------- templates end in .j2</span>\n        files/            <span class="token comment">#</span>\n            bar.txt       <span class="token comment">#  &lt;-- files for use with the copy resource</span>\n            foo.sh        <span class="token comment">#  &lt;-- script files for use with the script resource</span>\n        vars/             <span class="token comment">#</span>\n            main.yml      <span class="token comment">#  &lt;-- variables associated with this role</span>\n        defaults/         <span class="token comment">#</span>\n            main.yml      <span class="token comment">#  &lt;-- default lower priority variables for this role</span>\n        meta/             <span class="token comment">#</span>\n            main.yml      <span class="token comment">#  &lt;-- role dependencies</span>\n        library/          <span class="token comment"># roles can also include custom modules</span>\n        module_utils/     <span class="token comment"># roles can also include custom module_utils</span>\n        lookup_plugins/   <span class="token comment"># or other types of plugins, like lookup in this case</span>\n\n    webtier/              <span class="token comment"># same kind of structure as &quot;common&quot; was above, done for the webtier role</span>\n    monitoring/           <span class="token comment"># &quot;&quot;</span>\n    fooapp/               <span class="token comment"># &quot;&quot;</span>\n</code></pre></div><p>备用方案：</p><div class="language-yaml ext-yml"><pre class="language-yaml"><code>inventories/\n   production/\n      hosts               <span class="token comment"># inventory file for production servers</span>\n      group_vars/\n         group1.yml       <span class="token comment"># here we assign variables to particular groups</span>\n         group2.yml\n      host_vars/\n         hostname1.yml    <span class="token comment"># here we assign variables to particular systems</span>\n         hostname2.yml\n\n   staging/\n      hosts               <span class="token comment"># inventory file for staging environment</span>\n      group_vars/\n         group1.yml       <span class="token comment"># here we assign variables to particular groups</span>\n         group2.yml\n      host_vars/\n         stagehost1.yml   <span class="token comment"># here we assign variables to particular systems</span>\n         stagehost2.yml\n\nlibrary/\nmodule_utils/\nfilter_plugins/\n\nsite.yml\nwebservers.yml\ndbservers.yml\n\nroles/\n    common/\n    webtier/\n    monitoring/\n    fooapp/\n</code></pre></div>',8);var Gn=r(i,[["render",function(p,l){const r=n("RouterLink"),i=n("OutboundLink");return c(),s(o,null,[u,m,a("p",null,[k,e(r,{to:"/os/linux/login-with-rsa-key.html#%E7%94%9F%E6%88%90-rsa"},{default:t((()=>[d])),_:1}),h]),b,a("p",null,[y,a("a",g,[f,e(i)]),v]),_,a("h3",x,[w,q,a("a",j,[L,e(i)])]),A,a("p",null,[a("a",S,[I,e(i)]),M,e(r,{to:"/tools/github/download-huge-project-from-github.html"},{default:t((()=>[E])),_:1}),F]),N,a("p",null,[P,a("a",Y,[D,e(i)]),H,z,R]),C,a("h3",G,[O,U,a("a",W,[X,e(i)])]),B,a("h3",J,[K,Q,a("a",T,[V,e(i)])]),Z,a("h3",$,[nn,sn,a("a",an,[en,e(i)])]),tn,a("h3",on,[pn,ln,a("a",cn,[rn,e(i)])]),un,a("h3",mn,[kn,dn,a("a",hn,[bn,e(i)])]),yn,a("h3",gn,[fn,vn,a("a",_n,[xn,e(i)])]),wn,a("h3",qn,[jn,Ln,a("a",An,[Sn,e(i)])]),In,a("h3",Mn,[En,Fn,a("a",Nn,[Pn,e(i)])]),Yn,a("p",null,[Dn,a("a",Hn,[zn,e(i)]),Rn]),Cn],64)}]]);export{Gn as default};
