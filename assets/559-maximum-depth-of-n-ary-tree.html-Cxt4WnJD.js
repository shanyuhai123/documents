import{_ as a,c as s,a as t,o as p}from"./app-BoSqM2g3.js";const e={};function o(c,n){return p(),s("div",null,[...n[0]||(n[0]=[t(`<h1 id="n-叉树的最大深度" tabindex="-1"><a class="header-anchor" href="#n-叉树的最大深度"><span>N 叉树的最大深度</span></a></h1><p>可参考<a href="./104-maximum-depth-of-binary-tree">二叉树的最大深度</a>。</p><h2 id="递归" tabindex="-1"><a class="header-anchor" href="#递归"><span>递归</span></a></h2><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token operator">:</span> Node <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>root<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>child <span class="token operator">=&gt;</span> <span class="token function">maxDepth</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,4)])])}const r=a(e,[["render",o]]),i=JSON.parse('{"path":"/algorithms/559-maximum-depth-of-n-ary-tree.html","title":"N 叉树的最大深度","lang":"zh-CN","frontmatter":{"autoSort":-559},"headers":[{"level":2,"title":"递归","slug":"递归","link":"#递归","children":[]}],"git":{"updatedTime":1637758437000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/559-maximum-depth-of-n-ary-tree.md"}');export{r as comp,i as data};
