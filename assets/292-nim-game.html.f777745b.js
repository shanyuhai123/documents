import{e as n}from"./app.9b67e5d2.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},p=n(`<h1 id="nim-\u6E38\u620F" tabindex="-1"><a class="header-anchor" href="#nim-\u6E38\u620F" aria-hidden="true">#</a> Nim \u6E38\u620F</h1><h2 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h2><p>\u5224\u65AD\u6761\u4EF6\uFF1A</p><ul><li>1 - 3 \u5757\u77F3\u5934\u65F6\uFF0C\u53EF\u4E00\u6B21\u62FF\u5B8C\uFF0C\u80DC\u5229</li><li>4 \u5757\u77F3\u5934\u65F6\uFF0C\u65E0\u6CD5\u4E00\u6B21\u62FF\u5B8C\uFF0C\u4F1A\u5269 1 - 3 \u5757\uFF0C\u5931\u8D25\uFF0C\u53E6\u4E00\u65B9\u80DC\u5229\u6761\u4EF6\u8FBE\u6210</li><li>5 \u5757\u77F3\u5934\u65F6\uFF0C\u62FF\u8D70\u4E00\u5757\uFF0C\u5269 4 \u5757\uFF0C\u53E6\u4E00\u65B9\u5931\u8D25\u6761\u4EF6\u8FBE\u6210</li><li>8 \u5757\u77F3\u5934\u65F6\uFF0C\u53E6\u4E00\u65B9\u4F1A\u5269 4 \u5757\uFF0C\u5931\u8D25\u6761\u4EF6\u8FBE\u6210</li></ul><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">canWinNim</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4F18\u5316\u4E86\u7A7A\u95F4\u5374\u8FD8\u662F\u8D85\u65F6\u4E86\uFF0C\u6240\u4EE5\u53EF\u786E\u5B9A\u4E0D\u80FD\u7528\u5FAA\u73AF</span>
  <span class="token comment">// \u8FB9\u754C</span>
  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u72B6\u6001\u8F6C\u79FB</span>
    dp<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">!</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u6570\u5B66" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66" aria-hidden="true">#</a> \u6570\u5B66</h2><p>\u5728\u4E0A\u5F0F\u4E2D\u589E\u52A0 <code>log</code>\uFF0C\u4F1A\u53D1\u73B0 <code>dp</code> \u4E00\u76F4\u662F <code>[false, true, true, true]</code>\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">canWinNim</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> n <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">!==</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre></div>`,8);function t(o,e){return p}var u=s(a,[["render",t]]);export{u as default};
