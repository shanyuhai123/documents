import{r as o,c as e,a as n,b as t,F as c,e as s,d as p,o as u}from"./app.5799edae.js";import{_ as l}from"./plugin-vue_export-helper.5a098b48.js";const r={},i=s('<h1 id="\u6D4F\u89C8\u5668" tabindex="-1"><a class="header-anchor" href="#\u6D4F\u89C8\u5668" aria-hidden="true">#</a> \u6D4F\u89C8\u5668</h1><h2 id="\u8868\u5355\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u8868\u5355\u5904\u7406" aria-hidden="true">#</a> \u8868\u5355\u5904\u7406</h2><h3 id="_1-serializeform-\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#_1-serializeform-\u5E8F\u5217\u5316" aria-hidden="true">#</a> 1. serializeForm\uFF08\u5E8F\u5217\u5316\uFF09</h3><p><strong>FROM</strong></p>',4),k={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},d=p("30 seconds of code (Browser)"),g=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">serializeForm</span> <span class="token operator">=</span> <span class="token parameter">form</span> <span class="token operator">=&gt;</span>
  Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">field</span> <span class="token operator">=&gt;</span> field<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>encodeURIComponent<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&amp;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">serializeForm</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// email=test%40email.com&amp;name=Test%20Name</span>
</code></pre></div><h3 id="_2-serializeform-\u5BF9\u8C61\u5316" tabindex="-1"><a class="header-anchor" href="#_2-serializeform-\u5BF9\u8C61\u5316" aria-hidden="true">#</a> 2. serializeForm\uFF08\u5BF9\u8C61\u5316\uFF09</h3><p><strong>FROM</strong></p>`,6),f={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},h=p("30 seconds of code (Browser)"),m=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">formToObject</span> <span class="token operator">=</span> <span class="token parameter">form</span> <span class="token operator">=&gt;</span>
  Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span>form<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token operator">...</span>acc<span class="token punctuation">,</span>
      <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">:</span> value
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">formToObject</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { email: &#39;test@email.com&#39;, name: &#39;Test Name&#39; }</span>
</code></pre></div><h2 id="url" tabindex="-1"><a class="header-anchor" href="#url" aria-hidden="true">#</a> URL</h2><h3 id="_1-currenturl-\u5B8C\u6574" tabindex="-1"><a class="header-anchor" href="#_1-currenturl-\u5B8C\u6574" aria-hidden="true">#</a> 1. currentURL\uFF08\u5B8C\u6574\uFF09</h3><p><strong>FROM</strong></p>`,7),v={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},w=p("30 seconds of code (Browser)"),b=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">currentURL</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">currentURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;https://google.com&#39;</span>
</code></pre></div><h3 id="_2-geturlparameters-\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#_2-geturlparameters-\u53C2\u6570" aria-hidden="true">#</a> 2. getURLParameters\uFF08\u53C2\u6570\uFF09</h3><p><strong>FROM</strong></p>`,6),_={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},y=p("30 seconds of code (Browser)"),j=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getURLParameters</span> <span class="token operator">=</span> <span class="token parameter">url</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([^?=&amp;]+)(=([^&amp;]*))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>v<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> v<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>v<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getURLParameters</span><span class="token punctuation">(</span><span class="token string">&#39;http://url.com/page?name=Adam&amp;surname=Smith&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {name: &#39;Adam&#39;, surname: &#39;Smith&#39;}</span>
<span class="token function">getURLParameters</span><span class="token punctuation">(</span><span class="token string">&#39;google.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {}</span>
</code></pre></div><h3 id="_3-getbaseurl-\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_3-getbaseurl-\u57FA\u7840" aria-hidden="true">#</a> 3. getBaseURL\uFF08\u57FA\u7840\uFF09</h3><p><strong>FROM</strong></p>`,6),x={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},E=p("30 seconds of code (Browser)"),F=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getBaseURL</span> <span class="token operator">=</span> <span class="token parameter">url</span> <span class="token operator">=&gt;</span>
  url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> url<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> url<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> url<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getBaseURL</span><span class="token punctuation">(</span><span class="token string">&#39;http://url.com/page?name=Adam&amp;surname=Smith&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;http://url.com/page&#39;</span>
</code></pre></div><h2 id="\u6570\u7EC4\u8F6C\u4E3A\u5217\u8868" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u8F6C\u4E3A\u5217\u8868" aria-hidden="true">#</a> \u6570\u7EC4\u8F6C\u4E3A\u5217\u8868</h2><h3 id="_1-arraytohtmllist" tabindex="-1"><a class="header-anchor" href="#_1-arraytohtmllist" aria-hidden="true">#</a> 1. arrayToHtmlList</h3><p><strong>FROM</strong></p>`,7),O={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},M=p("30 seconds of code (Browser)"),S=s(`<p><strong>DETAILS\uFF1A</strong></p><p>\u539F\u5F0F\u4E2D\u4E3A\u6307\u5B9A id\uFF0C\u6B64\u5904\u4FEE\u6539\u4E3A\u5E7F\u6CDB\u7684 <code>selector</code>\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">arrayToHtmlList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token parameter">el</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span>el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>el<span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;li&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/li&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">arrayToHtmlList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;item 1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;item 2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;myListID&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u526A\u5207\u677F" tabindex="-1"><a class="header-anchor" href="#\u526A\u5207\u677F" aria-hidden="true">#</a> \u526A\u5207\u677F</h2><h3 id="_1-copytoclipboard" tabindex="-1"><a class="header-anchor" href="#_1-copytoclipboard" aria-hidden="true">#</a> 1. copyToClipboard</h3><p><strong>FROM</strong></p>`,9),N={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},T=p("30 seconds of code (Browser)"),q=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">copyToClipboard</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;textarea&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span>value <span class="token operator">=</span> str<span class="token punctuation">;</span>
  el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;readonly&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>position <span class="token operator">=</span> <span class="token string">&#39;absolute&#39;</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token string">&#39;-9999px&#39;</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> selected <span class="token operator">=</span>
    document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rangeCount <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRangeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">execCommand</span><span class="token punctuation">(</span><span class="token string">&#39;copy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>selected<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAllRanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    document<span class="token punctuation">.</span><span class="token function">getSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addRange</span><span class="token punctuation">(</span>selected<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">copyToClipboard</span><span class="token punctuation">(</span><span class="token string">&#39;Lorem ipsum&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Lorem ipsum&#39; copied to clipboard.</span>
</code></pre></div><h3 id="_2-navigator-clipboard" tabindex="-1"><a class="header-anchor" href="#_2-navigator-clipboard" aria-hidden="true">#</a> 2. navigator.clipboard</h3><p><strong>FROM</strong></p>`,6),L={href:"https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard",target:"_blank",rel:"noopener noreferrer"},C=p("w3c/clipboard-apis"),I=s(`<p><strong>DETAILS\uFF1A</strong></p><p>\u6D4F\u89C8\u5668\u63D0\u4F9B\u7684\u5B9E\u73B0\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;Howdy, partner!&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
navigator<span class="token punctuation">.</span>clipboard<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u6570\u503C\u53D8\u5316\u52A8\u753B" tabindex="-1"><a class="header-anchor" href="#\u6570\u503C\u53D8\u5316\u52A8\u753B" aria-hidden="true">#</a> \u6570\u503C\u53D8\u5316\u52A8\u753B</h2><h3 id="_1-counter" tabindex="-1"><a class="header-anchor" href="#_1-counter" aria-hidden="true">#</a> 1. counter</h3><p><strong>FROM</strong></p>`,7),A={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},R=p("30 seconds of code (Browser)"),U=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">counter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> step <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> duration <span class="token operator">=</span> <span class="token number">2000</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> current <span class="token operator">=</span> start<span class="token punctuation">,</span>
    _step <span class="token operator">=</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">*</span> step <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token operator">-</span>step <span class="token operator">:</span> step<span class="token punctuation">,</span>
    timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      current <span class="token operator">+=</span> _step<span class="token punctuation">;</span>
      document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> current<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> end<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>duration <span class="token operator">/</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> timer<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">counter</span><span class="token punctuation">(</span><span class="token string">&#39;#my-id&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Creates a 2-second timer for the element with id=&quot;my-id&quot;</span>
</code></pre></div><h2 id="\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4E8B\u4EF6" aria-hidden="true">#</a> \u4E8B\u4EF6</h2><h3 id="_1-createeventhub-\u53D1\u5E03\u3001\u8BA2\u9605\u4E2D\u5FC3" tabindex="-1"><a class="header-anchor" href="#_1-createeventhub-\u53D1\u5E03\u3001\u8BA2\u9605\u4E2D\u5FC3" aria-hidden="true">#</a> 1. createEventHub\uFF08\u53D1\u5E03\u3001\u8BA2\u9605\u4E2D\u5FC3\uFF09</h3><p><strong>FROM</strong></p>`,7),B={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},P=p("30 seconds of code (Browser)"),X=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createEventHub</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  hub<span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token function">emit</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">handler</span> <span class="token operator">=&gt;</span> <span class="token function">handler</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">on</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">off</span><span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> handler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> i <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">h</span> <span class="token operator">=&gt;</span> h <span class="token operator">===</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">delete</span> <span class="token keyword">this</span><span class="token punctuation">.</span>hub<span class="token punctuation">[</span>event<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">handler</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> hub <span class="token operator">=</span> <span class="token function">createEventHub</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> increment <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

<span class="token comment">// Subscribe: listen for different types of events</span>
hub<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
hub<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Message event fired&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
hub<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> increment<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Publish: emit events to invoke all handlers subscribed to them, passing the data to them as an argument</span>
hub<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;hello world&#39; and &#39;Message event fired&#39;</span>
hub<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> hello<span class="token operator">:</span> <span class="token string">&#39;world&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs the object and &#39;Message event fired&#39;</span>
hub<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">&#39;increment&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \`increment\` variable is now 1</span>

<span class="token comment">// Unsubscribe: stop a specific handler from listening to the &#39;message&#39; event</span>
hub<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">&#39;message&#39;</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_2-listenonce-\u4EC5\u76D1\u542C\u4E00\u6B21" tabindex="-1"><a class="header-anchor" href="#_2-listenonce-\u4EC5\u76D1\u542C\u4E00\u6B21" aria-hidden="true">#</a> 2. listenOnce\uFF08\u4EC5\u76D1\u542C\u4E00\u6B21\uFF09</h3><p><strong>FROM</strong></p>`,6),D={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},H=p("30 seconds of code (Browser)"),z=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">listenOnce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> evt<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fired <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>evt<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fired<span class="token punctuation">)</span> <span class="token function">fn</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    fired <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">listenOnce</span><span class="token punctuation">(</span>
  document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>&#39;my<span class="token operator">-</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;Hello world&#39; will only be logged on the first click</span>
</code></pre></div><h3 id="_3-on" tabindex="-1"><a class="header-anchor" href="#_3-on" aria-hidden="true">#</a> 3. on</h3><p><strong>FROM</strong></p>`,6),V={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},G=p("30 seconds of code (Browser)"),W=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">on</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> evt<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> opts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">delegatorFn</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>opts<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>evt<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>target <span class="token operator">?</span> delegatorFn <span class="token operator">:</span> fn<span class="token punctuation">,</span> opts<span class="token punctuation">.</span>options <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>opts<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token keyword">return</span> delegatorFn<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">on</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;!&#39; upon clicking the body</span>
<span class="token function">on</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token punctuation">{</span> target<span class="token operator">:</span> <span class="token string">&#39;p&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;!&#39; upon clicking a \`p\` element child of the body</span>
<span class="token function">on</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">,</span> <span class="token punctuation">{</span> options<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// use capturing instead of bubbling</span>
</code></pre></div><h3 id="_4-off" tabindex="-1"><a class="header-anchor" href="#_4-off" aria-hidden="true">#</a> 4. off</h3><p><strong>FROM</strong></p>`,6),$={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Y=p("30 seconds of code (Browser)"),J=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">off</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> evt<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> opts <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span>evt<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> opts<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">off</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span>body<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> fn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// no longer logs &#39;!&#39; upon clicking on the page</span>
</code></pre></div><h2 id="\u68C0\u6D4B" tabindex="-1"><a class="header-anchor" href="#\u68C0\u6D4B" aria-hidden="true">#</a> \u68C0\u6D4B</h2><h3 id="_1-detectdevicetype-\u8BBE\u5907\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#_1-detectdevicetype-\u8BBE\u5907\u7C7B\u578B" aria-hidden="true">#</a> 1. detectDeviceType\uFF08\u8BBE\u5907\u7C7B\u578B\uFF09</h3><p><strong>FROM</strong></p>`,7),K={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Q=p("30 seconds of code (Browser)"),Z=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">detectDeviceType</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">)</span>
    <span class="token operator">?</span> <span class="token string">&#39;Mobile&#39;</span>
    <span class="token operator">:</span> <span class="token string">&#39;Desktop&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">detectDeviceType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;Mobile&quot; or &quot;Desktop&quot;</span>
</code></pre></div><h3 id="_2-isbrowser-\u662F\u5426\u4E3A\u6D4F\u89C8\u5668" tabindex="-1"><a class="header-anchor" href="#_2-isbrowser-\u662F\u5426\u4E3A\u6D4F\u89C8\u5668" aria-hidden="true">#</a> 2. isBrowser\uFF08\u662F\u5426\u4E3A\u6D4F\u89C8\u5668\uFF09</h3><p><strong>FROM</strong></p>`,6),nn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},sn=p("30 seconds of code (Browser)"),an=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isBrowser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token punctuation">[</span><span class="token keyword">typeof</span> window<span class="token punctuation">,</span> <span class="token keyword">typeof</span> document<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true (browser)</span>
<span class="token function">isBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false (Node)</span>
</code></pre></div><h3 id="_3-isbrowsertabfocused-\u6807\u7B7E\u9875\u662F\u5426-actived" tabindex="-1"><a class="header-anchor" href="#_3-isbrowsertabfocused-\u6807\u7B7E\u9875\u662F\u5426-actived" aria-hidden="true">#</a> 3. isBrowserTabFocused\uFF08\u6807\u7B7E\u9875\u662F\u5426 actived\uFF09</h3><p><strong>FROM</strong></p>`,6),tn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},pn=p("30 seconds of code (Browser)"),on=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isBrowserTabFocused</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>document<span class="token punctuation">.</span>hidden<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isBrowserTabFocused</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_4-prefersdarkcolorscheme-\u4E3B\u9898" tabindex="-1"><a class="header-anchor" href="#_4-prefersdarkcolorscheme-\u4E3B\u9898" aria-hidden="true">#</a> 4. prefersDarkColorScheme\uFF08\u4E3B\u9898\uFF09</h3><p><strong>FROM</strong></p>`,6),en={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},cn=p("30 seconds of code (Browser)"),un=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">prefersDarkColorScheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  window <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>matchMedia <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">prefersLightColorScheme</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  window <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span>matchMedia <span class="token operator">&amp;&amp;</span> window<span class="token punctuation">.</span><span class="token function">matchMedia</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: light)&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>matches<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">prefersDarkColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">prefersLightColorScheme</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_4-supportstouchevents-touch" tabindex="-1"><a class="header-anchor" href="#_4-supportstouchevents-touch" aria-hidden="true">#</a> 4. supportsTouchEvents\uFF08touch\uFF09</h3><p><strong>FROM</strong></p>`,6),ln={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},rn=p("30 seconds of code (Browser)"),kn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">supportsTouchEvents</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  window <span class="token operator">&amp;&amp;</span>
  <span class="token punctuation">(</span><span class="token string">&#39;ontouchstart&#39;</span> <span class="token keyword">in</span> window <span class="token operator">||</span> window<span class="token punctuation">.</span>DocumentTouch <span class="token operator">&amp;&amp;</span> document <span class="token keyword">instanceof</span> <span class="token class-name">window<span class="token punctuation">.</span>DocumentTouch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">supportsTouchEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h2 id="dom-\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#dom-\u64CD\u4F5C" aria-hidden="true">#</a> DOM \u64CD\u4F5C</h2><h3 id="_1-createelement-\u521B\u5EFA" tabindex="-1"><a class="header-anchor" href="#_1-createelement-\u521B\u5EFA" aria-hidden="true">#</a> 1. createElement\uFF08\u521B\u5EFA\uFF09</h3><p><strong>FROM</strong></p>`,7),dn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},gn=p("30 seconds of code (Browser)"),fn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">createElement</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  el<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> str<span class="token punctuation">;</span>
  <span class="token keyword">return</span> el<span class="token punctuation">.</span>firstElementChild<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">createElement</span><span class="token punctuation">(</span>
  <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;div class=&quot;container&quot;&gt;
    &lt;p&gt;Hello!&lt;/p&gt;
  &lt;/div&gt;</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;container&#39;</span>
</code></pre></div><h3 id="_2-hide-show-\u663E-\u9690" tabindex="-1"><a class="header-anchor" href="#_2-hide-show-\u663E-\u9690" aria-hidden="true">#</a> 2. hide/show\uFF08\u663E/\u9690\uFF09</h3><p><strong>FROM</strong></p>`,6),hn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},mn=p("30 seconds of code (Browser)"),vn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">hide</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>el<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">show</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>el</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>el<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">hide</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hides all &lt;img&gt; elements on the page</span>

<span class="token function">show</span><span class="token punctuation">(</span><span class="token operator">...</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Shows all &lt;img&gt; elements on the page</span>
</code></pre></div><h3 id="_3-insertbefore-\u524D\u65B9\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#_3-insertbefore-\u524D\u65B9\u63D2\u5165" aria-hidden="true">#</a> 3. insertBefore\uFF08\u524D\u65B9\u63D2\u5165\uFF09</h3><p><strong>FROM</strong></p>`,6),wn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},bn=p("30 seconds of code (Browser)"),_n=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">insertBefore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> htmlString</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">&#39;beforebegin&#39;</span><span class="token punctuation">,</span> htmlString<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">insertBefore</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;p&gt;before&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &lt;p&gt;before&lt;/p&gt; &lt;div id=&quot;myId&quot;&gt;...&lt;/div&gt;</span>
</code></pre></div><h3 id="_4-insertafter-\u540E\u65B9\u63D2\u5165" tabindex="-1"><a class="header-anchor" href="#_4-insertafter-\u540E\u65B9\u63D2\u5165" aria-hidden="true">#</a> 4. insertAfter\uFF08\u540E\u65B9\u63D2\u5165\uFF09</h3><p><strong>FROM</strong></p>`,6),yn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},jn=p("30 seconds of code (Browser)"),xn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">insertAfter</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> htmlString</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span><span class="token function">insertAdjacentHTML</span><span class="token punctuation">(</span><span class="token string">&#39;afterend&#39;</span><span class="token punctuation">,</span> htmlString<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">insertAfter</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myId&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;&lt;p&gt;after&lt;/p&gt;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// &lt;div id=&quot;myId&quot;&gt;...&lt;/div&gt; &lt;p&gt;after&lt;/p&gt;</span>
</code></pre></div><h3 id="_5-scrolltotop-\u56DE\u5230\u9876\u90E8" tabindex="-1"><a class="header-anchor" href="#_5-scrolltotop-\u56DE\u5230\u9876\u90E8" aria-hidden="true">#</a> 5. scrollToTop\uFF08\u56DE\u5230\u9876\u90E8\uFF09</h3><p><strong>FROM</strong></p>`,6),En={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Fn=p("30 seconds of code (Browser)"),On=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">scrollToTop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> c <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>scrollToTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> c <span class="token operator">-</span> c <span class="token operator">/</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">scrollToTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_6-smoothscroll-\u5E73\u6ED1\u6EDA\u52A8" tabindex="-1"><a class="header-anchor" href="#_6-smoothscroll-\u5E73\u6ED1\u6EDA\u52A8" aria-hidden="true">#</a> 6. smoothScroll\uFF08\u5E73\u6ED1\u6EDA\u52A8\uFF09</h3><p><strong>FROM</strong></p>`,6),Mn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Sn=p("30 seconds of code (Browser)"),Nn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">smoothScroll</span> <span class="token operator">=</span> <span class="token parameter">element</span> <span class="token operator">=&gt;</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">scrollIntoView</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    behavior<span class="token operator">:</span> <span class="token string">&#39;smooth&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">smoothScroll</span><span class="token punctuation">(</span><span class="token string">&#39;#fooBar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// scrolls smoothly to the element with the id fooBar</span>
<span class="token function">smoothScroll</span><span class="token punctuation">(</span><span class="token string">&#39;.fooBar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// scrolls smoothly to the first element with a class of fooBar</span>
</code></pre></div><h2 id="dom-\u5173\u7CFB" tabindex="-1"><a class="header-anchor" href="#dom-\u5173\u7CFB" aria-hidden="true">#</a> DOM \u5173\u7CFB</h2><h3 id="_1-bottomvisible-\u9875\u9762\u5E95\u90E8" tabindex="-1"><a class="header-anchor" href="#_1-bottomvisible-\u9875\u9762\u5E95\u90E8" aria-hidden="true">#</a> 1. bottomVisible\uFF08\u9875\u9762\u5E95\u90E8\uFF09</h3><p><strong>FROM</strong></p>`,7),Tn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},qn=p("30 seconds of code (Browser)"),Ln=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">bottomVisible</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight <span class="token operator">+</span> window<span class="token punctuation">.</span>scrollY <span class="token operator">&gt;=</span>
  <span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollHeight <span class="token operator">||</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">bottomVisible</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="_2-elementcontains-\u4E24\u4E2A-dom-\u95F4" tabindex="-1"><a class="header-anchor" href="#_2-elementcontains-\u4E24\u4E2A-dom-\u95F4" aria-hidden="true">#</a> 2. elementContains\uFF08\u4E24\u4E2A DOM \u95F4\uFF09</h3><p><strong>FROM</strong></p>`,6),Cn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},In=p("30 seconds of code (Browser)"),An=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">elementContains</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">parent<span class="token punctuation">,</span> child</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> parent <span class="token operator">!==</span> child <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">elementContains</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;head&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">elementContains</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="_3-elementisvisibleinviewport-dom-\u53EF\u89C1" tabindex="-1"><a class="header-anchor" href="#_3-elementisvisibleinviewport-dom-\u53EF\u89C1" aria-hidden="true">#</a> 3. elementIsVisibleInViewport\uFF08DOM \u53EF\u89C1\uFF09</h3><p><strong>FROM</strong></p>`,6),Rn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Un=p("30 seconds of code (Browser)"),Bn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">elementIsVisibleInViewport</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> partiallyVisible <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> top<span class="token punctuation">,</span> left<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> right <span class="token punctuation">}</span> <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> innerHeight<span class="token punctuation">,</span> innerWidth <span class="token punctuation">}</span> <span class="token operator">=</span> window<span class="token punctuation">;</span>
  <span class="token keyword">return</span> partiallyVisible
    <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>top <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> top <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>bottom <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;</span> innerHeight<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span>left <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>right <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;</span> innerWidth<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> top <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> left <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> bottom <span class="token operator">&lt;=</span> innerHeight <span class="token operator">&amp;&amp;</span> right <span class="token operator">&lt;=</span> innerWidth<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// e.g. 100x100 viewport and a 10x10px element at position {top: -1, left: 0, bottom: 9, right: 10}</span>
<span class="token function">elementIsVisibleInViewport</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false - (not fully visible)</span>
<span class="token function">elementIsVisibleInViewport</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true - (partially visible)</span>
</code></pre></div><h2 id="dom-\u83B7\u53D6" tabindex="-1"><a class="header-anchor" href="#dom-\u83B7\u53D6" aria-hidden="true">#</a> DOM \u83B7\u53D6</h2><h3 id="_1-getimages-\u56FE\u7247" tabindex="-1"><a class="header-anchor" href="#_1-getimages-\u56FE\u7247" aria-hidden="true">#</a> 1. getImages\uFF08\u56FE\u7247\uFF09</h3><p><strong>FROM</strong></p>`,7),Pn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Xn=p("30 seconds of code (Browser)"),Dn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getImages</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> includeDuplicates <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> images <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>el<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;img&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">img</span> <span class="token operator">=&gt;</span> img<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> includeDuplicates <span class="token operator">?</span> images <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>images<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getImages</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;image1.jpg&#39;, &#39;image2.png&#39;, &#39;image1.png&#39;, &#39;...&#39;]</span>
<span class="token function">getImages</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;image1.jpg&#39;, &#39;image2.png&#39;, &#39;...&#39;]</span>
</code></pre></div><h3 id="_2-getstyle-setstyle-\u6837\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2-getstyle-setstyle-\u6837\u5F0F" aria-hidden="true">#</a> 2. getStyle/setStyle\uFF08\u6837\u5F0F\uFF09</h3><p><strong>FROM</strong></p>`,6),Hn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},zn=p("30 seconds of code (Browser)"),Vn=s(`<p><strong>DETAILS\uFF1A</strong></p><p>\u7701\u7565\u83B7\u53D6 DOM \u6B65\u9AA4\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span> ruleName</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">[</span>ruleName<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">setStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> ruleName<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>ruleName<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;font-size&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;16px&#39;</span>

<span class="token function">setStyle</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;p&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;font-size&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;20px&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// The first &lt;p&gt; element on the page will have a font-size of 20px</span>
</code></pre></div><h3 id="_3-hasclass-toggleclass-class" tabindex="-1"><a class="header-anchor" href="#_3-hasclass-toggleclass-class" aria-hidden="true">#</a> 3. hasClass/toggleClass\uFF08class\uFF09</h3><p><strong>FROM</strong></p>`,8),Gn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Wn=p("30 seconds of code (Browser)"),$n=s(`<p><strong>DETAILS\uFF1A</strong></p><p>\u7701\u7565\u83B7\u53D6 DOM \u6B65\u9AA4\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">hasClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">toggleClass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> el<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">hasClass</span><span class="token punctuation">(</span><span class="token string">&#39;p.special&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;special&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>

<span class="token function">toggleClass</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;p.special&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;special&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// The paragraph will not have the &#39;special&#39; class anymore</span>
</code></pre></div><h2 id="\u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E" aria-hidden="true">#</a> \u83B7\u53D6\u6EDA\u52A8\u6761\u4F4D\u7F6E</h2><h3 id="_1-getscrollposition" tabindex="-1"><a class="header-anchor" href="#_1-getscrollposition" aria-hidden="true">#</a> 1. getScrollPosition</h3><p><strong>FROM</strong></p>`,9),Yn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Jn=p("30 seconds of code (Browser)"),Kn=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getScrollPosition</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el <span class="token operator">=</span> window</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  x<span class="token operator">:</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageXOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">,</span>
  y<span class="token operator">:</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">!==</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> el<span class="token punctuation">.</span>pageYOffset <span class="token operator">:</span> el<span class="token punctuation">.</span>scrollTop
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getScrollPosition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {x: 0, y: 200}</span>
</code></pre></div><h2 id="http-\u8BF7\u6C42" tabindex="-1"><a class="header-anchor" href="#http-\u8BF7\u6C42" aria-hidden="true">#</a> HTTP \u8BF7\u6C42</h2><h3 id="_1-httppost-\u589E" tabindex="-1"><a class="header-anchor" href="#_1-httppost-\u589E" aria-hidden="true">#</a> 1. httpPost\uFF08\u589E\uFF09</h3><p><strong>FROM</strong></p>`,7),Qn={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Zn=p("30 seconds of code (Browser)"),ns=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">httpPost</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> err <span class="token operator">=</span> console<span class="token punctuation">.</span>error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json; charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">err</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> newPost <span class="token operator">=</span> <span class="token punctuation">{</span>
  userId<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  id<span class="token operator">:</span> <span class="token number">1337</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;Foo&#39;</span><span class="token punctuation">,</span>
  body<span class="token operator">:</span> <span class="token string">&#39;bar bar bar&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>newPost<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">httpPost</span><span class="token punctuation">(</span>
  <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts&#39;</span><span class="token punctuation">,</span>
  data<span class="token punctuation">,</span>
  console<span class="token punctuation">.</span>log
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*
Logs: {
  &quot;userId&quot;: 1,
  &quot;id&quot;: 1337,
  &quot;title&quot;: &quot;Foo&quot;,
  &quot;body&quot;: &quot;bar bar bar&quot;
}
*/</span>
<span class="token function">httpPost</span><span class="token punctuation">(</span>
  <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// does not send a body</span>
  console<span class="token punctuation">.</span>log
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*
Logs: {
  &quot;id&quot;: 101
}
*/</span>
</code></pre></div><h3 id="_2-httpdelete-\u5220" tabindex="-1"><a class="header-anchor" href="#_2-httpdelete-\u5220" aria-hidden="true">#</a> 2. httpDelete\uFF08\u5220\uFF09</h3><p><strong>FROM</strong></p>`,6),ss={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},as=p("30 seconds of code (Browser)"),ts=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">httpDelete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> err <span class="token operator">=</span> console<span class="token punctuation">.</span>error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">err</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">httpDelete</span><span class="token punctuation">(</span><span class="token string">&#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span><span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*
Logs: {}
*/</span>
</code></pre></div><h3 id="_3-httpput-\u6539" tabindex="-1"><a class="header-anchor" href="#_3-httpput-\u6539" aria-hidden="true">#</a> 3. httpPut\uFF08\u6539\uFF09</h3><p><strong>FROM</strong></p>`,6),ps={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},os=p("30 seconds of code (Browser)"),es=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">httpPut</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> err <span class="token operator">=</span> console<span class="token punctuation">.</span>error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;PUT&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json; charset=utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">err</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> password <span class="token operator">=</span> <span class="token string">&#39;fooBaz&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  title<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span>
  body<span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  userId<span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">httpPut</span><span class="token punctuation">(</span><span class="token string">&#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span><span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token parameter">request</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*
Logs: {
  id: 1,
  title: &#39;foo&#39;,
  body: &#39;bar&#39;,
  userId: 1
}
*/</span>
</code></pre></div><h3 id="_4-httpget-\u67E5" tabindex="-1"><a class="header-anchor" href="#_4-httpget-\u67E5" aria-hidden="true">#</a> 4. httpGet\uFF08\u67E5\uFF09</h3><p><strong>FROM</strong></p>`,6),cs={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},us=p("30 seconds of code (Browser)"),ls=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">httpGet</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> err <span class="token operator">=</span> console<span class="token punctuation">.</span>error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">err</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
  request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">httpGet</span><span class="token punctuation">(</span>
  <span class="token string">&#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span><span class="token punctuation">,</span>
  console<span class="token punctuation">.</span>log
<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/*
Logs: {
  &quot;userId&quot;: 1,
  &quot;id&quot;: 1,
  &quot;title&quot;: &quot;sunt aut facere repellat provident occaecati excepturi optio reprehenderit&quot;,
  &quot;body&quot;: &quot;quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto&quot;
}
*/</span>
</code></pre></div><h3 id="_5-httpsredirect-https-\u91CD\u5B9A\u5411" tabindex="-1"><a class="header-anchor" href="#_5-httpsredirect-https-\u91CD\u5B9A\u5411" aria-hidden="true">#</a> 5. httpsRedirect\uFF08https \u91CD\u5B9A\u5411\uFF09</h3><p><strong>FROM</strong></p>`,6),rs={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},is=p("30 seconds of code (Browser)"),ks=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">httpsRedirect</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>location<span class="token punctuation">.</span>protocol <span class="token operator">!==</span> <span class="token string">&#39;https:&#39;</span><span class="token punctuation">)</span> location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;https://&#39;</span> <span class="token operator">+</span> location<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;//&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">httpsRedirect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// If you are on http://mydomain.com, you are redirected to https://mydomain.com</span>
</code></pre></div><h2 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> cookie</h2><h3 id="_1-parsecookie-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#_1-parsecookie-\u89E3\u6790" aria-hidden="true">#</a> 1. parseCookie\uFF08\u89E3\u6790\uFF09</h3><p><strong>FROM</strong></p>`,7),ds={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},gs=p("30 seconds of code (Browser)"),fs=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">parseCookie</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span>
  str
    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      acc<span class="token punctuation">[</span><span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">decodeURIComponent</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> acc<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">parseCookie</span><span class="token punctuation">(</span><span class="token string">&#39;foo=bar; equation=E%3Dmc%5E2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { foo: &#39;bar&#39;, equation: &#39;E=mc^2&#39; }</span>
</code></pre></div><h3 id="_2-serializecookie-\u5E8F\u5217\u5316" tabindex="-1"><a class="header-anchor" href="#_2-serializecookie-\u5E8F\u5217\u5316" aria-hidden="true">#</a> 2. serializeCookie\uFF08\u5E8F\u5217\u5316\uFF09</h3><p><strong>FROM</strong></p>`,6),hs={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},ms=p("30 seconds of code (Browser)"),vs=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">serializeCookie</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">serializeCookie</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;foo=bar&#39;</span>
</code></pre></div><h2 id="\u5168\u5C4F" tabindex="-1"><a class="header-anchor" href="#\u5168\u5C4F" aria-hidden="true">#</a> \u5168\u5C4F</h2><h3 id="_1-fullscreen-\u8FDB\u5165" tabindex="-1"><a class="header-anchor" href="#_1-fullscreen-\u8FDB\u5165" aria-hidden="true">#</a> 1. fullscreen\uFF08\u8FDB\u5165\uFF09</h3><p><strong>FROM</strong></p><p>\u6574\u7406\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fullscreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">selector <span class="token operator">=</span> document<span class="token punctuation">.</span>body</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>selector<span class="token punctuation">.</span>requestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selector<span class="token punctuation">.</span><span class="token function">requestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selector<span class="token punctuation">.</span>mozRequestFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selector<span class="token punctuation">.</span><span class="token function">mozRequestFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selector<span class="token punctuation">.</span>webkitRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selector<span class="token punctuation">.</span><span class="token function">webkitRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>selector<span class="token punctuation">.</span>msRequestFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    selector<span class="token punctuation">.</span><span class="token function">msRequestFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">fullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_2-exitfullscreen-\u9000\u51FA" tabindex="-1"><a class="header-anchor" href="#_2-exitfullscreen-\u9000\u51FA" aria-hidden="true">#</a> 2. exitFullscreen\uFF08\u9000\u51FA\uFF09</h3><p><strong>FROM</strong></p><p>\u6574\u7406\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">exitFullscreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>exitFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">exitFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>mozCancelFullScreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">mozCancelFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>webkitExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">webkitExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>msExitFullscreen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">msExitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">exitFullscreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_3-isfullscreen-\u662F\u5426" tabindex="-1"><a class="header-anchor" href="#_3-isfullscreen-\u662F\u5426" aria-hidden="true">#</a> 3. isFullScreen\uFF08\u662F\u5426\uFF09</h3><p><strong>FROM</strong></p><p>\u6574\u7406\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isFullScreen</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span><span class="token punctuation">(</span>
    document<span class="token punctuation">.</span>fullscreen <span class="token operator">||</span>
    document<span class="token punctuation">.</span>mozFullScreen <span class="token operator">||</span>
    document<span class="token punctuation">.</span>webkitIsFullScreen <span class="token operator">||</span>
    document<span class="token punctuation">.</span>webkitFullScreen <span class="token operator">||</span>
    document<span class="token punctuation">.</span>msFullScreen
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isFullScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="_3-getfullscreenelement-\u5168\u5C4F\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#_3-getfullscreenelement-\u5168\u5C4F\u8282\u70B9" aria-hidden="true">#</a> 3. getFullscreenElement\uFF08\u5168\u5C4F\u8282\u70B9\uFF09</h3><p><strong>FROM</strong></p><p>\u6574\u7406\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getFullscreenElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    document<span class="token punctuation">.</span>fullscreenElement <span class="token operator">||</span>
    document<span class="token punctuation">.</span>mozFullScreenElement <span class="token operator">||</span>
    document<span class="token punctuation">.</span>msFullScreenElement <span class="token operator">||</span>
    document<span class="token punctuation">.</span>webkitFullscreenElement <span class="token operator">||</span>
    <span class="token keyword">null</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getFullscreenElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;section class=&quot;full&quot;&gt;&lt;/section&gt;</span>
</code></pre></div><h2 id="\u8BED\u97F3" tabindex="-1"><a class="header-anchor" href="#\u8BED\u97F3" aria-hidden="true">#</a> \u8BED\u97F3</h2><h3 id="_1-speechsynthesis-\u6587\u5B57" tabindex="-1"><a class="header-anchor" href="#_1-speechsynthesis-\u6587\u5B57" aria-hidden="true">#</a> 1. speechSynthesis\uFF08\u6587\u5B57\uFF09</h3><p><strong>FROM</strong></p><p>\u6574\u7406\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">speechSynthesis</span> <span class="token operator">=</span> <span class="token parameter">message</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechSynthesisUtterance</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  msg<span class="token punctuation">.</span>voice <span class="token operator">=</span> window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">getVoices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">speechSynthesis</span><span class="token punctuation">(</span><span class="token string">&#39;Hello, World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406" aria-hidden="true">#</a> \u5904\u7406</h2><h3 id="_1-prefix-\u524D\u7F00" tabindex="-1"><a class="header-anchor" href="#_1-prefix-\u524D\u7F00" aria-hidden="true">#</a> 1. prefix\uFF08\u524D\u7F00\uFF09</h3><p><strong>FROM</strong></p>`,44),ws={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},bs=p("30 seconds of code (Browser)"),_s=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">prefix</span> <span class="token operator">=</span> <span class="token parameter">prop</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> capitalizedProp <span class="token operator">=</span> prop<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> prop<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> prefixes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;webkit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;moz&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ms&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> i <span class="token operator">=</span> prefixes<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span>
    <span class="token parameter">prefix</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>style<span class="token punctuation">[</span>prefix <span class="token operator">?</span> prefix <span class="token operator">+</span> capitalizedProp <span class="token operator">:</span> prop<span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> i <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">?</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> prop <span class="token operator">:</span> prefixes<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> capitalizedProp<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">prefix</span><span class="token punctuation">(</span><span class="token string">&#39;appearance&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;appearance&#39; on a supported browser, otherwise &#39;webkitAppearance&#39;, &#39;mozAppearance&#39;, &#39;msAppearance&#39; or &#39;oAppearance&#39;</span>
</code></pre></div><h3 id="_2-uuidgeneratorbrowser-uuid" tabindex="-1"><a class="header-anchor" href="#_2-uuidgeneratorbrowser-uuid" aria-hidden="true">#</a> 2. UUIDGeneratorBrowser\uFF08UUID\uFF09</h3><p><strong>FROM</strong></p>`,6),ys={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},js=p("30 seconds of code (Browser)"),xs=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">UUIDGeneratorBrowser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1e7</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">1e3</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">4e3</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">8e3</span> <span class="token operator">+</span> <span class="token operator">-</span><span class="token number">1e11</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[018]</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token parameter">c</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">(</span>c <span class="token operator">^</span> <span class="token punctuation">(</span>crypto<span class="token punctuation">.</span><span class="token function">getRandomValues</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">15</span> <span class="token operator">&gt;&gt;</span> <span class="token punctuation">(</span>c <span class="token operator">/</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">UUIDGeneratorBrowser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;7982fcfe-5721-4632-bede-6000885be57d&#39;</span>
</code></pre></div><h2 id="\u672A\u7406\u89E3" tabindex="-1"><a class="header-anchor" href="#\u672A\u7406\u89E3" aria-hidden="true">#</a> \u672A\u7406\u89E3</h2><h3 id="_1-observemutations" tabindex="-1"><a class="header-anchor" href="#_1-observemutations" aria-hidden="true">#</a> 1. observeMutations</h3><p><strong>FROM</strong></p>`,7),Es={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Fs=p("30 seconds of code (Browser)"),Os=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">observeMutations</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> callback<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> observer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MutationObserver</span><span class="token punctuation">(</span><span class="token parameter">mutations</span> <span class="token operator">=&gt;</span> mutations<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  observer<span class="token punctuation">.</span><span class="token function">observe</span><span class="token punctuation">(</span>
    element<span class="token punctuation">,</span>
    Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        childList<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        attributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        attributeOldValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        characterData<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        characterDataOldValue<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        subtree<span class="token operator">:</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      options
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> observer<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> obs <span class="token operator">=</span> <span class="token function">observeMutations</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Logs all mutations that happen on the page</span>
obs<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Disconnects the observer and stops logging mutations on the page</span>
</code></pre></div><h3 id="_2-onuserinputchange" tabindex="-1"><a class="header-anchor" href="#_2-onuserinputchange" aria-hidden="true">#</a> 2. onUserInputChange</h3><p><strong>FROM</strong></p>`,6),Ms={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Ss=p("30 seconds of code (Browser)"),Ns=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">onUserInputChange</span> <span class="token operator">=</span> <span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&#39;mouse&#39;</span><span class="token punctuation">,</span>
    lastTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mousemoveHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastTime <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token string">&#39;mouse&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">callback</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mousemoveHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    lastTime <span class="token operator">=</span> now<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;touchstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;touch&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token string">&#39;touch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">callback</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mousemoveHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">onUserInputChange</span><span class="token punctuation">(</span><span class="token parameter">type</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;The user is now using&#39;</span><span class="token punctuation">,</span> type<span class="token punctuation">,</span> <span class="token string">&#39;as an input method.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_3-recordanimationframes" tabindex="-1"><a class="header-anchor" href="#_3-recordanimationframes" aria-hidden="true">#</a> 3. recordAnimationFrames</h3><p><strong>FROM</strong></p>`,6),Ts={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},qs=p("30 seconds of code (Browser)"),Ls=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">recordAnimationFrames</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">callback<span class="token punctuation">,</span> autoStart <span class="token operator">=</span> <span class="token boolean">true</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    raf<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">stop</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    running <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">cancelAnimationFrame</span><span class="token punctuation">(</span>raf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">start</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    running <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    raf <span class="token operator">=</span> <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>running<span class="token punctuation">)</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>autoStart<span class="token punctuation">)</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> start<span class="token punctuation">,</span> stop <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>t <span class="token function-variable function">onUserInputChange</span> <span class="token operator">=</span> <span class="token parameter">callback</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">&#39;mouse&#39;</span><span class="token punctuation">,</span>
    lastTime <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mousemoveHandler</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> now <span class="token operator">=</span> performance<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>now <span class="token operator">-</span> lastTime <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span>
      <span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token string">&#39;mouse&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">callback</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mousemoveHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    lastTime <span class="token operator">=</span> now<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;touchstart&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>type <span class="token operator">===</span> <span class="token string">&#39;touch&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">(</span>type <span class="token operator">=</span> <span class="token string">&#39;touch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">callback</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mousemove&#39;</span><span class="token punctuation">,</span> mousemoveHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">cb</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Animation frame fired&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> recorder <span class="token operator">=</span> <span class="token function">recordAnimationFrames</span><span class="token punctuation">(</span>cb<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// logs &#39;Animation frame fired&#39; on each animation frame</span>
recorder<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stops logging</span>
recorder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// starts again</span>
<span class="token keyword">const</span> recorder2 <span class="token operator">=</span> <span class="token function">recordAnimationFrames</span><span class="token punctuation">(</span>cb<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \`start\` needs to be explicitly called to begin recording frames</span>
</code></pre></div><h3 id="_4-renderelement" tabindex="-1"><a class="header-anchor" href="#_4-renderelement" aria-hidden="true">#</a> 4. renderElement</h3><p><strong>FROM</strong></p>`,6),Cs={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Is=p("30 seconds of code (Browser)"),As=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">renderElement</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> container</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isTextElement <span class="token operator">=</span> <span class="token operator">!</span>type<span class="token punctuation">;</span>
  <span class="token keyword">const</span> element <span class="token operator">=</span> isTextElement
    <span class="token operator">?</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">isListener</span> <span class="token operator">=</span> <span class="token parameter">p</span> <span class="token operator">=&gt;</span> p<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&#39;on&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">isAttribute</span> <span class="token operator">=</span> <span class="token parameter">p</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token function">isListener</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> p <span class="token operator">!==</span> <span class="token string">&#39;children&#39;</span><span class="token punctuation">;</span>

  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isAttribute</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> element<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> props<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isTextElement <span class="token operator">&amp;&amp;</span> <span class="token function">isListener</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span>
      element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> props<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isTextElement <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>children <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    props<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">childElement</span> <span class="token operator">=&gt;</span> <span class="token function">renderElement</span><span class="token punctuation">(</span>childElement<span class="token punctuation">,</span> element<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  container<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> myElement <span class="token operator">=</span> <span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span>
  props<span class="token operator">:</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> <span class="token string">&#39;button&#39;</span><span class="token punctuation">,</span>
    className<span class="token operator">:</span> <span class="token string">&#39;btn&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">onClick</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Clicked&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    children<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> props<span class="token operator">:</span> <span class="token punctuation">{</span> nodeValue<span class="token operator">:</span> <span class="token string">&#39;Click me&#39;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">renderElement</span><span class="token punctuation">(</span>
  myElement<span class="token punctuation">,</span>
  document<span class="token punctuation">.</span>body
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="_5-runasync" tabindex="-1"><a class="header-anchor" href="#_5-runasync" aria-hidden="true">#</a> 5. runAsync</h3><p><strong>FROM</strong></p>`,6),Rs={href:"https://www.30secondsofcode.org/tag/browser",target:"_blank",rel:"noopener noreferrer"},Us=p("30 seconds of code (Browser)"),Bs=s(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">runAsync</span> <span class="token operator">=</span> <span class="token parameter">fn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> worker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Worker</span><span class="token punctuation">(</span>
    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">postMessage((</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)());</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      type<span class="token operator">:</span> <span class="token string">&#39;application/javascript; charset=utf-8&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res<span class="token punctuation">,</span> rej</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    worker<span class="token punctuation">.</span><span class="token function-variable function">onmessage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> data <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">res</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span> worker<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    worker<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">rej</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">,</span> worker<span class="token punctuation">.</span><span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">longRunningFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">1000</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">700</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> result <span class="token operator">=</span> result <span class="token operator">+</span> i <span class="token operator">+</span> j <span class="token operator">+</span> k<span class="token punctuation">;</span>

  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">/*
  NOTE: Since the function is running in a different context, closures are not supported.
  The function supplied to \`runAsync\` gets stringified, so everything becomes literal.
  All variables and functions must be defined inside.
*/</span>
<span class="token function">runAsync</span><span class="token punctuation">(</span>longRunningFunction<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 209685000000</span>
<span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1000</span>
<span class="token keyword">let</span> outsideVariable <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span>
<span class="token function">runAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">typeof</span> outsideVariable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;undefined&#39;</span>
</code></pre></div>`,4);function Ps(Xs,Ds){const a=o("OutboundLink");return u(),e(c,null,[i,n("p",null,[n("a",k,[d,t(a)])]),g,n("p",null,[n("a",f,[h,t(a)])]),m,n("p",null,[n("a",v,[w,t(a)])]),b,n("p",null,[n("a",_,[y,t(a)])]),j,n("p",null,[n("a",x,[E,t(a)])]),F,n("p",null,[n("a",O,[M,t(a)])]),S,n("p",null,[n("a",N,[T,t(a)])]),q,n("p",null,[n("a",L,[C,t(a)])]),I,n("p",null,[n("a",A,[R,t(a)])]),U,n("p",null,[n("a",B,[P,t(a)])]),X,n("p",null,[n("a",D,[H,t(a)])]),z,n("p",null,[n("a",V,[G,t(a)])]),W,n("p",null,[n("a",$,[Y,t(a)])]),J,n("p",null,[n("a",K,[Q,t(a)])]),Z,n("p",null,[n("a",nn,[sn,t(a)])]),an,n("p",null,[n("a",tn,[pn,t(a)])]),on,n("p",null,[n("a",en,[cn,t(a)])]),un,n("p",null,[n("a",ln,[rn,t(a)])]),kn,n("p",null,[n("a",dn,[gn,t(a)])]),fn,n("p",null,[n("a",hn,[mn,t(a)])]),vn,n("p",null,[n("a",wn,[bn,t(a)])]),_n,n("p",null,[n("a",yn,[jn,t(a)])]),xn,n("p",null,[n("a",En,[Fn,t(a)])]),On,n("p",null,[n("a",Mn,[Sn,t(a)])]),Nn,n("p",null,[n("a",Tn,[qn,t(a)])]),Ln,n("p",null,[n("a",Cn,[In,t(a)])]),An,n("p",null,[n("a",Rn,[Un,t(a)])]),Bn,n("p",null,[n("a",Pn,[Xn,t(a)])]),Dn,n("p",null,[n("a",Hn,[zn,t(a)])]),Vn,n("p",null,[n("a",Gn,[Wn,t(a)])]),$n,n("p",null,[n("a",Yn,[Jn,t(a)])]),Kn,n("p",null,[n("a",Qn,[Zn,t(a)])]),ns,n("p",null,[n("a",ss,[as,t(a)])]),ts,n("p",null,[n("a",ps,[os,t(a)])]),es,n("p",null,[n("a",cs,[us,t(a)])]),ls,n("p",null,[n("a",rs,[is,t(a)])]),ks,n("p",null,[n("a",ds,[gs,t(a)])]),fs,n("p",null,[n("a",hs,[ms,t(a)])]),vs,n("p",null,[n("a",ws,[bs,t(a)])]),_s,n("p",null,[n("a",ys,[js,t(a)])]),xs,n("p",null,[n("a",Es,[Fs,t(a)])]),Os,n("p",null,[n("a",Ms,[Ss,t(a)])]),Ns,n("p",null,[n("a",Ts,[qs,t(a)])]),Ls,n("p",null,[n("a",Cs,[Is,t(a)])]),As,n("p",null,[n("a",Rs,[Us,t(a)])]),Bs],64)}var Vs=l(r,[["render",Ps]]);export{Vs as default};
