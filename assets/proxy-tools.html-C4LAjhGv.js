import{_ as a,c as n,a as e,o as p}from"./app-DNXRdI82.js";const l={};function t(o,s){return p(),n("div",null,s[0]||(s[0]=[e(`<h1 id="代理工具" tabindex="-1"><a class="header-anchor" href="#代理工具"><span>代理工具</span></a></h1><h2 id="shadowsocks" tabindex="-1"><a class="header-anchor" href="#shadowsocks"><span>Shadowsocks</span></a></h2><h3 id="_1-安装" tabindex="-1"><a class="header-anchor" href="#_1-安装"><span>1. 安装</span></a></h3><p>通过任意形式安装即可。</p><h3 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置"><span>2. 配置</span></a></h3><p>配置文件在 <code>/etc/shadowsocks/config.json</code>：</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;server&quot;</span><span class="token operator">:</span> <span class="token string">&quot;xxx.xxx.xxx.xxx&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;server_port&quot;</span><span class="token operator">:</span> port<span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;local_address&quot;</span><span class="token operator">:</span> <span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;local_port&quot;</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yourpassword&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;timeout&quot;</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aes-256-cfb&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;fast_open&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;workers&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;prefer_ipv6&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>文件名可以自定，且可以设置多个文件方便快速切换。</p><h3 id="_3-指定配置" tabindex="-1"><a class="header-anchor" href="#_3-指定配置"><span>3. 指定配置</span></a></h3><p>指定一个配置文件，如之前的 <code>config.json</code> 文件：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">sslocal <span class="token parameter variable">-c</span> /etc/shadowsocks/config.json</span>
<span class="line"></span></code></pre></div><h3 id="_4-启动" tabindex="-1"><a class="header-anchor" href="#_4-启动"><span>4. 启动</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 通过 \`@\` 指定配置 </span></span>
<span class="line">systemctl start shadowsocks@config</span>
<span class="line">systemctl <span class="token builtin class-name">enable</span> shadowsocks@config</span>
<span class="line"></span></code></pre></div><h2 id="qv2ray" tabindex="-1"><a class="header-anchor" href="#qv2ray"><span>Qv2ray</span></a></h2><blockquote><p>Qv2ray 在 manjaro 下经常一更新系统就崩，伤透了心</p></blockquote><h2 id="clash" tabindex="-1"><a class="header-anchor" href="#clash"><span>Clash</span></a></h2><h3 id="_1-安装-1" tabindex="-1"><a class="header-anchor" href="#_1-安装-1"><span>1. 安装</span></a></h3><p>在 <a href="https://github.com/Dreamacro/clash/releases" target="_blank" rel="noopener noreferrer">release</a> 中选择一个适合你的，并解压。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">cp</span> ~/downloads/clash /usr/local/bin</span>
<span class="line"></span></code></pre></div><h3 id="_2-初试" tabindex="-1"><a class="header-anchor" href="#_2-初试"><span>2. 初试</span></a></h3><p>直接运行：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> /usr/local/bin</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出</span></span>
<span class="line">INFO<span class="token punctuation">[</span>0000<span class="token punctuation">]</span> Can<span class="token string">&#39;t find config, create a initial config file</span>
<span class="line">INFO[0000] Can&#39;</span>t <span class="token function">find</span> MMDB, start download</span>
<span class="line">INFO<span class="token punctuation">[</span>0000<span class="token punctuation">]</span> Mixed<span class="token punctuation">(</span>http+socks5<span class="token punctuation">)</span> proxy listening at: <span class="token number">127.0</span>.0.1:7890</span>
<span class="line"></span></code></pre></div><p>然后呢？</p><h3 id="_3-配置" tabindex="-1"><a class="header-anchor" href="#_3-配置"><span>3. 配置</span></a></h3><p>在一些教程中能够直接解析服务商提供的 base64，但我失败了，于是采取了取巧的方案，从已有的导出 <code>config.yaml</code> 配置即可。</p><h3 id="_4-守护进程" tabindex="-1"><a class="header-anchor" href="#_4-守护进程"><span>4. 守护进程</span></a></h3><p>移入配置：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">cp</span> ~/downloads/config.yaml /etc/clash</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">cp</span> ~/downloads/Country.mmdb /etc/clash</span>
<span class="line"></span></code></pre></div><p>新增 <code>systemd</code> 配置 <code>/etc/systemd/system/clash.service</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span></span>
<span class="line"><span class="token assign-left variable">Description</span><span class="token operator">=</span>Clash daemon, A rule-based proxy <span class="token keyword">in</span> Go.</span>
<span class="line"><span class="token assign-left variable">After</span><span class="token operator">=</span>network.target</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>Service<span class="token punctuation">]</span></span>
<span class="line"><span class="token assign-left variable">Type</span><span class="token operator">=</span>simple</span>
<span class="line"><span class="token assign-left variable">Restart</span><span class="token operator">=</span>always</span>
<span class="line"><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/bin/clash <span class="token parameter variable">-d</span> /etc/clash</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span>Install<span class="token punctuation">]</span></span>
<span class="line"><span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target</span>
<span class="line"></span></code></pre></div><p>启动：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 其他一致</span></span>
<span class="line"><span class="token function">sudo</span> systemctl start clash.service</span>
<span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> clash.service</span>
<span class="line"></span></code></pre></div><h3 id="_5-premium-版" tabindex="-1"><a class="header-anchor" href="#_5-premium-版"><span>5. premium 版</span></a></h3><p>越来越多的服务提供了 <code>proxy-groups</code> 及 <code>tun</code> 功能，这会导致普通版本的 <code>clash</code> 解析配置失败。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 移除原有服务</span></span>
<span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-R</span> clash</span>
<span class="line"><span class="token function">sudo</span> systemctl stop clash.service</span>
<span class="line"><span class="token function">sudo</span> systemctl disable clash.service</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装 premium 版</span></span>
<span class="line">yay <span class="token parameter variable">-S</span> clash-premium-bin</span>
<span class="line"><span class="token function">sudo</span> systemctl start clash.service</span>
<span class="line"><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> clash.service</span>
<span class="line"></span></code></pre></div>`,35)]))}const i=a(l,[["render",t],["__file","proxy-tools.html.vue"]]),r=JSON.parse('{"path":"/os/manjaro/proxy-tools.html","title":"代理工具","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Shadowsocks","slug":"shadowsocks","link":"#shadowsocks","children":[{"level":3,"title":"1. 安装","slug":"_1-安装","link":"#_1-安装","children":[]},{"level":3,"title":"2. 配置","slug":"_2-配置","link":"#_2-配置","children":[]},{"level":3,"title":"3. 指定配置","slug":"_3-指定配置","link":"#_3-指定配置","children":[]},{"level":3,"title":"4. 启动","slug":"_4-启动","link":"#_4-启动","children":[]}]},{"level":2,"title":"Qv2ray","slug":"qv2ray","link":"#qv2ray","children":[]},{"level":2,"title":"Clash","slug":"clash","link":"#clash","children":[{"level":3,"title":"1. 安装","slug":"_1-安装-1","link":"#_1-安装-1","children":[]},{"level":3,"title":"2. 初试","slug":"_2-初试","link":"#_2-初试","children":[]},{"level":3,"title":"3. 配置","slug":"_3-配置","link":"#_3-配置","children":[]},{"level":3,"title":"4. 守护进程","slug":"_4-守护进程","link":"#_4-守护进程","children":[]},{"level":3,"title":"5. premium 版","slug":"_5-premium-版","link":"#_5-premium-版","children":[]}]}],"git":{"updatedTime":1680953192000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":4,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"os/manjaro/proxy-tools.md"}');export{i as comp,r as data};
