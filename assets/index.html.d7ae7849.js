import{e as n}from"./app.cbd3758a.js";import{_ as a}from"./plugin-vue_export-helper.5a098b48.js";const s={},p=n(`<h1 id="\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u7B97\u6CD5" aria-hidden="true">#</a> \u7B97\u6CD5</h1><blockquote><p>\u7B97\u6CD5\u662F\u5F88\u91CD\u8981\u7684\uFF0C\u4F46\u6211\u61D2\u3002</p></blockquote><h2 id="\u4E00\u4E9B\u601D\u60F3" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E9B\u601D\u60F3" aria-hidden="true">#</a> \u4E00\u4E9B\u601D\u60F3</h2><h3 id="\u9012\u5F52" tabindex="-1"><a class="header-anchor" href="#\u9012\u5F52" aria-hidden="true">#</a> \u9012\u5F52</h3><blockquote><p>\u8981\u7406\u89E3\u9012\u5F52\uFF0C\u5C31\u5F97\u5148\u7406\u89E3\u4EC0\u4E48\u662F\u9012\u5F52\u3002</p></blockquote><p>\u9012\u5F52\u7684\u57FA\u672C\u601D\u60F3\u662F\u76F4\u63A5\u6216\u95F4\u63A5\u7684\u8C03\u7528\u81EA\u8EAB\uFF0C\u8FD9\u6837\u539F\u95EE\u9898\u7684\u6C42\u89E3\u5C31\u88AB\u8F6C\u4E3A\u4E86\u8BB8\u591A\u6027\u8D28\u76F8\u540C\u4F46\u662F\u89C4\u6A21\u66F4\u5C0F\u7684\u5B50\u95EE\u9898\u3002 \u9012\u5F52\u6700\u91CD\u8981\u7684\u4E24\u4E2A\u7279\u5F81\uFF1A\u8C03\u7528\u81EA\u8EAB\u3001\u7ED3\u675F\u6761\u4EF6\u3002\u8C03\u7528\u81EA\u8EAB\u662F\u5728\u89E3\u51B3\u5B50\u95EE\u9898\uFF0C\u800C\u7ED3\u675F\u6761\u4EF6\u5219\u4E00\u822C\u4E3A\u6700\u7B80\u5B50\u95EE\u9898\u7684\u7B54\u6848\u3002 \u6267\u884C\u51FD\u6570\u65F6\u4F1A\u521B\u5EFA\u5BF9\u5E94\u7684\u6267\u884C\u4E0A\u4E0B\u6587\u6808\uFF0C\u800C\u6808\u88AB\u521B\u5EFA\u8FC7\u591A\u5C42\u65F6\u5B58\u5728 <strong>\u6808\u6EA2\u51FA</strong> \u7684\u98CE\u9669\u3002</p><h3 id="\u5206\u6CBB" tabindex="-1"><a class="header-anchor" href="#\u5206\u6CBB" aria-hidden="true">#</a> \u5206\u6CBB</h3><p>\u5206\u6CBB\u7684\u6838\u5FC3\u601D\u60F3\u5C31\u662F \u201C\u5206\u800C\u6CBB\u4E4B\u201D\uFF1A</p><ol><li>\u5206\u89E3\uFF1A\u5C06\u539F\u95EE\u9898\u5206\u89E3\u4E3A\u76F8\u4E92\u72EC\u7ACB\uFF0C\u4E0E\u539F\u95EE\u9898\u5F62\u5F0F\u76F8\u540C\u7684\u5B50\u95EE\u9898</li><li>\u89E3\u51B3\uFF1A\u5206\u89E3\u5230\u67D0\u4E2A\u5BB9\u6613\u6C42\u89E3\u7684\u8FB9\u754C\u540E\uFF0C\u9012\u5F52\u6C42\u89E3</li><li>\u5408\u5E76\uFF1A\u5C06\u5B50\u95EE\u9898\u7684\u89E3\u5408\u5E76\u4E3A\u539F\u95EE\u9898\u7684\u89E3</li></ol><h3 id="\u52A8\u6001\u89C4\u5212" tabindex="-1"><a class="header-anchor" href="#\u52A8\u6001\u89C4\u5212" aria-hidden="true">#</a> \u52A8\u6001\u89C4\u5212</h3><blockquote><p>\u4F7F\u7528\u5206\u6CBB\u6CD5\u65F6\uFF0C\u82E5\u5B50\u95EE\u9898\u5E76\u4E0D\u72EC\u7ACB\uFF0C\u5219\u66F4\u63A8\u8350\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u3002</p></blockquote><h3 id="\u8D2A\u5FC3\u7B97\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5FC3\u7B97\u6CD5" aria-hidden="true">#</a> \u8D2A\u5FC3\u7B97\u6CD5</h3><p>\u8D2A\u5FC3\u7B97\u6CD5\u662F\u4E00\u79CD\u5728\u6BCF\u4E00\u6B65\u9009\u62E9\u4E2D\u90FD\u91C7\u53D6\u5F53\u524D\u72B6\u6001\u4E0B\u6700\u597D\u6216\u6700\u4F18\u9009\u62E9\uFF0C\u4ECE\u800C\u5E0C\u671B\u5BFC\u81F4\u7ED3\u679C\u662F\u6700\u597D\u6216\u6700\u4F18\u7B97\u6CD5\u3002 \u8D2A\u5FC3\u7B97\u6CD5\u4E0E\u52A8\u6001\u89C4\u5212\u7684\u4E0D\u540C\u5728\u4E8E\u5B83\u5BF9\u6BCF\u4E2A\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6848\u90FD\u505A\u51FA\u9009\u62E9\uFF0C\u4E0D\u80FD\u56DE\u9000\u3002\u52A8\u6001\u89C4\u5212\u5219\u4F1A\u4FDD\u5B58\u4EE5\u524D\u7684\u8FD0\u7B97\u7ED3\u679C\uFF0C\u5E76\u6839\u636E\u4EE5\u524D\u7684\u7ED3\u679C\u5BF9\u5F53\u524D\u8FDB\u884C\u9009\u62E9\uFF0C\u6709\u56DE\u9000\u529F\u80FD\u3002</p><h2 id="\u4ECE\u6392\u5E8F\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u6392\u5E8F\u5F00\u59CB" aria-hidden="true">#</a> \u4ECE\u6392\u5E8F\u5F00\u59CB</h2><h3 id="\u4EA4\u6362\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u4EA4\u6362\u51FD\u6570" aria-hidden="true">#</a> \u4EA4\u6362\u51FD\u6570</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token function-variable function">swap</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> j<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a> \u5192\u6CE1\u6392\u5E8F</h3><p>\u5192\u6CE1\u6392\u5E8F\u5C31\u662F\u91CD\u590D \u201C\u4ECE\u5E8F\u5217\u53F3\u8FB9\u5F00\u59CB\u6BD4\u8F83\u76F8\u90BB\u4E24\u4E2A\u6570\u5B57\u5927\u5C0F\uFF0C\u518D\u6839\u636E\u7ED3\u679C\u4EA4\u6362\u4E24\u4E2A\u6570\u5B57\u7684\u4F4D\u7F6E\u201D\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> bubbleSort <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u8F6E i \u5FAA\u73AF\u90FD\u80FD\u786E\u8BA4\u6700\u5927\u503C</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a> \u9009\u62E9\u6392\u5E8F</h3><p>\u9009\u62E9\u6392\u5E8F\u5C31\u662F \u201C\u4ECE\u5F85\u6392\u5E8F\u7684\u6570\u636E\u4E2D\u5BFB\u627E\u6700\u5C0F\u503C\uFF0C\u5C06\u5176\u653E\u5230\u5DF2\u6392\u5E8F\u961F\u5217\u7684\u672B\u5C3E\u201D\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> selectionSort <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> minIndex <span class="token operator">=</span> i

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>minIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        minIndex <span class="token operator">=</span> j
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>minIndex <span class="token operator">!==</span> i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> minIndex<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a> \u63D2\u5165\u6392\u5E8F</h3><p>\u63D2\u5165\u6392\u5E8F\u5C31\u662F \u201C\u4ECE\u53F3\u4FA7\u7684\u672A\u6392\u5E8F\u533A\u57DF\u5185\u53D6\u51FA\u4E00\u4E2A\u6570\u636E\uFF0C\u7136\u540E\u5C06\u5176\u63D2\u5165\u5230\u5DF2\u6392\u5E8F\u533A\u57DF\u5185\u5408\u9002\u7684\u4F4D\u7F6E\u4E0A\u201D\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> insertionSort <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u8F6E i \u5FAA\u73AF\u4E3A\u5DE6\u533A\u57DF\u6392\u597D\u5E8F</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> j<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a> \u5FEB\u901F\u6392\u5E8F</h3><p>\u5FEB\u901F\u6392\u5E8F\u5C31\u662F \u201C\u4ECE\u5F85\u6392\u5E8F\u7684\u6570\u636E\u539F\u5730\u6392\u5E8F\u5E76\u5229\u7528\u5206\u6CBB\u7684\u601D\u60F3\u89E3\u51B3\uFF0C\u6709\u70B9\u7C7B\u4F3C\u5192\u6CE1\u7684\u589E\u5F3A\u7248\u201D\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// \u5206\u533A\u64CD\u4F5C</span>
<span class="token keyword">const</span> <span class="token function-variable function">partition</span> <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> right<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> pivot <span class="token operator">=</span> left
  <span class="token keyword">let</span> index <span class="token operator">=</span> pivot <span class="token operator">+</span> <span class="token number">1</span>

  <span class="token comment">// \u539F\u5730\u6392\u5E8F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> right<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> arr<span class="token punctuation">[</span>pivot<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
      index<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5C06\u57FA\u51C6 pivot \u79FB\u81F3\u4E2D\u95F4</span>
  <span class="token function">swap</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> pivot<span class="token punctuation">,</span> index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> index <span class="token operator">-</span> <span class="token number">1</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> quickSort <span class="token operator">=</span> <span class="token punctuation">(</span>arr<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> partitionIndex <span class="token operator">=</span> <span class="token function">partition</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">)</span>
    <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> left<span class="token punctuation">,</span> partitionIndex <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> partitionIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> right<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>
</code></pre></div>`,28);function t(o,e){return p}var l=a(s,[["render",t]]);export{l as default};
