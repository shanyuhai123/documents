import{_ as a,c as n,a as e,o as t}from"./app-CQrWi6O2.js";const o="/assets/cherry-studio-spawn-node-C9WkleXp.png",p={};function c(i,s){return t(),n("div",null,[...s[0]||(s[0]=[e('<h1 id="cherry-studio-无法执行-node" tabindex="-1"><a class="header-anchor" href="#cherry-studio-无法执行-node"><span>Cherry Studio 无法执行 Node</span></a></h1><p>在 Arch 下安装 Cherry Studio 后，在启动 MCP 服务器时报错如下：</p><p><img src="'+o+`" alt="spawn node"></p><p>这是一个典型的 <code>Node.js</code> 环境问题，排查如下：</p><ol><li><p>查看 Cherry Studio 包信息</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">❯ pacman <span class="token parameter variable">-Qs</span> cherry-studio</span>
<span class="line">local/cherry-studio-electron-bin <span class="token number">1.2</span>.10-2</span>
<span class="line">🍒A desktop client that supports <span class="token keyword">for</span> multiple LLM providers.<span class="token punctuation">(</span>Prebuilt version.Use system-wide</span>
<span class="line">electron<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div></li><li><p>根据多年经验这是 <code>electron</code> 丢 <code>Path</code> 信息了</p></li><li><p>找到 Cherry Studio 及 Node 位置</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># cherry-studio 按照规范在 /usr/share/applications/ 目录下</span></span>
<span class="line"><span class="token function">which</span> <span class="token function">node</span> <span class="token comment"># /home/myname/.nvm/versions/node/v22.14.0/bin/node</span></span>
<span class="line"></span></code></pre></div></li><li><p>修改 Cherry Studio 的 <code>.desktop</code> 文件</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 复制到本地</span></span>
<span class="line"><span class="token function">cp</span> /usr/share/applications/cherry-studio-electron.desktop ~/.local/share/applications/</span>
<span class="line"><span class="token comment"># 修改 .desktop Exec</span></span>
<span class="line"><span class="token function">vim</span> ~/.local/share/applications/cherry-studio-electron.desktop</span>
<span class="line"><span class="token comment"># 原 \`Exec=cherry-studio-electron %U\`</span></span>
<span class="line"><span class="token comment"># 修改后 \`Exec=env PATH=/home/myname/.nvm/versions/node/v22.14.0/bin:$PATH cherry-studio-electron %U\`</span></span>
<span class="line"></span></code></pre></div></li><li><p>重新启动后生效</p></li></ol>`,5)])])}const r=a(p,[["render",c]]),d=JSON.parse('{"path":"/os/arch/cherry-studio-spawn-node.html","title":"Cherry Studio 无法执行 Node","lang":"zh-CN","frontmatter":{"description":"Cherry Studio 使用 Node 自定义 MCP 失败"},"headers":[],"git":{"updatedTime":1746632829000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"os/arch/cherry-studio-spawn-node.md"}');export{r as comp,d as data};
