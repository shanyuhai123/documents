import{e as n}from"./app.364498a9.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},t=n(`<h1 id="\u9519\u8BEF\u7684\u96C6\u5408" tabindex="-1"><a class="header-anchor" href="#\u9519\u8BEF\u7684\u96C6\u5408" aria-hidden="true">#</a> \u9519\u8BEF\u7684\u96C6\u5408</h1><p>\u7565\u8FC7\u54C8\u5E0C\u8868\u65B9\u6CD5\u3002</p><h2 id="\u4F4D\u8FD0\u7B97" tabindex="-1"><a class="header-anchor" href="#\u4F4D\u8FD0\u7B97" aria-hidden="true">#</a> \u4F4D\u8FD0\u7B97</h2><p>\u53EF\u53C2\u8003<a href="./268-missing-number">\u4E22\u5931\u7684\u6570\u5B57</a>\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">findErrorNums</span><span class="token punctuation">(</span>nums<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> totalN <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> totalS <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span>acc<span class="token punctuation">,</span> cur<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> cur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> missing <span class="token operator">=</span> nums<span class="token punctuation">.</span>length

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    missing <span class="token operator">^=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> i
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token punctuation">[</span>totalN <span class="token operator">-</span> totalS<span class="token punctuation">,</span> missing<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div>`,5);function p(o,c){return t}var l=s(a,[["render",p]]);export{l as default};
