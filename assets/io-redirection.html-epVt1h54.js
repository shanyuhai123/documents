import{_ as s,c as e,a as n,o as t}from"./app-DNXRdI82.js";const l={};function i(p,a){return t(),e("div",null,a[0]||(a[0]=[n(`<h1 id="输入、输出重定向" tabindex="-1"><a class="header-anchor" href="#输入、输出重定向"><span>输入、输出重定向</span></a></h1><p><a href="https://zh.wikipedia.org/wiki/%E9%87%8D%E5%AE%9A%E5%90%91_(%E8%AE%A1%E7%AE%97%E6%9C%BA)" target="_blank" rel="noopener noreferrer">重定向</a>标准 IO 流：标准输入（STDIN，文件描述符 0）、标准输出（STDOUT，文件描述符 1）、标准错误（STDERR，文件描述符 2）。</p><h2 id="输出重定向" tabindex="-1"><a class="header-anchor" href="#输出重定向"><span>输出重定向</span></a></h2><h3 id="_1-语法" tabindex="-1"><a class="header-anchor" href="#_1-语法"><span>1. 语法</span></a></h3><blockquote><p>切记，执行输出时记得提前备份，防止覆盖源文件 😢。</p></blockquote><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">command</span> <span class="token operator">&gt;</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre></div><p>执行命令 command 然后将结果输出至 file 文件中。</p><h3 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例"><span>2. 示例</span></a></h3><ul><li><p>echo：基础操作；</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello world&quot;</span> <span class="token operator">&gt;</span> linux.txt</span>
<span class="line"></span></code></pre></div></li><li><p>cat：普遍的使用；</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> linux.txt <span class="token operator">&gt;</span> linux1.txt</span>
<span class="line"></span></code></pre></div></li><li><p>command：command 解释。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">which</span> google-chrome-stable <span class="token operator">&gt;</span> linux.txt</span>
<span class="line"></span></code></pre></div></li></ul><h3 id="_3-扩展内容" tabindex="-1"><a class="header-anchor" href="#_3-扩展内容"><span>3. 扩展内容</span></a></h3><ul><li><p>错误输入：命令错误时不会生效，修改默认文件描述符输入错误提示信息；</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">cho <span class="token string">&quot;hello world&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> test.txt</span>
<span class="line"></span></code></pre></div></li><li><p>追加输入：追加内容。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;hello world&quot;</span> <span class="token operator">&gt;&gt;</span> test.txt</span>
<span class="line"></span></code></pre></div></li></ul><h2 id="输入重定向" tabindex="-1"><a class="header-anchor" href="#输入重定向"><span>输入重定向</span></a></h2><h3 id="_1-语法-1" tabindex="-1"><a class="header-anchor" href="#_1-语法-1"><span>1. 语法</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">command</span> <span class="token operator">&lt;</span> <span class="token function">file</span></span>
<span class="line"></span></code></pre></div><p>可以从文件获取输入。</p><h3 id="_2-示例-1" tabindex="-1"><a class="header-anchor" href="#_2-示例-1"><span>2. 示例</span></a></h3><p>一般输入重定向会配合输出重定向进行使用（就我个人而言）。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># command &lt; input &gt; out</span></span>
<span class="line"><span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&quot;tt.&quot;</span> <span class="token operator">&lt;</span> test.txt <span class="token operator">&gt;</span> newTest.txt</span>
<span class="line"></span></code></pre></div><h2 id="核心使用" tabindex="-1"><a class="header-anchor" href="#核心使用"><span>核心使用</span></a></h2><p>常利用<a href="https://zh.wikipedia.org/wiki//dev/null" target="_blank" rel="noopener noreferrer">空设备</a>（/dev/null）和重定向来丢弃不需要的输出流。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> /etc/hosts <span class="token operator">&gt;</span> /dev/null</span>
<span class="line"></span></code></pre></div><p>很多时候会将其配合 <code>2&gt;&amp;1</code> 进行使用，可参考 <a href="http://www.kissyu.org/2016/12/25/shell%E4%B8%AD%3E%20:dev:null%202%20%3E%20&amp;1%E6%98%AF%E4%BB%80%E4%B9%88%E9%AC%BC%EF%BC%9F/" target="_blank" rel="noopener noreferrer">shell中&gt;/dev/null 2&gt;&amp;1是什么鬼</a>。</p>`,22)]))}const r=s(l,[["render",i],["__file","io-redirection.html.vue"]]),c=JSON.parse('{"path":"/os/linux/io-redirection.html","title":"输入、输出重定向","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"输出重定向","slug":"输出重定向","link":"#输出重定向","children":[{"level":3,"title":"1. 语法","slug":"_1-语法","link":"#_1-语法","children":[]},{"level":3,"title":"2. 示例","slug":"_2-示例","link":"#_2-示例","children":[]},{"level":3,"title":"3. 扩展内容","slug":"_3-扩展内容","link":"#_3-扩展内容","children":[]}]},{"level":2,"title":"输入重定向","slug":"输入重定向","link":"#输入重定向","children":[{"level":3,"title":"1. 语法","slug":"_1-语法-1","link":"#_1-语法-1","children":[]},{"level":3,"title":"2. 示例","slug":"_2-示例-1","link":"#_2-示例-1","children":[]}]},{"level":2,"title":"核心使用","slug":"核心使用","link":"#核心使用","children":[]}],"git":{"updatedTime":1637154410000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":3,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"os/linux/io-redirection.md"}');export{r as comp,c as data};
