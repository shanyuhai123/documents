import{_ as s,c as a,a as p,o as t}from"./app-DLCc4AGN.js";const o={};function e(c,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="数组空位" tabindex="-1"><a class="header-anchor" href="#数组空位"><span>数组空位</span></a></h1><p>数组空位，指数组的该位置没有任何值，而非 <code>undefined</code>。</p><p>可由以下方式得到他们：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [empty × 5]</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// [empty × 2] // 可见最后一个逗号被丢弃</span></span>
<span class="line"></span></code></pre></div><p>通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/in" target="_blank" rel="noopener noreferrer">in</a> 操作符可得知空位没有任何值：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token number">0</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">]</span> <span class="token comment">// true</span></span>
<span class="line"><span class="token number">0</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token punctuation">,</span><span class="token punctuation">]</span> <span class="token comment">// false</span></span>
<span class="line"></span></code></pre></div><h2 id="处理空位" tabindex="-1"><a class="header-anchor" href="#处理空位"><span>处理空位</span></a></h2><h3 id="_1-es5" tabindex="-1"><a class="header-anchor" href="#_1-es5"><span>1. ES5</span></a></h3><p><code>ES5</code> 中一些方法对数组空位的处理为忽略：</p><ul><li><code>forEach()</code>、<code>filter()</code>、 <code>reduce()</code>、 <code>every()</code> 和 <code>some()</code> 都会跳过空位。</li><li><code>map()</code> 会跳过空位，但会保留这个值。</li><li><code>join()</code> 和 <code>toString()</code> 会将空位视为 <code>undefined</code>，而 <code>undefined</code> 和 <code>null</code> 会被处理成空字符串。</li></ul><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// forEach</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// filter</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// [&#39;a&#39;,&#39;b&#39;]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// every</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x<span class="token operator">===</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// reduce</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span>y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token operator">+</span>y<span class="token punctuation">)</span> <span class="token comment">// 3</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// some</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">!==</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// map</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// [,1]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// join</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;#a##&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// toString</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token keyword">undefined</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;,a,,&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-es6" tabindex="-1"><a class="header-anchor" href="#_2-es6"><span>2. ES6</span></a></h3><p>ES6(新增的方法) 则是明确将空位转为 <code>undefined</code>。</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// Array.from</span></span>
<span class="line">Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// [ &quot;a&quot;, undefined, &quot;b&quot; ]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 扩展运算符</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">// [ &quot;a&quot;, undefined, &quot;b&quot; ]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// copyWithin</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">copyWithin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">// [,&quot;a&quot;,,&quot;a&quot;]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// fill</span></span>
<span class="line"><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment">// [&quot;a&quot;,&quot;a&quot;,&quot;a&quot;]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// for...of</span></span>
<span class="line"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> el <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// entries</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [[0,undefined], [1,&quot;a&quot;]]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// keys</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [0,1]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// values</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [undefined,&quot;a&quot;]</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// find</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// findIndex</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// 0</span></span>
<span class="line"></span></code></pre></div>`,14)])])}const u=s(o,[["render",e]]),i=JSON.parse('{"path":"/frontend/javascript/array-empty.html","title":"数组空位","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"处理空位","slug":"处理空位","link":"#处理空位","children":[{"level":3,"title":"1. ES5","slug":"_1-es5","link":"#_1-es5","children":[]},{"level":3,"title":"2. ES6","slug":"_2-es6","link":"#_2-es6","children":[]}]}],"git":{"updatedTime":1637397829000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":2,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"frontend/javascript/array-empty.md"}');export{u as comp,i as data};
