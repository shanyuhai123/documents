import{_ as n,c as a,a as t,o as p}from"./app-BCSwjUcF.js";const e={};function o(c,s){return p(),a("div",null,s[0]||(s[0]=[t(`<h1 id="二叉树的坡度" tabindex="-1"><a class="header-anchor" href="#二叉树的坡度"><span>二叉树的坡度</span></a></h1><h2 id="递归" tabindex="-1"><a class="header-anchor" href="#递归"><span>递归</span></a></h2><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">findTilt</span><span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> ret <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">  </span>
<span class="line">  <span class="token keyword">const</span> dfs <span class="token operator">=</span> <span class="token punctuation">(</span>root<span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">const</span> sumLeft <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> sumRight <span class="token operator">=</span> <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span></span>
<span class="line">    ret <span class="token operator">+=</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>sumLeft <span class="token operator">-</span> sumRight<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> sumLeft <span class="token operator">+</span> sumRight <span class="token operator">+</span> root<span class="token punctuation">.</span>val</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> ret</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,3)]))}const r=n(e,[["render",o]]),i=JSON.parse('{"path":"/algorithms/563-binary-tree-tilt.html","title":"二叉树的坡度","lang":"zh-CN","frontmatter":{"autoSort":-563},"headers":[{"level":2,"title":"递归","slug":"递归","link":"#递归","children":[]}],"git":{"updatedTime":1637844459000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/563-binary-tree-tilt.md"}');export{r as comp,i as data};
