import{_ as s,p as a,q as p,a1 as o}from"./framework-e3e34937.js";const t={};function e(c,n){return a(),p("div",null,n[0]||(n[0]=[o(`<h1 id="机器人能否返回原点" tabindex="-1"><a class="header-anchor" href="#机器人能否返回原点" aria-hidden="true">#</a> 机器人能否返回原点</h1><h2 id="模拟" tabindex="-1"><a class="header-anchor" href="#模拟" aria-hidden="true">#</a> 模拟</h2><p>不用考虑朝向。</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">judgeCircle</span><span class="token punctuation">(</span>moves<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span>
  <span class="token comment">// 数组麻烦，选择更简单的形式</span>
  <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> move <span class="token keyword">of</span> moves<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;U&#39;</span><span class="token punctuation">)</span> y <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;R&#39;</span><span class="token punctuation">)</span> x <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;D&#39;</span><span class="token punctuation">)</span> y <span class="token operator">-=</span> <span class="token number">1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>move <span class="token operator">===</span> <span class="token string">&#39;L&#39;</span><span class="token punctuation">)</span> x <span class="token operator">-=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> x <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> y <span class="token operator">===</span> <span class="token number">0</span>
<span class="token punctuation">}</span>
</code></pre></div>`,4)]))}const l=s(t,[["render",e],["__file","657-robot-return-to-origin.html.vue"]]);export{l as default};
