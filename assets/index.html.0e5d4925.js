import{r as s,c as t,a as n,b as p,F as o,e,d as c,o as l}from"./app.d6b1a25d.js";import{_ as u}from"./plugin-vue_export-helper.5a098b48.js";const k={},i=e(`<h1 id="\u82B1\u91CC\u80E1\u54E8\u7684-canvas" tabindex="-1"><a class="header-anchor" href="#\u82B1\u91CC\u80E1\u54E8\u7684-canvas" aria-hidden="true">#</a> \u82B1\u91CC\u80E1\u54E8\u7684 Canvas</h1><p>Canvas \u53EA\u652F\u6301\u4E24\u79CD\u5F62\u5F0F\u7684\u56FE\u5F62\u7ED8\u5236\uFF1A\u77E9\u5F62\u548C\u8DEF\u5F84\u3002</p><h2 id="\u52A8\u753B\u7684\u57FA\u672C\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u52A8\u753B\u7684\u57FA\u672C\u6B65\u9AA4" aria-hidden="true">#</a> \u52A8\u753B\u7684\u57FA\u672C\u6B65\u9AA4</h2><blockquote><p>\u5F53\u8C03\u7528 <code>fill</code> \u51FD\u6570\u65F6\uFF0C\u6240\u6709\u6CA1\u6709\u95ED\u5408\u7684\u5F62\u72B6\u90FD\u4F1A\u81EA\u52A8\u95ED\u5408\uFF0C\u6240\u4EE5\u4E0D\u9700\u8981\u8C03\u7528 <code>closePath</code> \u51FD\u6570\uFF0C\u4F46\u8C03\u7528 <code>stroke</code> \u65F6\u4E0D\u4F1A\u81EA\u52A8\u95ED\u5408\u3002</p></blockquote><ol><li>\u6E05\u7A7A canvas</li><li>\u4FDD\u5B58 canvas \u72B6\u6001</li><li>\u7ED8\u5236\u52A8\u753B\u56FE\u5F62</li><li>\u6062\u590D canvas \u72B6\u6001</li></ol><h2 id="\u72B6\u6001\u7684\u4FDD\u5B58\u548C\u6062\u590D" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001\u7684\u4FDD\u5B58\u548C\u6062\u590D" aria-hidden="true">#</a> \u72B6\u6001\u7684\u4FDD\u5B58\u548C\u6062\u590D</h2><p>Canvas \u72B6\u6001\u5B58\u50A8\u5728\u6808\u4E2D\uFF0C\u6BCF\u5F53 <code>save</code> \u65B9\u6CD5\u8C03\u7528\u540E\uFF0C\u5F53\u524D\u7684\u72B6\u6001\u5C31\u88AB\u63A8\u9001\u5230\u6808\u4E2D\u4FDD\u5B58\u3002\u4E00\u4E2A\u7ED8\u753B\u72B6\u6001\u5305\u62EC\uFF1A</p><ul><li>\u5F53\u524D\u5E94\u7528\u7684\u53D8\u5F62\uFF08\u79FB\u52A8\u3001\u65CB\u8F6C\u548C\u7F29\u653E\uFF09</li><li>\u4EE5\u53CA\u4E0B\u9762\u8FD9\u4E9B\u5C5E\u6027\uFF1AstrokeStyle\u3001fillStyle\u3001globalAlpha\u3001lineWidth\u3001lineCap\u3001lineJoin\u3001miterLimit\u3001lineDashOffset\u3001shadowOffsetX\u3001shadowOffsetY\u3001shadowBlur\u3001shadowColor\u3001globalCompositeOperation\u3001font\u3001textAlign\u3001textBaseline\u3001direction\u3001imageSmoothingEnabled</li><li>\u88C1\u526A\u8DEF\u5F84\uFF0C\u7528\u6765\u9690\u85CF\u4E0D\u9700\u8981\u7684\u90E8\u5206</li></ul><h2 id="\u50CF\u7D20\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u50CF\u7D20\u64CD\u4F5C" aria-hidden="true">#</a> \u50CF\u7D20\u64CD\u4F5C</h2><p>\u53EF\u4EE5\u901A\u8FC7 <code>ImageData</code> \u5BF9\u8C61\u64CD\u7EB5\u50CF\u7D20\u6570\u636E\uFF0C\u76F4\u63A5\u8BFB\u53D6\u6216\u5C06\u6570\u636E\u6570\u7EC4\u5199\u5165\u8BE5\u5BF9\u8C61\u4E2D\u3002 \u8BFB\u53D6\u67D0\u884C\u67D0\u5217\u7684\u50CF\u7D20\u70B9\u53EF\u4F7F\u7528\u516C\u5F0F <code>(\u5217 * (imageData.width * 4)) + (\u884C * 4) + R/G/B/A</code>\uFF0C\u5176\u4E2D <code>R/G/B/A</code> \u5BF9\u5E94\u7684\u503C\u4E3A <code>0/1/2/3</code>\u3002</p><h3 id="\u8BFB\u53D6\u3001\u5199\u5165\u50CF\u7D20" tabindex="-1"><a class="header-anchor" href="#\u8BFB\u53D6\u3001\u5199\u5165\u50CF\u7D20" aria-hidden="true">#</a> \u8BFB\u53D6\u3001\u5199\u5165\u50CF\u7D20</h3><p>\u4F7F\u7528 <code>getImageData</code> \u8BFB\u53D6\u50CF\u7D20\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">pick</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">,</span> event<span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span> destination<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX
  <span class="token keyword">const</span> y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY
  <span class="token keyword">const</span> pixel <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> pixel<span class="token punctuation">.</span>data

  <span class="token keyword">const</span> rgba <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>r<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>g<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>a <span class="token operator">/</span> <span class="token number">255</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>
  
  destination<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> rgba
  destination<span class="token punctuation">.</span>textContent <span class="token operator">=</span> rgba
  <span class="token keyword">return</span> rgba
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F7F\u7528 <code>putImageData</code> \u5199\u5165\u50CF\u7D20\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u7070\u5EA6</span>
<span class="token keyword">const</span> grayscale <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> avg <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span>
    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> avg
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> avg
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> avg
  <span class="token punctuation">}</span>

  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u53CD\u76F8</span>
<span class="token keyword">const</span> invert <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u590D\u53E4\uFF08\u6DF1\u8910\u8272\uFF09</span>
<span class="token keyword">const</span> sepia <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>
  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> red <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> green <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> blue <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>

    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.393</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.769</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.189</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.349</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.686</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.168</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.272</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.534</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.131</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u7F29\u653E\u548C\u53CD\u952F\u9F7F" tabindex="-1"><a class="header-anchor" href="#\u7F29\u653E\u548C\u53CD\u952F\u9F7F" aria-hidden="true">#</a> \u7F29\u653E\u548C\u53CD\u952F\u9F7F</h3><p>\u4ECE\u539F\u56FE\u4E2D\u88C1\u526A\u4EE5\u9F20\u6807\u4E2D\u5FC3 <code>10*10</code> \u7684\u50CF\u7D20\uFF0C\u53EF\u4EE5\u8003\u8651\u5148\u5C06\u539F\u70B9\u79FB\u81F3 <code>-5,-5</code> \u5904\uFF0C\u518D\u5411\u4E0B\u88C1\u526A <code>10*10</code> \u5373\u53EF\u3002</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> draw <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span> originCanvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> zoomCanvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> smooth<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX
  <span class="token keyword">const</span> y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY
  <span class="token keyword">const</span> zCtx <span class="token operator">=</span> zoomCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// \u6297\u952F\u9F7F</span>
  zCtx<span class="token punctuation">.</span>imageSmoothingEnabled <span class="token operator">=</span> smooth
  
  zCtx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>
    originCanvas<span class="token punctuation">,</span>
    Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// source</span>
    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span> <span class="token comment">// destination</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u53C2\u8003\u8D44\u6599" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u8D44\u6599" aria-hidden="true">#</a> \u53C2\u8003\u8D44\u6599</h2>`,19),r={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial",target:"_blank",rel:"noopener noreferrer"},d=c("MDN");function m(g,b){const a=s("OutboundLink");return l(),t(o,null,[i,n("ul",null,[n("li",null,[n("a",r,[d,p(a)])])])],64)}var f=u(k,[["render",m]]);export{f as default};
