import{_ as a,c as n,a as e,o as t}from"./app-BCSwjUcF.js";const l={};function c(p,s){return t(),n("div",null,s[0]||(s[0]=[e(`<h1 id="使用-goaccess-可视化查看日志" tabindex="-1"><a class="header-anchor" href="#使用-goaccess-可视化查看日志"><span>使用 goaccess 可视化查看日志</span></a></h1><p>虽然 Nginx 已经提供 access 日志来查阅，但是不得不说很难看清，常规的正则过滤又显得较为麻烦。于是就找到了这么一款实时网络日志分析器 <a href="https://github.com/allinurl/goaccess" target="_blank" rel="noopener noreferrer">GoAccess</a>。</p><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>此处以 Ubuntu Server 18.04 为示例，官网说明了，如果直接安装可能安装到较为老的版本，需要<a href="https://github.com/allinurl/goaccess#official-goaccess-debian--ubuntu-repository" target="_blank" rel="noopener noreferrer">更新</a>。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">echo</span> <span class="token string">&quot;deb https://deb.goaccess.io/ <span class="token variable"><span class="token variable">$(</span>lsb_release <span class="token parameter variable">-cs</span><span class="token variable">)</span></span> main&quot;</span> <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">tee</span> <span class="token parameter variable">-a</span> /etc/apt/sources.list.d/goaccess.list</span>
<span class="line"><span class="token function">wget</span> <span class="token parameter variable">-O</span> - https://deb.goaccess.io/gnugpg.key <span class="token operator">|</span> <span class="token function">sudo</span> apt-key <span class="token function">add</span> -</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> update</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> goaccess</span>
<span class="line"></span>
<span class="line">goaccess <span class="token parameter variable">--version</span> <span class="token comment"># 验证 GoAccess - 1.3.</span></span>
<span class="line"></span></code></pre></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="_1-最简单的静态使用" tabindex="-1"><a class="header-anchor" href="#_1-最简单的静态使用"><span>1. 最简单的静态使用</span></a></h3><div class="hint-container caution"><p class="hint-container-title">警告</p><p>goaccess -f /var/log/nginx/access.log -o report.html --log-format=COMBINED</p></div><ul><li><code>-f</code>：指定日志文件</li><li><code>-o</code>：指定报表路径</li><li><code>--log-format</code>：日志格式，不加则会报错</li></ul><p>这样就会生成一份 html 文件，可以利用 scp（推荐）、sz、rsync 下载该文件到本地后查看。</p><h3 id="_2-配合-nginx-实时更新" tabindex="-1"><a class="header-anchor" href="#_2-配合-nginx-实时更新"><span>2. 配合 Nginx 实时更新</span></a></h3><p>首先需要创建一个 Nginx 配置文件：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> <span class="token function">cp</span> default.conf access-log.conf</span>
<span class="line"><span class="token function">sudo</span> <span class="token function">mkdir</span> /var/www/html/report</span>
<span class="line"></span>
<span class="line"><span class="token function">vim</span> access-log.conf</span>
<span class="line"><span class="token comment"># 修改以下内容，自定义 xxx</span></span>
<span class="line">server_name  xxx.shanyuhai.top<span class="token punctuation">;</span></span>
<span class="line">location /report.html <span class="token punctuation">{</span></span>
<span class="line">    <span class="token builtin class-name">alias</span> /var/www/html/report/report.html<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment"># 代理，限制访问</span></span>
<span class="line">    allow xxx.xxx.xxx.xxx<span class="token punctuation">;</span></span>
<span class="line">    deny all<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 接着前往域名提供商添加 DNS 解析</span></span>
<span class="line"></span></code></pre></div><div class="hint-container caution"><p class="hint-container-title">警告</p><p>goaccess -f /var/log/nginx/access.log -o /var/www/html/report/report.html --log-format=COMBINED --real-time-html</p></div><p>启动服务后会提示开启了一个 websocket，验证</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">ll /var/www/html/report</span>
<span class="line"></span></code></pre></div><p>接着就可以在浏览器访问对应的地址了。</p>`,17)]))}const i=a(l,[["render",c]]),r=JSON.parse('{"path":"/backend/nginx/install-goaccess.html","title":"使用 goaccess 可视化查看日志","lang":"zh-CN","frontmatter":{"description":"使用 goaccess 可视化查看日志","tags":["nginx","goaccess"]},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"1. 最简单的静态使用","slug":"_1-最简单的静态使用","link":"#_1-最简单的静态使用","children":[]},{"level":3,"title":"2. 配合 Nginx 实时更新","slug":"_2-配合-nginx-实时更新","link":"#_2-配合-nginx-实时更新","children":[]}]}],"git":{"updatedTime":1637394521000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":3,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"backend/nginx/install-goaccess.md"}');export{i as comp,r as data};
