import{_ as e,M as o,p,q as r,R as a,t as s,N as c,a1 as l}from"./framework-e3e34937.js";const u={},i={href:"https://segmentfault.com/q/1010000002637728",target:"_blank",rel:"noopener noreferrer"};function d(k,n){const t=o("ExternalLinkIcon");return p(),r("div",null,[n[3]||(n[3]=a("h1",{id:"运算符优先级",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#运算符优先级","aria-hidden":"true"},"#"),s(" 运算符优先级")],-1)),n[4]||(n[4]=a("p",null,"运算符的优先级决定了表达式中运算执行的先后顺序，优先级高的运算符最先被执行。",-1)),n[5]||(n[5]=a("p",null,"虽然这句话是这么的直白，但总是会遗忘。",-1)),n[6]||(n[6]=a("h2",{id:"一次错误",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#一次错误","aria-hidden":"true"},"#"),s(" 一次错误")],-1)),a("p",null,[n[1]||(n[1]=s("来源于一个 15年（五年前）的")),a("a",i,[n[0]||(n[0]=s("提问")),c(t)]),n[2]||(n[2]=s("，没想到我第一反应还是错了。"))]),n[7]||(n[7]=l(`<div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> b <span class="token operator">=</span> a<span class="token punctuation">;</span> 
a<span class="token punctuation">.</span>x <span class="token operator">=</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// --&gt; undefined</span>
<span class="token function">alert</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// --&gt; {n:2}</span>
</code></pre></div><p>在这里我忽略了 <code>.</code> 的执行优先级是高于 <code>=</code> 操作的，也就是一开始 <code>a.x</code> 就指向了 <code>{n: 1}</code> 的 <code>heap 空间</code>，最后的结果也显而易见了。</p>`,2))])}const f=e(u,[["render",d],["__file","operator-precedence.html.vue"]]);export{f as default};
