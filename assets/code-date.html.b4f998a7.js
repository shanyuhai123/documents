import{r as o,c as e,a as n,b as t,F as c,d as s,e as p,o as u}from"./app.cc89d5d0.js";import{_ as l}from"./plugin-vue_export-helper.5a098b48.js";const k={},r=n("h2",{id:"\u5E38\u89C4",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5E38\u89C4","aria-hidden":"true"},"#"),s(" \u5E38\u89C4")],-1),i=n("h3",{id:"_1-dayofyear-\u5DF2\u8FC7\u5929\u6570",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-dayofyear-\u5DF2\u8FC7\u5929\u6570","aria-hidden":"true"},"#"),s(" 1. dayOfYear\uFF08\u5DF2\u8FC7\u5929\u6570\uFF09")],-1),d=n("p",null,[n("strong",null,"FROM")],-1),m={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},g=s("30 seconds of code (Date)"),f=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">dayOfYear</span> <span class="token operator">=</span> <span class="token parameter">date</span> <span class="token operator">=&gt;</span>
  Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>date <span class="token operator">-</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">dayOfYear</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 272</span>
</code></pre></div><h3 id="_2-formatduration-\u683C\u5F0F\u5316\u6BEB\u79D2" tabindex="-1"><a class="header-anchor" href="#_2-formatduration-\u683C\u5F0F\u5316\u6BEB\u79D2" aria-hidden="true">#</a> 2. formatDuration\uFF08\u683C\u5F0F\u5316\u6BEB\u79D2\uFF09</h3><p><strong>FROM</strong></p>`,6),b={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},h=s("30 seconds of code (Date)"),w=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">formatDuration</span> <span class="token operator">=</span> <span class="token parameter">ms</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ms <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> ms <span class="token operator">=</span> <span class="token operator">-</span>ms<span class="token punctuation">;</span>
  <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token punctuation">{</span>
    day<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> <span class="token number">86400000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    hour<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> <span class="token number">3600000</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">24</span><span class="token punctuation">,</span>
    minute<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> <span class="token number">60000</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">,</span>
    second<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>ms <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">,</span>
    millisecond<span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>ms<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">1000</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">val</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>key<span class="token punctuation">,</span> val<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>val <span class="token operator">!==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token string">&#39;s&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">formatDuration</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;1 second, 1 millisecond&#39;</span>
<span class="token function">formatDuration</span><span class="token punctuation">(</span><span class="token number">34325055574</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;397 days, 6 hours, 44 minutes, 15 seconds, 574 milliseconds&#39;</span>
</code></pre></div><h3 id="_3-formatseconds-\u683C\u5F0F\u5316\u79D2" tabindex="-1"><a class="header-anchor" href="#_3-formatseconds-\u683C\u5F0F\u5316\u79D2" aria-hidden="true">#</a> 3. formatSeconds\uFF08\u683C\u5F0F\u5316\u79D2\uFF09</h3><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">formatSeconds</span> <span class="token operator">=</span> <span class="token parameter">s</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> s <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token punctuation">[</span>s <span class="token operator">/</span> <span class="token number">3600</span><span class="token punctuation">,</span> s <span class="token operator">%</span> <span class="token number">60</span> <span class="token operator">/</span> <span class="token number">60</span><span class="token punctuation">,</span> s <span class="token operator">%</span> <span class="token number">60</span><span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;:&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">formatSeconds</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;00:00:00&quot;</span>
<span class="token function">formatSeconds</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;00:03:20&quot;</span>
<span class="token function">formatSeconds</span><span class="token punctuation">(</span><span class="token number">99999</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;27:46:39&quot;</span>
</code></pre></div><h3 id="_4-getcolontimefromdate-time" tabindex="-1"><a class="header-anchor" href="#_4-getcolontimefromdate-time" aria-hidden="true">#</a> 4. getColonTimeFromDate\uFF08time\uFF09</h3><p><strong>FROM</strong></p>`,11),v={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},y=s("30 seconds of code (Date)"),_=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getColonTimeFromDate</span> <span class="token operator">=</span> <span class="token parameter">date</span> <span class="token operator">=&gt;</span> date<span class="token punctuation">.</span><span class="token function">toTimeString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getColonTimeFromDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;08:38:00&quot;</span>
</code></pre></div><h3 id="_5-getdaysdiffbetweendates-\u5929\u6570\u95F4\u9694" tabindex="-1"><a class="header-anchor" href="#_5-getdaysdiffbetweendates-\u5929\u6570\u95F4\u9694" aria-hidden="true">#</a> 5. getDaysDiffBetweenDates\uFF08\u5929\u6570\u95F4\u9694\uFF09</h3><p><strong>FROM</strong></p>`,6),D={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},j=s("30 seconds of code (Date)"),x=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getDaysDiffBetweenDates</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateInitial<span class="token punctuation">,</span> dateFinal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span>dateFinal <span class="token operator">-</span> dateInitial<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">3600</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getDaysDiffBetweenDates</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2017-12-13&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2017-12-22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9</span>
</code></pre></div><h3 id="_6-getmeridiemsuffixofinteger-am-pm" tabindex="-1"><a class="header-anchor" href="#_6-getmeridiemsuffixofinteger-am-pm" aria-hidden="true">#</a> 6. getMeridiemSuffixOfInteger\uFF08am/pm\uFF09</h3><p><strong>FROM</strong></p>`,6),M={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},S=s("30 seconds of code (Date)"),O=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getMeridiemSuffixOfInteger</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span>
  num <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> num <span class="token operator">===</span> <span class="token number">24</span>
    <span class="token operator">?</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token string">&#39;am&#39;</span>
    <span class="token operator">:</span> num <span class="token operator">===</span> <span class="token number">12</span>
    <span class="token operator">?</span> <span class="token number">12</span> <span class="token operator">+</span> <span class="token string">&#39;pm&#39;</span>
    <span class="token operator">:</span> num <span class="token operator">&lt;</span> <span class="token number">12</span>
    <span class="token operator">?</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;am&#39;</span>
    <span class="token operator">:</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;pm&#39;</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getMeridiemSuffixOfInteger</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;12am&quot;</span>
<span class="token function">getMeridiemSuffixOfInteger</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;11am&quot;</span>
<span class="token function">getMeridiemSuffixOfInteger</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1pm&quot;</span>
<span class="token function">getMeridiemSuffixOfInteger</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;1pm&quot;</span>
</code></pre></div><h3 id="_7-isbeforedate-isafterdate-issamedate" tabindex="-1"><a class="header-anchor" href="#_7-isbeforedate-isafterdate-issamedate" aria-hidden="true">#</a> 7. isBeforeDate/isAfterDate/isSameDate</h3><p><strong>FROM</strong></p>`,6),F={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},E=s("30 seconds of code (Date)"),N=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isBeforeDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateA<span class="token punctuation">,</span> dateB</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dateA <span class="token operator">&lt;</span> dateB<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">isAfterDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateA<span class="token punctuation">,</span> dateB</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dateA <span class="token operator">&gt;</span> dateB<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">isSameDate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">dateA<span class="token punctuation">,</span> dateB</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> dateA<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> dateB<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isBeforeDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isAfterDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isSameDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_8-isleapyear-\u95F0\u5E74" tabindex="-1"><a class="header-anchor" href="#_8-isleapyear-\u95F0\u5E74" aria-hidden="true">#</a> 8. isLeapYear\uFF08\u95F0\u5E74\uFF09</h3><p><strong>FROM</strong></p>`,6),I={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},A=s("30 seconds of code (Date)"),T=p(`<p><strong>DETAIL\uFF1A</strong></p><p>\u6CA1\u60F3\u5230\u5224\u65AD\u95F0\u5E74\u8FD8\u80FD\u8FD9\u4E48\u64CD\u4F5C\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isLeapYear</span> <span class="token operator">=</span> <span class="token parameter">year</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isBeforeDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isAfterDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isSameDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2010</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_9-isweekday-isweekend" tabindex="-1"><a class="header-anchor" href="#_9-isweekday-isweekend" aria-hidden="true">#</a> 9. isWeekday/isWeekend</h3><p><strong>FROM</strong></p>`,8),L={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},q=s("30 seconds of code (Date)"),B=p(`<p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> isWeekday <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">6</span> <span class="token operator">!==</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> isWeekend <span class="token operator">=</span> <span class="token punctuation">(</span>t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">6</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">isWeekday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true (if current date is 2019-07-19)</span>
<span class="token function">isWeekend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2018-10-19 (if current date is 2018-10-18)</span>
</code></pre></div><h3 id="_10-mindate-maxdate" tabindex="-1"><a class="header-anchor" href="#_10-mindate-maxdate" aria-hidden="true">#</a> 10. minDate/maxDate</h3><p><strong>FROM</strong></p>`,6),C={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},P=s("30 seconds of code (Date)"),U=p(`<p><strong>DETAIL\uFF1A</strong></p><p>Math \u914D\u5408\u5C55\u5F00\u7B26\u7684\u5E38\u89C1\u64CD\u4F5C\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">minDate</span> <span class="token operator">=</span> <span class="token parameter">dates</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>dates<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">maxDate</span> <span class="token operator">=</span> <span class="token parameter">dates</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>dates<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">minDate</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2016-01-08T22:00:00.000Z</span>
<span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2018</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2016</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token function">maxDate</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2018-03-11T22:00:00.000Z</span>
</code></pre></div><h3 id="_11-yesterday-tomorrow" tabindex="-1"><a class="header-anchor" href="#_11-yesterday-tomorrow" aria-hidden="true">#</a> 11. yesterday/tomorrow</h3><p><strong>FROM</strong></p>`,8),X={href:"https://www.30secondsofcode.org/tag/date/",target:"_blank",rel:"noopener noreferrer"},R=s("30 seconds of code (Date)"),Y=p(`<p><strong>DETAIL\uFF1A</strong></p><p>Math \u914D\u5408\u5C55\u5F00\u7B26\u7684\u5E38\u89C1\u64CD\u4F5C\u3002</p><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">yesterday</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  t<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">tomorrow</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  t<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> t<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">yesterday</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2018-10-17 (if current date is 2018-10-18)</span>
<span class="token function">tomorrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2018-10-19 (if current date is 2018-10-18)</span>
</code></pre></div><h3 id="_12-getmonthdays-\u83B7\u53D6\u6708\u4EFD\u5929\u6570" tabindex="-1"><a class="header-anchor" href="#_12-getmonthdays-\u83B7\u53D6\u6708\u4EFD\u5929\u6570" aria-hidden="true">#</a> 12. getMonthDays\uFF08\u83B7\u53D6\u6708\u4EFD\u5929\u6570\uFF09</h3><p><strong>FUNCTION\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getMonthDays</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">year<span class="token punctuation">,</span> month</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> today <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>year <span class="token operator">||</span> today<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> month <span class="token operator">||</span> <span class="token punctuation">(</span>today<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES\uFF1A</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">getMonthDays</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 30</span>
<span class="token function">getMonthDays</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 29</span>
<span class="token function">getMonthDays</span><span class="token punctuation">(</span><span class="token number">2021</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 28</span>
</code></pre></div>`,11);function W(V,$){const a=o("OutboundLink");return u(),e(c,null,[r,i,d,n("p",null,[n("a",m,[g,t(a)])]),f,n("p",null,[n("a",b,[h,t(a)])]),w,n("p",null,[n("a",v,[y,t(a)])]),_,n("p",null,[n("a",D,[j,t(a)])]),x,n("p",null,[n("a",M,[S,t(a)])]),O,n("p",null,[n("a",F,[E,t(a)])]),N,n("p",null,[n("a",I,[A,t(a)])]),T,n("p",null,[n("a",L,[q,t(a)])]),B,n("p",null,[n("a",C,[P,t(a)])]),U,n("p",null,[n("a",X,[R,t(a)])]),Y],64)}var G=l(k,[["render",W]]);export{G as default};
