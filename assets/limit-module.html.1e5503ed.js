import{r as n,o as a,c as s,a as e,b as t,F as p,d as o,e as c}from"./app.9cf88502.js";const i={},l=e("h2",{id:"请求限制",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#请求限制","aria-hidden":"true"},"#"),o(" 请求限制")],-1),r=o("请求限制 "),d={href:"https://nginx.org/en/docs/http/ngx_http_limit_req_module.html",target:"_blank",rel:"noopener noreferrer"},k=o("limit_req_module"),u=o(" 比连接限制更优化，由于一个连接可以被多次复用。"),m=c('<h3 id="_1-limit-req-zone" tabindex="-1"><a class="header-anchor" href="#_1-limit-req-zone" aria-hidden="true">#</a> 1. limit_req_zone</h3><p>首先需要在 <code>http</code> 作用域定义 <code>limit_req_zone</code>。</p><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tlimit_req_zone key zone=name:size rate=rate [sync]</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http\n\n<span class="token comment"># Example</span>\nlimit_req_zone <span class="token variable">$binary_remote_addr</span> zone=one:10m rate=1r/s</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="_2-limit-req" tabindex="-1"><a class="header-anchor" href="#_2-limit-req" aria-hidden="true">#</a> 2. limit_req</h3><p>再在指定的作用域启用。</p><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tlimit_req zone=name [burst=number] [nodelay | delay=number]</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http, server, location\n\n<span class="token comment"># Example</span>\nlimit_req_zone <span class="token variable">$binary_remote_addr</span> zone=one:10m rate=1r/s</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">location</span> /search/</span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">limit_req</span> zone=one burst=5</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token directive"><span class="token keyword">limit_req_zone</span> <span class="token variable">$binary_remote_addr</span> zone=perip:10m rate=1r/s</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">limit_req_zone</span> <span class="token variable">$server_name</span> zone=perserver:10m rate=10r/s</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">limit_req</span> zone=perip burst=5 nodelay</span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">limit_req</span> zone=perserver burst=10</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><code>$binary_remote_addr</code> 相对 <code>remote_addr</code> 占用的空间更少。</p><h2 id="连接限制" tabindex="-1"><a class="header-anchor" href="#连接限制" aria-hidden="true">#</a> 连接限制</h2>',8),h={href:"https://nginx.org/en/docs/http/ngx_http_limit_conn_module.html",target:"_blank",rel:"noopener noreferrer"},_=o("limit_conn_module"),x=o(" 步骤基本与请求限制一致。"),v=c('<h3 id="_1-limit-conn-zone" tabindex="-1"><a class="header-anchor" href="#_1-limit-conn-zone" aria-hidden="true">#</a> 1. limit_conn_zone</h3><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tlimit_conn_zone key zone=name:size</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http\n\n<span class="token comment"># Example</span>\nlimit_conn_zone <span class="token variable">$binary_remote_addr</span> zone=addr:10m</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="_2-limit-zone" tabindex="-1"><a class="header-anchor" href="#_2-limit-zone" aria-hidden="true">#</a> 2. limit_zone</h3><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tlimit_zone name <span class="token variable">$variable</span> size</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http\n\n<span class="token comment"># Example</span>\nlimit_conn_zone <span class="token variable">$binary_remote_addr</span> zone=perip:10m</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">limit_conn_zone</span> <span class="token variable">$server_name</span> zone=perserver:10m</span><span class="token punctuation">;</span>\n\n<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">limit_conn</span> perip <span class="token number">10</span></span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">limit_conn</span> perserver <span class="token number">100</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="访问-ip-限制" tabindex="-1"><a class="header-anchor" href="#访问-ip-限制" aria-hidden="true">#</a> 访问 IP 限制</h2>',5),g={href:"https://nginx.org/en/docs/http/ngx_http_access_module.html",target:"_blank",rel:"noopener noreferrer"},y=o("access_module"),b=o(" 可用来限制访问的 IP，用法比较简单。"),f=c('<div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tallow address | CIDR | unix: | all</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http, server, location, limit_except\n\nSyntax:\tdeny address | CIDR | unix: | all</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http, server, location, limit_except\n\n<span class="token comment"># Example</span>\nlocation /</span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">deny</span>  192.168.1.1</span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">allow</span> 192.168.1.0/24</span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">allow</span> 10.1.1.0/16</span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">allow</span> 2001:0db8::/32</span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">deny</span>  all</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="访问-账号-限制" tabindex="-1"><a class="header-anchor" href="#访问-账号-限制" aria-hidden="true">#</a> 访问 账号 限制</h2>',2),w={href:"https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html",target:"_blank",rel:"noopener noreferrer"},z=o("auth_basic_module"),q=o(" 可以为路径添加用户密码访问，可配合 IP 限制使用。"),C=c('<h3 id="_1-生成密码" tabindex="-1"><a class="header-anchor" href="#_1-生成密码" aria-hidden="true">#</a> 1. 生成密码</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 生成密码工具 htpasswd</span>\n<span class="token comment"># -b 参数为 在一行输入用户名和密码，而非根据提示输入密码</span>\n<span class="token comment"># -c 参数为 创建一个加密文件(注意已有则覆盖)，即增加用户时无需指定</span>\nhtpasswd -bc /etc/nginx/auth_conf shanyuhai <span class="token number">123</span>\n<span class="token comment"># 若缺乏依赖则提示，安装即可</span>\n<span class="token comment"># centos 下</span>\nyum <span class="token function">install</span> httpd-tools\n<span class="token comment"># ubuntu 下</span>\n<span class="token function">apt</span> <span class="token function">install</span> apache2-utils\n\n<span class="token function">cat</span> /etc/nginx/auth_conf <span class="token comment"># 验证</span>\n</code></pre></div><h3 id="_2-限制说明" tabindex="-1"><a class="header-anchor" href="#_2-限制说明" aria-hidden="true">#</a> 2. 限制说明</h3><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\tauth_basic string | <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> auth_basic <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Context:</span> http, server, location, limit_except\n\nSyntax:\tauth_basic_user_file file</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: http, server, location, limit_except\n\n<span class="token comment"># Example</span>\nlocation /</span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">auth_basic</span>           <span class="token string">&quot;请输入用户名、密码&quot;</span></span><span class="token punctuation">;</span>\n  <span class="token directive"><span class="token keyword">auth_basic_user_file</span> auth_conf</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',4);i.render=function(o,c){const i=n("OutboundLink");return a(),s(p,null,[l,e("p",null,[r,e("a",d,[k,t(i)]),u]),m,e("p",null,[e("a",h,[_,t(i)]),x]),v,e("p",null,[e("a",g,[y,t(i)]),b]),f,e("p",null,[e("a",w,[z,t(i)]),q]),C],64)};export{i as default};
