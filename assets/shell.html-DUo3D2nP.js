import{_ as s,c as e,a as n,o as l}from"./app-DNXRdI82.js";const i={};function t(c,a){return l(),e("div",null,a[0]||(a[0]=[n(`<h1 id="shell-脚本" tabindex="-1"><a class="header-anchor" href="#shell-脚本"><span>Shell 脚本</span></a></h1><p>一点点追加。</p><h2 id="bash-变量" tabindex="-1"><a class="header-anchor" href="#bash-变量"><span>Bash 变量</span></a></h2><p>Bash 变量分为：环境变量和自定义变量。</p><h3 id="环境变量" tabindex="-1"><a class="header-anchor" href="#环境变量"><span>环境变量</span></a></h3><p>环境变量是 Bash 环境自带的变量，进入 Shell 时已经定义好了，它们通常时系统定义好的，也可以由用户从父 Shell 传入子 Shell。</p><h3 id="自定义变量" tabindex="-1"><a class="header-anchor" href="#自定义变量"><span>自定义变量</span></a></h3><p>自定义变量是用户在当前 Shell 里自己定义的变量，仅在当前 Shell 可用。一旦退出 Shell，该变量就不存在了。</p><h3 id="特殊变量-脚本内" tabindex="-1"><a class="header-anchor" href="#特殊变量-脚本内"><span>特殊变量 - 脚本内</span></a></h3><p>脚本文件内部可以使用特殊变量：</p><ul><li><code>$0</code>：脚本文件名，即 <code>script.sh</code></li><li><code>$1~$9</code>：对应脚本的第一个参数到第九个参数</li><li><code>$#</code>：参数的总数</li><li><code>$@</code>：全部的参数，参数之间使用空格分隔</li></ul><p>解析一个示例：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token assign-left variable">dir</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token builtin class-name">cd</span> <span class="token punctuation">$(</span>dirname $0<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">pwd</span><span class="token variable">\`</span></span> <span class="token comment"># 注意等号两边不要有空格</span></span>
<span class="line"><span class="token comment"># $0 =&gt; 即脚本文件名（包含你进入的目录）./shells/echo.sh</span></span>
<span class="line"><span class="token comment"># $(dirname $0) =&gt; 输出文件目录，包裹住使得不会被 \`echo\` 解析成两部分 ./shells</span></span>
<span class="line"><span class="token comment"># 完成的 =&gt; 进入目录，并获取其完整路径 /home/shanyuhai/code/shells</span></span>
<span class="line"></span></code></pre></div><h2 id="条件语句" tabindex="-1"><a class="header-anchor" href="#条件语句"><span>条件语句</span></a></h2><h3 id="if" tabindex="-1"><a class="header-anchor" href="#if"><span>if</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">[</span> expression <span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">then</span></span>
<span class="line">   Statement<span class="token punctuation">(</span>s<span class="token punctuation">)</span> to be executed <span class="token keyword">if</span> expression is <span class="token boolean">true</span></span>
<span class="line"><span class="token keyword">fi</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># if expr1 ?then? body1 elseif expr2 ?then? body2 elseif ... ?else? ?bodyN?</span></span>
<span class="line"></span></code></pre></div><p><code>then</code> 语句中为常规执行语句，而 <code>expression</code> 判断表达式提供了一些快捷判断。</p><h4 id="_1-文件判断" tabindex="-1"><a class="header-anchor" href="#_1-文件判断"><span>1. 文件判断</span></a></h4><ul><li><code>[ -a file ]</code>：如果 <code>file</code> 存在，则为 true</li><li><code>[ -d file ]</code>：如果 <code>file</code> 存在且是一个目录，则为 true</li><li><code>[ -f file ]</code>：如果 <code>file</code> 存在且是一个普通文件，则为 true</li></ul><h4 id="_2-字符串判断" tabindex="-1"><a class="header-anchor" href="#_2-字符串判断"><span>2. 字符串判断</span></a></h4><ul><li><code>[ -n string ]</code>：如果字符串 <code>string</code> 长度大于 0，则为 true</li><li><code>[ -z string ]</code>：如果字符串 <code>string</code> 长度为 0，则为 true</li></ul>`,21)]))}const o=s(i,[["render",t],["__file","shell.html.vue"]]),h=JSON.parse('{"path":"/os/linux/shell.html","title":"Shell 脚本","lang":"zh-CN","frontmatter":{"autoPrev":"everything-is-a-file"},"headers":[{"level":2,"title":"Bash 变量","slug":"bash-变量","link":"#bash-变量","children":[{"level":3,"title":"环境变量","slug":"环境变量","link":"#环境变量","children":[]},{"level":3,"title":"自定义变量","slug":"自定义变量","link":"#自定义变量","children":[]},{"level":3,"title":"特殊变量 - 脚本内","slug":"特殊变量-脚本内","link":"#特殊变量-脚本内","children":[]}]},{"level":2,"title":"条件语句","slug":"条件语句","link":"#条件语句","children":[{"level":3,"title":"if","slug":"if","link":"#if","children":[]}]}],"git":{"updatedTime":1637159145000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"os/linux/shell.md"}');export{o as comp,h as data};
