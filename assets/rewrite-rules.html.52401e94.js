import{e}from"./app.cf2169b9.js";import{_ as t}from"./plugin-vue_export-helper.5a098b48.js";const a={},n=e('<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p><code>rewrite</code> 常用于 <code>url</code> 重写，以及重定向。准确来说 <code>rewrite</code> 是作用于 <code>$request_uri</code>。</p><p>其实理解完修改的是 <code>$request_uri</code> 部分即可理解，我之前是卡在这里了。</p><div class="language-nginx ext-nginx"><pre class="language-nginx"><code><span class="token directive"><span class="token keyword">Syntax:</span>\trewrite regex replacement [flag]</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">Default:</span> —\nContext: server, location, if\n\n<span class="token comment"># Example</span>\nrewrite ^(.*) https://<span class="token variable">$host</span><span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span> <span class="token comment"># https</span>\n\n<span class="token directive"><span class="token keyword">if</span> (<span class="token variable">$http_user_agent</span> ~ Chrome)</span> <span class="token punctuation">{</span>\n  <span class="token directive"><span class="token keyword">rewrite</span> ^(.*)$ /chrome/<span class="token variable">$1</span> break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="flag" tabindex="-1"><a class="header-anchor" href="#flag" aria-hidden="true">#</a> flag</h2><table><thead><tr><th style="text-align:center;">flag</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center;">last</td><td>使用更改的 URI 匹配新位置。</td></tr><tr><td style="text-align:center;">break</td><td>停止处理当前的指令集。</td></tr><tr><td style="text-align:center;">redirect</td><td>返回 302 （临时）重定向。</td></tr><tr><td style="text-align:center;">permanent</td><td>返回 301 （永久）重定向。</td></tr></tbody></table>',6);var s=t(a,[["render",function(e,t){return n}]]);export{s as default};
