import{_ as s,c as n,a as e,o as t}from"./app-DNXRdI82.js";const p={};function l(c,a){return t(),n("div",null,a[0]||(a[0]=[e(`<h1 id="花里胡哨且实用的命令" tabindex="-1"><a class="header-anchor" href="#花里胡哨且实用的命令"><span>花里胡哨且实用的命令</span></a></h1><h2 id="快速备份" tabindex="-1"><a class="header-anchor" href="#快速备份"><span>快速备份</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cp</span> test.txt<span class="token punctuation">{</span>,.bak<span class="token punctuation">}</span></span>
<span class="line"><span class="token function">ls</span> <span class="token parameter variable">-al</span> test.txt* <span class="token comment"># 验证</span></span>
<span class="line"></span></code></pre></div><p>很多时候更希望以时间作为区分进行备份：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cp</span> test<span class="token punctuation">{</span>,_<span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +%y%m%d_%H%M<span class="token variable">\`</span></span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这样有些麻烦，可将其制作为一个脚本，可通过类似 <code>bash cpfile.sh test</code> 调用：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token shebang important">#!/bin/bash</span></span>
<span class="line"><span class="token function">sudo</span> <span class="token function">cp</span> <span class="token variable">$1</span> <span class="token variable">$1_</span><span class="token variable"><span class="token variable">\`</span><span class="token function">date</span> +%y%m%d_%H%M<span class="token variable">\`</span></span></span>
<span class="line"></span></code></pre></div><h2 id="清空文件" tabindex="-1"><a class="header-anchor" href="#清空文件"><span>清空文件</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token boolean">true</span> <span class="token operator">&gt;</span> access.log</span>
<span class="line"></span></code></pre></div><h2 id="创建文件夹" tabindex="-1"><a class="header-anchor" href="#创建文件夹"><span>创建文件夹</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> /app/<span class="token punctuation">{</span>template,logs,package/src<span class="token punctuation">}</span> <span class="token parameter variable">-p</span></span>
<span class="line"></span></code></pre></div><h2 id="生成序列文件内容" tabindex="-1"><a class="header-anchor" href="#生成序列文件内容"><span>生成序列文件内容</span></a></h2><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span>  <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">..</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token builtin class-name">echo</span> <span class="token variable">$i</span> <span class="token operator">&gt;</span> <span class="token variable">$i</span><span class="token punctuation">;</span><span class="token keyword">done</span></span>
<span class="line"></span></code></pre></div>`,13)]))}const o=s(p,[["render",l],["__file","gaudy-and-pragmatical-command.html.vue"]]),r=JSON.parse('{"path":"/os/linux/gaudy-and-pragmatical-command.html","title":"花里胡哨且实用的命令","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"快速备份","slug":"快速备份","link":"#快速备份","children":[]},{"level":2,"title":"清空文件","slug":"清空文件","link":"#清空文件","children":[]},{"level":2,"title":"创建文件夹","slug":"创建文件夹","link":"#创建文件夹","children":[]},{"level":2,"title":"生成序列文件内容","slug":"生成序列文件内容","link":"#生成序列文件内容","children":[]}],"git":{"updatedTime":1637594091000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":7,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"os/linux/gaudy-and-pragmatical-command.md"}');export{o as comp,r as data};
