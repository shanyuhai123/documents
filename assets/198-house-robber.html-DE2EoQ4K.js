import{_ as s,c as a,a as p,o as t}from"./app-CQrWi6O2.js";const o={};function e(c,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="打家劫舍" tabindex="-1"><a class="header-anchor" href="#打家劫舍"><span>打家劫舍</span></a></h1><p>根据规律写出伪代码：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token constant">S1</span> <span class="token operator">=</span> <span class="token constant">H1</span></span>
<span class="line"><span class="token constant">S2</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token constant">S1</span><span class="token punctuation">,</span> <span class="token constant">H2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">S3</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token constant">S2</span><span class="token punctuation">,</span> <span class="token constant">S1</span> <span class="token operator">+</span> <span class="token constant">H3</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token constant">S4</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token constant">S3</span><span class="token punctuation">,</span> <span class="token constant">S2</span> <span class="token operator">+</span> <span class="token constant">H4</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h2 id="动态规划" tabindex="-1"><a class="header-anchor" href="#动态规划"><span>动态规划</span></a></h2><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">rob</span><span class="token punctuation">(</span>nums<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 初始化状态</span></span>
<span class="line">  <span class="token keyword">let</span> p <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token keyword">let</span> q <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> nums<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 状态转移</span></span>
<span class="line">    <span class="token keyword">const</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span> p <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    p <span class="token operator">=</span> q</span>
<span class="line">    q <span class="token operator">=</span> max</span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> q <span class="token operator">||</span> p</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,5)])])}const u=s(o,[["render",e]]),i=JSON.parse('{"path":"/algorithms/198-house-robber.html","title":"打家劫舍","lang":"zh-CN","frontmatter":{"autoSort":-198},"headers":[{"level":2,"title":"动态规划","slug":"动态规划","link":"#动态规划","children":[]}],"git":{"updatedTime":1639754417000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/198-house-robber.md"}');export{u as comp,i as data};
