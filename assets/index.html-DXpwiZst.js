import{_ as s,c as n,a as e,o as t}from"./app-DLCc4AGN.js";const l={};function p(o,a){return t(),n("div",null,[...a[0]||(a[0]=[e(`<h1 id="flutter" tabindex="-1"><a class="header-anchor" href="#flutter"><span>Flutter</span></a></h1><p>Flutter 官网地址为 <a href="https://flutter.dev/" target="_blank" rel="noopener noreferrer">flutter.dev</a></p><p>开发环境为 <code>manjaro</code>。</p><div class="hint-container caution"><p class="hint-container-title">补充</p><p>有意思的是，当我重新安装 <code>flutter</code> 后：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 此处为 gitlab 非 gitee</span></span>
<span class="line"><span class="token function">git</span> clone https://github.com/flutter/flutter.git</span>
<span class="line"></span></code></pre></div><p>以下在安装和使用时遇到的问题就消失了，但其中发生了什么也不可考究了。</p><p>所以不妨先按以下进行操作，最后再切换为 <code>github</code> 的仓库。</p></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><h3 id="_1-flutter-sdk" tabindex="-1"><a class="header-anchor" href="#_1-flutter-sdk"><span>1. Flutter SDK</span></a></h3><p>官网推荐最简单的方式是使用 <code>snap</code>，而 <a href="https://snapcraft.io/docs/installing-snapd" target="_blank" rel="noopener noreferrer">snapd</a> 是支持 manjaro 的，那么直接安装它：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># snap 官网说 manjaro 预装了 snap，但可惜的是我这边并没有</span></span>
<span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> snapd</span>
<span class="line"></span></code></pre></div><p>接着就可以安装 <code>flutter</code> 了：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> snap <span class="token function">install</span> flutter <span class="token parameter variable">--classic</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># error: cannot communicate with server: Post &quot;http://localhost/v2/snaps/flutter&quot;: dial unix /run/snapd.socket: connect: no such file or directory</span></span>
<span class="line"></span></code></pre></div><p>糟糕的是，安装失败了，<a href="https://askubuntu.com/questions/1258137/cannot-communicate-with-server-post-http-localhost-v2-apps-dial-unix-run-sn" target="_blank" rel="noopener noreferrer">找到解决方法</a>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> systemctl unmask snapd.service</span>
<span class="line">systemctl start snapd.service</span>
<span class="line"></span></code></pre></div><p>再继续执行上一步的安装命令，等待安装完成。</p><p>当然，由于网速问题，我选择了使用 <code>git</code> 下载的方式，并使用了 <code>gitee</code> 的仓库：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 修正 gitee 仓库名为 flutter</span></span>
<span class="line"><span class="token function">git</span> clone https://gitee.com/mirrors/Flutter.git flutter <span class="token parameter variable">-b</span> stable <span class="token parameter variable">--depth</span> <span class="token number">1</span></span>
<span class="line"></span></code></pre></div><h3 id="_2-添加环境变量" tabindex="-1"><a class="header-anchor" href="#_2-添加环境变量"><span>2. 添加环境变量</span></a></h3><p>再将其路径写到 <code>.bashrc</code> 或 <code>.zshrc</code> 等 <code>rc</code> 文件写入，还要记得将镜像改为 <code>cn</code>，否则你可能会卡在 <code>Building flutter tool...</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 增加 flutter</span></span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">PUB_HOSTED_URL</span><span class="token operator">=</span>https://pub.flutter-io.cn</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable">FLUTTER_STORAGE_BASE_URL</span><span class="token operator">=</span>https://storage.flutter-io.cn</span>
<span class="line"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token string">&quot;<span class="token environment constant">$PATH</span>:[PATH_TO_FLUTTER_GIT_DIRECTORY]/flutter/bin&quot;</span></span>
<span class="line"></span></code></pre></div><p>接着就可以找到 <code>flutter</code> 和 <code>dart</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">which</span> flutter dart</span>
<span class="line"></span></code></pre></div><h3 id="_3-flutter-doctor" tabindex="-1"><a class="header-anchor" href="#_3-flutter-doctor"><span>3. flutter doctor</span></a></h3><p>可用 <code>flutter doctor</code> 来检测缺乏的环境。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">Doctor summary <span class="token punctuation">(</span>to see all details, run flutter doctor -v<span class="token punctuation">)</span>:</span>
<span class="line"><span class="token punctuation">[</span>✓<span class="token punctuation">]</span> Flutter <span class="token punctuation">(</span>Channel unknown, <span class="token number">1.22</span>.0, on Linux, locale zh_CN.UTF-8<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">[</span>✗<span class="token punctuation">]</span> Android toolchain - develop <span class="token keyword">for</span> Android devices</span>
<span class="line">    ✗ Unable to <span class="token function">locate</span> Android SDK.</span>
<span class="line">      Install Android Studio from:</span>
<span class="line">      https://developer.android.com/studio/index.html</span>
<span class="line">      On first launch it will assist you <span class="token keyword">in</span> installing the Android SDK</span>
<span class="line">      components.</span>
<span class="line">      <span class="token punctuation">(</span>or visit</span>
<span class="line">      https://flutter.dev/docs/get-started/install/linux<span class="token comment">#android-setup for</span></span>
<span class="line">      detailed instructions<span class="token punctuation">)</span>.</span>
<span class="line">      If the Android SDK has been installed to a custom location, <span class="token builtin class-name">set</span></span>
<span class="line">      ANDROID_SDK_ROOT to that location.</span>
<span class="line">      You may also want to <span class="token function">add</span> it to your <span class="token environment constant">PATH</span> environment variable.</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Android Studio <span class="token punctuation">(</span>not installed<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Connected device</span>
<span class="line">    <span class="token operator">!</span> No devices available</span>
<span class="line"></span>
<span class="line"><span class="token operator">!</span> Doctor found issues <span class="token keyword">in</span> <span class="token number">3</span> categories.</span>
<span class="line"></span></code></pre></div><h3 id="_4-android-studio" tabindex="-1"><a class="header-anchor" href="#_4-android-studio"><span>4. Android Studio</span></a></h3><p>根据提示缺乏了 <code>android studio</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">sudo</span> pacman <span class="token parameter variable">-S</span> android-studio</span>
<span class="line"></span></code></pre></div><p>安装完成后启动 <code>Android Studio</code>，根据提示一步步操作即可。</p><p>可以再使用 <code>flutter doctor</code> 检测一下：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">Doctor summary <span class="token punctuation">(</span>to see all details, run flutter doctor -v<span class="token punctuation">)</span>:</span>
<span class="line"><span class="token punctuation">[</span>✓<span class="token punctuation">]</span> Flutter <span class="token punctuation">(</span>Channel unknown, <span class="token number">1.22</span>.0, on Linux, locale zh_CN.UTF-8<span class="token punctuation">)</span></span>
<span class="line"> </span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Android toolchain - develop <span class="token keyword">for</span> Android devices <span class="token punctuation">(</span>Android SDK version</span>
<span class="line">    <span class="token number">30.0</span>.2<span class="token punctuation">)</span></span>
<span class="line">    ✗ Android licenses not accepted.  To resolve this, run: flutter doctor</span>
<span class="line">      --android-licenses</span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Android Studio</span>
<span class="line">    ✗ Flutter plugin not installed<span class="token punctuation">;</span> this adds Flutter specific functionality.</span>
<span class="line">    ✗ Dart plugin not installed<span class="token punctuation">;</span> this adds Dart specific functionality.</span>
<span class="line"><span class="token punctuation">[</span><span class="token operator">!</span><span class="token punctuation">]</span> Connected device</span>
<span class="line">    <span class="token operator">!</span> No devices available</span>
<span class="line"></span></code></pre></div><h3 id="_5-plugins" tabindex="-1"><a class="header-anchor" href="#_5-plugins"><span>5. plugins</span></a></h3><p>启动 <code>Android Studio</code> 后在其右下角有 <code>Configure</code>，选择 <code>plugins</code>。</p><p>进入界面后搜索 <code>flutter</code>，点击 <code>installed</code> 后根据提示一步步确认即可。</p><p>糟糕的是，在 <code>flutter doctor</code> 检测下依然会提示未安装，但使用是可以使用的，<a href="https://stackoverflow.com/questions/57085479/android-studio-flutter-plugin-not-installed-this-adds-flutter-specific-functi" target="_blank" rel="noopener noreferrer">ubuntu 20.04 也存在该问题</a>。</p><h3 id="_6-toolchain" tabindex="-1"><a class="header-anchor" href="#_6-toolchain"><span>6. toolchain</span></a></h3><p>可以直接忽略：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">flutter doctor --android-licenses</span>
<span class="line"></span></code></pre></div><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><h3 id="_1-卡在-creating-flutter-project" tabindex="-1"><a class="header-anchor" href="#_1-卡在-creating-flutter-project"><span>1. 卡在 Creating Flutter Project</span></a></h3><p>创建项目时卡在 <code>Creating Flutter Project</code>，但前往对应目录时发现项目已经创建完成，<a href="https://blog.csdn.net/wojiaoqiaoxiaoqiao/article/details/105806943" target="_blank" rel="noopener noreferrer">解决方案</a>。</p><h3 id="_2-卡在-flutter-doctor" tabindex="-1"><a class="header-anchor" href="#_2-卡在-flutter-doctor"><span>2. 卡在 flutter doctor</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">Checking Android licenses is taking an unexpectedly long time<span class="token punctuation">..</span>.</span>
<span class="line"></span></code></pre></div><p>这个问题有点奇怪，但是直接关闭 <code>Android Studio</code> 后就没有问题了。</p><h3 id="_3-卡在-running-gradle-task-assembledebug" tabindex="-1"><a class="header-anchor" href="#_3-卡在-running-gradle-task-assembledebug"><span>3. 卡在 Running Gradle task &#39;assembleDebug</span></a></h3><p>参考这个<a href="https://stackoverflow.com/questions/59516408/flutter-app-stuck-at-running-gradle-task-assembledebug" target="_blank" rel="noopener noreferrer">解决方案</a>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 获取详细的信息</span></span>
<span class="line">flutter run <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre></div><blockquote><p>接下来的操作与其他回答均不一致，算是新手一顿乱操作竟然能运行了。</p></blockquote><p>发现时在下载 <code>gradle-5.6.2-all.zip</code> 引发了问题，手动将该文件下载下来放入 <code>/home/your_name/.gradle/wrapper/dists</code> 中。</p><p>然后修改项目的 <code>android/gradle/wrapper/gradle-wrapper.properties</code> 文件中 <code>distributionUrl</code> 指向 <code>file\\:///home/your_name/.gradle/wrapper/dists/gradle-5.6.2-all.zip</code>，然后将下载的文件放入该位置即可。</p><p>如果希望以后新建的项目都指向该地址呢？</p><p>回到之前 <code>git clone flutter</code> 的位置，找到 <code>packages/flutter_tools/templates/app/android.tmpl/gradle/wrapper/gradle-wrapper.properties</code> 文件，将 <code>distributionUrl</code> 指向 <code>file\\:///home/your_name/.gradle/wrapper/dists/gradle-5.6.2-all.zip</code> 即可。</p><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><h3 id="_1-禁用-ios" tabindex="-1"><a class="header-anchor" href="#_1-禁用-ios"><span>1. 禁用 ios</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 查看使用说明及当前配置</span></span>
<span class="line">flutter config <span class="token parameter variable">-h</span></span>
<span class="line"></span>
<span class="line">flutter config --no-enable-ios</span>
<span class="line"><span class="token comment"># Settings:</span></span>
<span class="line"><span class="token comment">#   enable-ios: false</span></span>
<span class="line"></span></code></pre></div>`,53)])])}const c=s(l,[["render",p]]),r=JSON.parse(`{"path":"/frontend/flutter/","title":"Flutter","lang":"zh-CN","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"1. Flutter SDK","slug":"_1-flutter-sdk","link":"#_1-flutter-sdk","children":[]},{"level":3,"title":"2. 添加环境变量","slug":"_2-添加环境变量","link":"#_2-添加环境变量","children":[]},{"level":3,"title":"3. flutter doctor","slug":"_3-flutter-doctor","link":"#_3-flutter-doctor","children":[]},{"level":3,"title":"4. Android Studio","slug":"_4-android-studio","link":"#_4-android-studio","children":[]},{"level":3,"title":"5. plugins","slug":"_5-plugins","link":"#_5-plugins","children":[]},{"level":3,"title":"6. toolchain","slug":"_6-toolchain","link":"#_6-toolchain","children":[]}]},{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[{"level":3,"title":"1. 卡在 Creating Flutter Project","slug":"_1-卡在-creating-flutter-project","link":"#_1-卡在-creating-flutter-project","children":[]},{"level":3,"title":"2. 卡在 flutter doctor","slug":"_2-卡在-flutter-doctor","link":"#_2-卡在-flutter-doctor","children":[]},{"level":3,"title":"3. 卡在 Running Gradle task 'assembleDebug","slug":"_3-卡在-running-gradle-task-assembledebug","link":"#_3-卡在-running-gradle-task-assembledebug","children":[]}]},{"level":2,"title":"配置","slug":"配置","link":"#配置","children":[{"level":3,"title":"1. 禁用 ios","slug":"_1-禁用-ios","link":"#_1-禁用-ios","children":[]}]}],"git":{"updatedTime":1637396781000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":4,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"frontend/flutter/README.md"}`);export{c as comp,r as data};
