import{_ as s,c as n,a as t,o as e}from"./app-BCSwjUcF.js";const p={};function o(c,a){return e(),n("div",null,a[0]||(a[0]=[t(`<h1 id="检测大写字母" tabindex="-1"><a class="header-anchor" href="#检测大写字母"><span>检测大写字母</span></a></h1><h2 id="正则" tabindex="-1"><a class="header-anchor" href="#正则"><span>正则</span></a></h2><p>正则匹配三种情况。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">detectCapitalUse</span><span class="token punctuation">(</span>word<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>word<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[A-Z]+$|^[A-Z][a-z]*$|^[a-z]+$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,4)]))}const i=s(p,[["render",o]]),r=JSON.parse('{"path":"/algorithms/520-detect-capital.html","title":"检测大写字母","lang":"zh-CN","frontmatter":{"autoSort":-520},"headers":[{"level":2,"title":"正则","slug":"正则","link":"#正则","children":[]}],"git":{"updatedTime":1637078109000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/520-detect-capital.md"}');export{i as comp,r as data};
