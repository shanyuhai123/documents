import{_ as e,c as n,a as s,o}from"./app-DNXRdI82.js";const r={};function l(t,a){return o(),n("div",null,a[0]||(a[0]=[s(`<h1 id="使用-lerna-维护关联的模块" tabindex="-1"><a class="header-anchor" href="#使用-lerna-维护关联的模块"><span>使用 Lerna 维护关联的模块</span></a></h1><blockquote><p>Lerna is a tool that optimizes the workflow around managing multi-package repositories with git and npm.</p><p>-- <a href="https://github.com/lerna/lerna" target="_blank" rel="noopener noreferrer">lerna</a></p></blockquote><p>对于维护多个 <code>package</code> 来说，都会遇到一个选择，是选择 <code>mono-repo</code> 还是 <code>multi-repo</code>。<code>multi-repo</code> 一个模块（module）一个仓库（repository），而 <code>mono-repo</code> 是所有模块整合在一个仓库，<a href="https://en.wikipedia.org/wiki/Monorepo" target="_blank" rel="noopener noreferrer">语义来源</a>。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p><code>lerna</code> 初始化分为两种模式：<code>fix</code>（默认，锁定模式，项目内的所有 package 共用版本号）、<code>independent</code>（独立模式，每个 <code>package</code> 拥有独立版本号）。个人认为大部分情况下都应该使用独立模式，即每个 <code>package</code> 都有自己的版本号。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 安装</span></span>
<span class="line"><span class="token function">npm</span> i lerna <span class="token parameter variable">-g</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># git</span></span>
<span class="line"><span class="token function">git</span> init lerna-repo <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> lerna-repo</span>
<span class="line"></span>
<span class="line"><span class="token comment"># lerna</span></span>
<span class="line">lerna init <span class="token punctuation">[</span>--independent<span class="token punctuation">]</span> <span class="token comment"># 生成下方文件夹</span></span>
<span class="line"><span class="token comment">#lerna-repo</span></span>
<span class="line"><span class="token comment">#├── lerna.json</span></span>
<span class="line"><span class="token comment">#├── package.json</span></span>
<span class="line"><span class="token comment">#└── packages</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 创建 packages</span></span>
<span class="line">lerna create pkg-1 <span class="token parameter variable">-y</span></span>
<span class="line">lerna create pkg-2 <span class="token parameter variable">-y</span></span>
<span class="line"></span></code></pre></div><h2 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖</span></a></h2><h3 id="_1-工具依赖" tabindex="-1"><a class="header-anchor" href="#_1-工具依赖"><span>1. 工具依赖</span></a></h3><p>对于 <code>eslint</code>、<code>commit-lint</code> 等工具依赖，可以直接使用 <code>yarn</code> 或 <code>npm</code> 安装到顶层。</p><h3 id="_2-package-依赖" tabindex="-1"><a class="header-anchor" href="#_2-package-依赖"><span>2. package 依赖</span></a></h3><p>针对 package 的依赖可以交由 <code>lerna</code> 安装。</p><ol><li><p>所有 packages</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">lerna <span class="token function">add</span> module1</span>
<span class="line"></span></code></pre></div></li><li><p>单独 package</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">lerna <span class="token function">add</span> module1 packages/pkg-1</span>
<span class="line"></span></code></pre></div></li><li><p>卸载</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 所有</span></span>
<span class="line">lerna <span class="token builtin class-name">exec</span> -- <span class="token string">&quot;yarn remove pkg-2&quot;</span></span>
<span class="line"><span class="token comment"># 指定</span></span>
<span class="line">lerna <span class="token builtin class-name">exec</span> <span class="token parameter variable">--scope</span><span class="token operator">=</span>pkg-1 <span class="token string">&quot;yarn remove pkg-2&quot;</span></span>
<span class="line"><span class="token comment"># 或使用空格替代 \`=\`</span></span>
<span class="line">lerna <span class="token builtin class-name">exec</span> <span class="token parameter variable">--scope</span> pkg-1 <span class="token string">&quot;yarn remove pkg-2&quot;</span></span>
<span class="line"></span></code></pre></div></li></ol><h3 id="_3-workspaces" tabindex="-1"><a class="header-anchor" href="#_3-workspaces"><span>3. workspaces</span></a></h3><p>为了减少子模块的重复依赖可以使用 <code>workspaces</code> 将依赖提取到上级目录。</p><p>启用该模式非常简单：</p><ol><li><p>在 <code>lerna.json</code> 中添加 <code>&quot;useWorkspaces&quot;: true</code></p></li><li><p>在 <code>package.json</code> 中添加 <code>&quot;workspaces&quot;: [&quot;packages/*&quot;]</code></p><p>按照约定俗成将模块放置于 <code>packages</code> 目录下</p></li></ol><p>有时候也会希望不同的模块走不同的依赖版本，这需要使用 <a href="https://classic.yarnpkg.com/blog/2018/02/15/nohoist/" target="_blank" rel="noopener noreferrer">nohoist</a>：</p><blockquote><p>注意，需要模块为 <code>private</code></p></blockquote><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;workspaces&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;packages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;packages/*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;nohoist&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;**/vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;**/vue/**&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>也可以在模块中进行设置：</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;workspaces&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;nohoist&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;vue&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;vue/**&quot;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p><code>lerna bootstrap</code> 也提供了参数 <a href="https://github.com/chinanf-boy/lerna-zh/blob/master/commands/bootstrap/README.zh.md#--nohoist-glob" target="_blank" rel="noopener noreferrer">--nohoist</a>。</p><h2 id="更多命令" tabindex="-1"><a class="header-anchor" href="#更多命令"><span>更多命令</span></a></h2><ul><li><a href="https://github.com/lerna/lerna/blob/master/commands/publish#readme" target="_blank" rel="noopener noreferrer"><code>lerna publish</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/version#readme" target="_blank" rel="noopener noreferrer"><code>lerna version</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/bootstrap#readme" target="_blank" rel="noopener noreferrer"><code>lerna bootstrap</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/list#readme" target="_blank" rel="noopener noreferrer"><code>lerna list</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/changed#readme" target="_blank" rel="noopener noreferrer"><code>lerna changed</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/diff#readme" target="_blank" rel="noopener noreferrer"><code>lerna diff</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/exec#readme" target="_blank" rel="noopener noreferrer"><code>lerna exec</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/run#readme" target="_blank" rel="noopener noreferrer"><code>lerna run</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/init#readme" target="_blank" rel="noopener noreferrer"><code>lerna init</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/add#readme" target="_blank" rel="noopener noreferrer"><code>lerna add</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/clean#readme" target="_blank" rel="noopener noreferrer"><code>lerna clean</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/import#readme" target="_blank" rel="noopener noreferrer"><code>lerna import</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/link#readme" target="_blank" rel="noopener noreferrer"><code>lerna link</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/create#readme" target="_blank" rel="noopener noreferrer"><code>lerna create</code></a></li><li><a href="https://github.com/lerna/lerna/blob/master/commands/info#readme" target="_blank" rel="noopener noreferrer"><code>lerna info</code></a></li></ul>`,24)]))}const c=e(r,[["render",l],["__file","lerna.html.vue"]]),i=JSON.parse('{"path":"/backend/nodejs/lerna.html","title":"使用 Lerna 维护关联的模块","lang":"zh-CN","frontmatter":{"description":"使用 Lerna 维护关联的模块","tags":["lerna"],"sidebarDepth":2},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"依赖","slug":"依赖","link":"#依赖","children":[{"level":3,"title":"1. 工具依赖","slug":"_1-工具依赖","link":"#_1-工具依赖","children":[]},{"level":3,"title":"2. package 依赖","slug":"_2-package-依赖","link":"#_2-package-依赖","children":[]},{"level":3,"title":"3. workspaces","slug":"_3-workspaces","link":"#_3-workspaces","children":[]}]},{"level":2,"title":"更多命令","slug":"更多命令","link":"#更多命令","children":[]}],"git":{"updatedTime":1637394685000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":5,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"backend/nodejs/lerna.md"}');export{c as comp,i as data};
