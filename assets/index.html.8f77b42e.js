import{r as n,c as a,a as s,b as t,F as p,e as o,d as e,o as c}from"./app.95f2f83b.js";import{_ as u}from"./plugin-vue_export-helper.5a098b48.js";const l={},k=o('<h1 id="花里胡哨的-canvas" tabindex="-1"><a class="header-anchor" href="#花里胡哨的-canvas" aria-hidden="true">#</a> 花里胡哨的 Canvas</h1><p>Canvas 只支持两种形式的图形绘制：矩形和路径。</p><h2 id="动画的基本步骤" tabindex="-1"><a class="header-anchor" href="#动画的基本步骤" aria-hidden="true">#</a> 动画的基本步骤</h2><blockquote><p>当调用 <code>fill</code> 函数时，所有没有闭合的形状都会自动闭合，所以不需要调用 <code>closePath</code> 函数，但调用 <code>stroke</code> 时不会自动闭合。</p></blockquote><ol><li>清空 canvas</li><li>保存 canvas 状态</li><li>绘制动画图形</li><li>恢复 canvas 状态</li></ol><h2 id="状态的保存和恢复" tabindex="-1"><a class="header-anchor" href="#状态的保存和恢复" aria-hidden="true">#</a> 状态的保存和恢复</h2><p>Canvas 状态存储在栈中，每当 <code>save</code> 方法调用后，当前的状态就被推送到栈中保存。一个绘画状态包括：</p><ul><li>当前应用的变形（移动、旋转和缩放）</li><li>以及下面这些属性：strokeStyle、fillStyle、globalAlpha、lineWidth、lineCap、lineJoin、miterLimit、lineDashOffset、shadowOffsetX、shadowOffsetY、shadowBlur、shadowColor、globalCompositeOperation、font、textAlign、textBaseline、direction、imageSmoothingEnabled</li><li>裁剪路径，用来隐藏不需要的部分</li></ul><h2 id="像素操作" tabindex="-1"><a class="header-anchor" href="#像素操作" aria-hidden="true">#</a> 像素操作</h2><p>可以通过 <code>ImageData</code> 对象操纵像素数据，直接读取或将数据数组写入该对象中。 读取某行某列的像素点可使用公式 <code>(列 * (imageData.width * 4)) + (行 * 4) + R/G/B/A</code>，其中 <code>R/G/B/A</code> 对应的值为 <code>0/1/2/3</code>。</p><h3 id="读取、写入像素" tabindex="-1"><a class="header-anchor" href="#读取、写入像素" aria-hidden="true">#</a> 读取、写入像素</h3><p>使用 <code>getImageData</code> 读取像素：</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">pick</span><span class="token punctuation">(</span>ctx<span class="token operator">:</span> CanvasRenderingContext2D<span class="token punctuation">,</span> event<span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span> destination<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX\n  <span class="token keyword">const</span> y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY\n  <span class="token keyword">const</span> pixel <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> pixel<span class="token punctuation">.</span>data\n\n  <span class="token keyword">const</span> rgba <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgba(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>r<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>g<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>a <span class="token operator">/</span> <span class="token number">255</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>\n  \n  destination<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> rgba\n  destination<span class="token punctuation">.</span>textContent <span class="token operator">=</span> rgba\n  <span class="token keyword">return</span> rgba\n<span class="token punctuation">}</span>\n</code></pre></div><p>使用 <code>putImageData</code> 写入像素：</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// 灰度</span>\n<span class="token keyword">const</span> grayscale <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> avg <span class="token operator">=</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span>\n    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> avg\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> avg\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> avg\n  <span class="token punctuation">}</span>\n\n  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 反相</span>\n<span class="token keyword">const</span> invert <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span> <span class="token operator">-</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n\n  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 复古（深褐色）</span>\n<span class="token keyword">const</span> sepia <span class="token operator">=</span> <span class="token punctuation">(</span>canvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>\n  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n  <span class="token keyword">const</span> imageData <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">getImageData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>width<span class="token punctuation">,</span> canvas<span class="token punctuation">.</span>height<span class="token punctuation">)</span>\n  <span class="token keyword">const</span> data <span class="token operator">=</span> imageData<span class="token punctuation">.</span>data\n\n  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">let</span> red <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> green <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> blue <span class="token operator">=</span> data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span>\n\n    data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.393</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.769</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.189</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.349</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.686</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.168</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n    data<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">0.272</span> <span class="token operator">*</span> red <span class="token operator">+</span> <span class="token number">0.534</span> <span class="token operator">*</span> green <span class="token operator">+</span> <span class="token number">0.131</span> <span class="token operator">*</span> blue<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n\n  ctx<span class="token punctuation">.</span><span class="token function">putImageData</span><span class="token punctuation">(</span>imageData<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="缩放和反锯齿" tabindex="-1"><a class="header-anchor" href="#缩放和反锯齿" aria-hidden="true">#</a> 缩放和反锯齿</h3><p>从原图中裁剪以鼠标中心 <code>10*10</code> 的像素，可以考虑先将原点移至 <code>-5,-5</code> 处，再向下裁剪 <code>10*10</code> 即可。</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> draw <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> MouseEvent<span class="token punctuation">,</span> originCanvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> zoomCanvas<span class="token operator">:</span> HTMLCanvasElement<span class="token punctuation">,</span> smooth<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> x <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX\n  <span class="token keyword">const</span> y <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY\n  <span class="token keyword">const</span> zCtx <span class="token operator">=</span> zoomCanvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">&#39;2d&#39;</span><span class="token punctuation">)</span>\n\n  <span class="token comment">// 抗锯齿</span>\n  zCtx<span class="token punctuation">.</span>imageSmoothingEnabled <span class="token operator">=</span> smooth\n  \n  zCtx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>\n    originCanvas<span class="token punctuation">,</span>\n    Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>x <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>y <span class="token operator">-</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// source</span>\n    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span> <span class="token comment">// destination</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',19),i={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Canvas_API/Tutorial",target:"_blank",rel:"noopener noreferrer"},r=e("MDN");var d=u(l,[["render",function(o,e){const u=n("OutboundLink");return c(),a(p,null,[k,s("ul",null,[s("li",null,[s("a",i,[r,t(u)])])])],64)}]]);export{d as default};
