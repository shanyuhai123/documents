import{e as n}from"./app.12170b86.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const a={},p=n(`<h1 id="nexttick-\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#nexttick-\u539F\u7406" aria-hidden="true">#</a> nextTick \u539F\u7406</h1><p>\u501F\u7528\u4E00\u4E0B <code>UI = f(state)</code>\uFF0C\u4F46\u5982\u679C\u8BF4\u53EA\u8981 <code>state</code> \u53D8\u5316\u4E86\u5C31\u53BB\u66F4\u65B0 <code>UI</code>\uFF0C\u8FD9\u4F1A\u5E26\u6765\u6027\u80FD\u4E0A\u7684\u95EE\u9898\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u4E00\u79CD\u673A\u5236\u6765\u627E\u5230\u4E00\u4E2A\u5408\u9002\u7684\u65F6\u95F4\u6539\u53D8 <code>UI</code>\u3002</p><h2 id="\u63ED\u6653\u6E90\u7801" tabindex="-1"><a class="header-anchor" href="#\u63ED\u6653\u6E90\u7801" aria-hidden="true">#</a> \u63ED\u6653\u6E90\u7801</h2><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">nextTick</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  <span class="token keyword">this</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  fn<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> currentFlushPromise <span class="token operator">||</span> resolvedPromise
  <span class="token keyword">return</span> fn <span class="token operator">?</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token operator">?</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">:</span> fn<span class="token punctuation">)</span> <span class="token operator">:</span> p
<span class="token punctuation">}</span>
</code></pre></div><p>\u56DB\u820D\u4E94\u5165\u53EF\u4EE5\u5F97\u5230\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">nextTick</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">=</span> <span class="token keyword">void</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  fn<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> fn <span class="token operator">?</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">:</span> p
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u5BF9\u5E94\u4E86\u4E24\u4E2A\u7528\u6CD5\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// 1. \u5728 nextTick \u4E2D\u6267\u884C</span>
<span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">// 2. \u914D\u5408 await \u4F7F\u7528</span>
<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u4ECE\u5355\u6D4B\u5F00\u59CB" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u5355\u6D4B\u5F00\u59CB" aria-hidden="true">#</a> \u4ECE\u5355\u6D4B\u5F00\u59CB</h2><p><code>nextTick</code> \u662F <code>scheduler</code> \u7684\u4E00\u90E8\u5206\uFF0C\u5F97\u8054\u7CFB\u5177\u4F53\u7684\u5B9E\u73B0\u624D\u53EF\u4EE5\u5F97\u77E5\u5176\u4EF7\u503C\u3002</p><h3 id="nexttick" tabindex="-1"><a class="header-anchor" href="#nexttick" aria-hidden="true">#</a> nextTick</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;nextTick&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> calls<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> dummyThen <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">nextTick</span><span class="token punctuation">(</span>job1<span class="token punctuation">)</span>
  <span class="token function">job2</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> dummyThen
  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatchObject</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;job2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><code>nextTick</code> \u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\uFF0C\u5E76\u4E14\u5728\u5FAE\u4EFB\u52A1 <code>dummyThen</code> \u6267\u884C\u540E\u6267\u884C\uFF0C\u6240\u4EE5\u5F88\u5BB9\u6613\u5F97\u5230\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">nextTick</span> <span class="token punctuation">(</span>fn<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> fn <span class="token operator">?</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">:</span> p
<span class="token punctuation">}</span>
</code></pre></div><h3 id="queuejob" tabindex="-1"><a class="header-anchor" href="#queuejob" aria-hidden="true">#</a> queueJob</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&#39;basic usage&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> calls<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job1&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job2&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">queueJob</span><span class="token punctuation">(</span>job1<span class="token punctuation">)</span>
  <span class="token function">queueJob</span><span class="token punctuation">(</span>job2<span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;job1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><code>queueJob</code> \u53EF\u4EE5\u63A5\u6536\u51FD\u6570\uFF0C\u5E76\u4E14\u5728 <code>nextTick</code> \u540E\u4F9D\u6B21\u8F93\u51FA\uFF0C\u6240\u4EE5\u76F4\u63A5\u628A <code>nextTick</code> \u4EE3\u7801\u6284\u4E00\u4E0B\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">queueJob</span> <span class="token punctuation">(</span><span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> fn <span class="token operator">?</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">:</span> p
<span class="token punctuation">}</span>
</code></pre></div><h3 id="queuejob-flushing" tabindex="-1"><a class="header-anchor" href="#queuejob-flushing" aria-hidden="true">#</a> queueJob flushing</h3><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&quot;should insert jobs in ascending order of job&#39;s id when flushing&quot;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> calls<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job3</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job3&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  job3<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">1</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job4</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job4&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job5</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job5&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job2&#39;</span><span class="token punctuation">)</span>
    <span class="token function">queueJob</span><span class="token punctuation">(</span>job4<span class="token punctuation">)</span>
    <span class="token function">queueJob</span><span class="token punctuation">(</span>job5<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  job2<span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token number">10</span>
  <span class="token keyword">const</span> <span class="token function-variable function">job1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    calls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;job1&#39;</span><span class="token punctuation">)</span>

    <span class="token function">queueJob</span><span class="token punctuation">(</span>job2<span class="token punctuation">)</span>
    <span class="token function">queueJob</span><span class="token punctuation">(</span>job3<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">queueJob</span><span class="token punctuation">(</span>job1<span class="token punctuation">)</span>

  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">expect</span><span class="token punctuation">(</span>calls<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEqual</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;job1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job4&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;job5&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>\u4ECE\u4E2D\u53EF\u4EE5\u53D1\u73B0 <code>queneJob</code> \u5B58\u5728\u4E00\u4E2A\u6392\u5E8F\u7684\u80FD\u529B\uFF0C\u8BF4\u660E\u5176\u5E76\u975E\u662F\u7ACB\u5373\u6267\u884C <code>Promise.resolve()</code> \u7684\uFF0C\u9700\u8981\u7EF4\u62A4\u4E00\u4E2A\u961F\u5217\uFF1A</p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// \u4E00\u5F00\u59CB\u6709\u8003\u8651\u5229\u7528 findIndex \u6216 filter \u9488\u5BF9\u4E00\u4E9B\u6761\u4EF6\u63D0\u524D\u5904\u7406\uFF0C\u4F46\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u4F1A\u5BFC\u81F4\u4E00\u6B21\u5FAA\u73AF\uFF0C\u90A3\u4E0D\u5982\u76F4\u63A5\u5FAA\u73AF\u5224\u65AD</span>

</code></pre></div>`,22);function t(o,c){return p}var l=s(a,[["render",t]]);export{l as default};
