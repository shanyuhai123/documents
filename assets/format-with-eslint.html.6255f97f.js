import{r as n,o as s,c as a,a as t,F as o,b as p,d as e}from"./app.234fe1d4.js";const c={},l=t("h2",{id:"介绍",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),p(" 介绍")],-1),u=p("格式化插件 "),i={href:"https://cn.eslint.org/",target:"_blank",rel:"noopener noreferrer"},r=p("ESLint"),d=p("。"),k=e('<h2 id="eslint-依赖" tabindex="-1"><a class="header-anchor" href="#eslint-依赖" aria-hidden="true">#</a> ESLint 依赖</h2><p>安装依赖：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 初始化</span>\n<span class="token function">npm</span> init -y\n\n<span class="token comment"># 安装 eslint</span>\n<span class="token function">npm</span> i eslint -D\n<span class="token comment"># 如果需要支持 ts</span>\n<span class="token function">npm</span> i typescript -D\n</code></pre></div><p>初始化 eslint：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># https://docs.npmjs.com/cli/v7/commands/npx</span>\nnpx eslint --init\n</code></pre></div><p>检测和格式化文件：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>npx eslint yourfile.js\nnpx eslint yourfile.js --fix\n</code></pre></div><p>也可以配置 <code>package.json</code> script：</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eslint --ext .js ./ --fix&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>至于在 <code>git hooks</code> 处添加 <code>lint</code>，此处就不展开了。</p><h2 id="启用插件" tabindex="-1"><a class="header-anchor" href="#启用插件" aria-hidden="true">#</a> 启用插件</h2><p>以上都是命令行完成的，回到主题，当希望在编辑器 <code>VSCode</code> 中获得更好的展示则需要安装一些插件：</p><ol><li><code>Vetur</code> 更好的支持 <code>Vue</code> 文件(与格式化无关)；</li><li><code>ESLint</code> 支持自动格式化。</li></ol><p>配置 <code>ESLint</code> 后在编辑器中保存(<code>Ctrl + S</code>)即会自动格式化。</p><div class="language-json ext-json"><pre class="language-json"><code><span class="token comment">// eslint + format</span>\n<span class="token property">&quot;eslint.options&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;extensions&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token string">&quot;.js&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;.jsx&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;.ts&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;.tsx&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;.html&quot;</span><span class="token punctuation">,</span>\n    <span class="token string">&quot;.vue&quot;</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token property">&quot;eslint.validate&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n  <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;javascriptreact&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;typescriptreact&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;html&quot;</span><span class="token punctuation">,</span>\n  <span class="token string">&quot;vue&quot;</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token property">&quot;editor.codeActionsOnSave&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token property">&quot;source.fixAll.eslint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',15);c.render=function(p,e){const c=n("OutboundLink");return s(),a(o,null,[l,t("p",null,[u,t("a",i,[r,t(c)]),d]),k],64)};export default c;
