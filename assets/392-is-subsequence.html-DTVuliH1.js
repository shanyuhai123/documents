import{_ as n,c as a,a as p,o as t}from"./app-DNXRdI82.js";const e={};function o(c,s){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="判断子序列" tabindex="-1"><a class="header-anchor" href="#判断子序列"><span>判断子序列</span></a></h1><h2 id="双指针" tabindex="-1"><a class="header-anchor" href="#双指针"><span>双指针</span></a></h2><p>原始字符串每轮都会增加，子序列一致时才增加。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">isSubsequence</span><span class="token punctuation">(</span>s<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> t<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> sp <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> tp <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>sp <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> tp <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>sp<span class="token punctuation">]</span> <span class="token operator">===</span> t<span class="token punctuation">[</span>tp<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      sp<span class="token operator">++</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    tp<span class="token operator">++</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> sp <span class="token operator">===</span> s<span class="token punctuation">.</span>length</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,4)]))}const i=n(e,[["render",o],["__file","392-is-subsequence.html.vue"]]),u=JSON.parse('{"path":"/algorithms/392-is-subsequence.html","title":"判断子序列","lang":"zh-CN","frontmatter":{"autoSort":-392},"headers":[{"level":2,"title":"双指针","slug":"双指针","link":"#双指针","children":[]}],"git":{"updatedTime":1636289062000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/392-is-subsequence.md"}');export{i as comp,u as data};
