import{_ as s,c as a,a as p,o as t}from"./app-DLCc4AGN.js";const e={};function o(c,n){return t(),a("div",null,[...n[0]||(n[0]=[p(`<h1 id="从-cli-开始" tabindex="-1"><a class="header-anchor" href="#从-cli-开始"><span>从 CLI 开始</span></a></h1><blockquote><p>CLI(Command-Line Interface) 虽可手动监听用户输入，但从头开始则显得过于麻烦了，借助社区的力量吧。</p></blockquote><h2 id="工具包" tabindex="-1"><a class="header-anchor" href="#工具包"><span>工具包</span></a></h2><table><thead><tr><th style="text-align:center;">工具</th><th>作用</th></tr></thead><tbody><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/commander" target="_blank" rel="noopener noreferrer">commander</a></td><td>解析用户命令行的输入、参数</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/chalk" target="_blank" rel="noopener noreferrer">chalk</a></td><td>美化控制台的输出内容：字体、颜色、背景色</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/inquirer" target="_blank" rel="noopener noreferrer">inquirer</a></td><td>命令行交互</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/slash" target="_blank" rel="noopener noreferrer">slash</a></td><td>在 Windows 中使用 / 路径</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/minimist" target="_blank" rel="noopener noreferrer">minimist</a></td><td>解析参数</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/ora" target="_blank" rel="noopener noreferrer">ora</a></td><td>优雅的加载效果</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/dotenv" target="_blank" rel="noopener noreferrer">dotenv</a></td><td>从 <code>.env</code> 文件中加载环境变量到 <code>process.env</code></td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/yaml-front-matter" target="_blank" rel="noopener noreferrer">yaml-front-matter</a></td><td>解析文件内的 <code>frontmatter</code></td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/portfinder" target="_blank" rel="noopener noreferrer">portfinder</a></td><td>寻找可用端口号</td></tr><tr><td style="text-align:center;"><a href="https://www.npmjs.com/package/semver" target="_blank" rel="noopener noreferrer">semver</a></td><td>校验版本</td></tr></tbody></table><h2 id="简单-cli" tabindex="-1"><a class="header-anchor" href="#简单-cli"><span>简单 CLI</span></a></h2><h3 id="从-hello-cli-开始" tabindex="-1"><a class="header-anchor" href="#从-hello-cli-开始"><span>从 HELLO CLI 开始</span></a></h3><p>初始化：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> hello-cli/bin </span>
<span class="line"><span class="token builtin class-name">cd</span> hello-cli <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"></span></code></pre></div><p>添加文件：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> bin/cli.js <span class="token operator">&lt;&lt;</span> <span class="token string">EOF</span>
<span class="line">#! /usr/bin/env node</span>
<span class="line"></span>
<span class="line">console.log(&quot;Hello CLI&quot;)</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre></div><p>在 <code>package.json</code> 中指定入口：</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;bin&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./bin/cli.js&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>链接到全局并执行：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 链接到全局</span></span>
<span class="line"><span class="token function">npm</span> <span class="token function">link</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 执行</span></span>
<span class="line">hello-cli</span>
<span class="line"><span class="token comment"># Hello CLI</span></span>
<span class="line"></span></code></pre></div><h3 id="解析命令-commander" tabindex="-1"><a class="header-anchor" href="#解析命令-commander"><span>解析命令 commander</span></a></h3><p>引入依赖：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">yarn</span> <span class="token function">add</span> commander</span>
<span class="line"></span></code></pre></div><p>修改 <code>cli.js</code>：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token hashbang comment">#! /usr/bin/env node</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> program <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;commander&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token keyword">package</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">program</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token keyword">package</span><span class="token punctuation">.</span>version<span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&#39;create &lt;app-name&gt;&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&#39;create a new project powered by cli-test&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">project name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">program<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><p>测试：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">hello-cli</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出</span></span>
<span class="line">Usage: hello-cli <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">Options:</span>
<span class="line">  -V, <span class="token parameter variable">--version</span>      output the version number</span>
<span class="line">  -h, <span class="token parameter variable">--help</span>         display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span></span>
<span class="line"></span>
<span class="line">Commands:</span>
<span class="line">  create <span class="token operator">&lt;</span>app-name<span class="token operator">&gt;</span>  create a new project powered by cli-test</span>
<span class="line">  <span class="token builtin class-name">help</span> <span class="token punctuation">[</span>command<span class="token punctuation">]</span>     display <span class="token builtin class-name">help</span> <span class="token keyword">for</span> <span class="token builtin class-name">command</span></span>
<span class="line">  </span>
<span class="line">hello-cli <span class="token parameter variable">-V</span></span>
<span class="line"><span class="token comment"># 1.0.0</span></span>
<span class="line"></span>
<span class="line">hello-cli create my-app</span>
<span class="line"><span class="token comment"># project name is my-app</span></span>
<span class="line"></span></code></pre></div><h3 id="交互及美化输出" tabindex="-1"><a class="header-anchor" href="#交互及美化输出"><span>交互及美化输出</span></a></h3><p>引入依赖：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 交互</span></span>
<span class="line"><span class="token function">yarn</span> <span class="token function">add</span> inquirer</span>
<span class="line"><span class="token comment"># 美化</span></span>
<span class="line"><span class="token function">yarn</span> <span class="token function">add</span> chalk</span>
<span class="line"></span></code></pre></div><p>修改 <code>action</code> 内容：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">program</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> ok<span class="token punctuation">,</span> color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Generate project in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token string">&#39;current&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> directory?</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;input color&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">your project is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div><h3 id="加载效果" tabindex="-1"><a class="header-anchor" href="#加载效果"><span>加载效果</span></a></h3><p>引入依赖：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">yarn</span> <span class="token function">add</span> ora</span>
<span class="line"></span></code></pre></div><p>再调整 <code>action</code>：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">program</span>
<span class="line">  <span class="token punctuation">.</span><span class="token function">action</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">name</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> ok<span class="token punctuation">,</span> color <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;ok&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;confirm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Generate project in </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">.</span><span class="token function">cyan</span><span class="token punctuation">(</span><span class="token string">&#39;current&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> directory?</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;color&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;input color&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> spinner <span class="token operator">=</span> <span class="token function">ora</span><span class="token punctuation">(</span><span class="token string">&#39;Loading unicorns&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">      spinner<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&#39;red&#39;</span></span>
<span class="line"></span>
<span class="line">      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        spinner<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        spinner<span class="token punctuation">.</span><span class="token function">succeed</span><span class="token punctuation">(</span><span class="token string">&#39;Loading succeed&#39;</span><span class="token punctuation">)</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">your project is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>chalk<span class="token punctuation">[</span>color<span class="token punctuation">]</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre></div>`,31)])])}const i=s(e,[["render",o]]),r=JSON.parse('{"path":"/frontend/web/begin-with-cli.html","title":"从 CLI 开始","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"工具包","slug":"工具包","link":"#工具包","children":[]},{"level":2,"title":"简单 CLI","slug":"简单-cli","link":"#简单-cli","children":[{"level":3,"title":"从 HELLO CLI 开始","slug":"从-hello-cli-开始","link":"#从-hello-cli-开始","children":[]},{"level":3,"title":"解析命令 commander","slug":"解析命令-commander","link":"#解析命令-commander","children":[]},{"level":3,"title":"交互及美化输出","slug":"交互及美化输出","link":"#交互及美化输出","children":[]},{"level":3,"title":"加载效果","slug":"加载效果","link":"#加载效果","children":[]}]}],"git":{"updatedTime":1637398485000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":2,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"frontend/web/begin-with-cli.md"}');export{i as comp,r as data};
