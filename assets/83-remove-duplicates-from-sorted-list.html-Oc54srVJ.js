import{_ as n,c as a,a as t,o as p}from"./app-DNXRdI82.js";const e={};function o(c,s){return p(),a("div",null,s[0]||(s[0]=[t(`<h1 id="删除排序链表中的重复元素" tabindex="-1"><a class="header-anchor" href="#删除排序链表中的重复元素"><span>删除排序链表中的重复元素</span></a></h1><h2 id="遍历" tabindex="-1"><a class="header-anchor" href="#遍历"><span>遍历</span></a></h2><p>由于数据是排序的，所以遍历即可。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">deleteDuplicates</span><span class="token punctuation">(</span>head<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token keyword">return</span> head</span>
<span class="line"></span>
<span class="line">  <span class="token keyword">let</span> cur<span class="token operator">:</span> ListNode <span class="token operator">=</span> head</span>
<span class="line">  <span class="token keyword">while</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">.</span>val <span class="token operator">===</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      cur<span class="token punctuation">.</span>next <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next</span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> head</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,4)]))}const i=n(e,[["render",o],["__file","83-remove-duplicates-from-sorted-list.html.vue"]]),r=JSON.parse('{"path":"/algorithms/83-remove-duplicates-from-sorted-list.html","title":"删除排序链表中的重复元素","lang":"zh-CN","frontmatter":{"autoSort":-83},"headers":[{"level":2,"title":"遍历","slug":"遍历","link":"#遍历","children":[]}],"git":{"updatedTime":1633444036000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/83-remove-duplicates-from-sorted-list.md"}');export{i as comp,r as data};
