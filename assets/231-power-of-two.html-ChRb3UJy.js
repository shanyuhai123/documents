import{_ as a,c as n,a as p,o as t}from"./app-DLCc4AGN.js";const e={};function o(l,s){return t(),n("div",null,[...s[0]||(s[0]=[p(`<h1 id="_2-的幂" tabindex="-1"><a class="header-anchor" href="#_2-的幂"><span>2 的幂</span></a></h1><p>题目不让用递归和循环。</p><h2 id="二进制" tabindex="-1"><a class="header-anchor" href="#二进制"><span>二进制</span></a></h2><p>都提到 2 的幂了，也很快联想到二进制、位运算，不过依然需避开循环。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 100 &amp; 011 =&gt; 0</span></span>
<span class="line">  <span class="token comment">// 以此类推</span></span>
<span class="line">  <span class="token keyword">return</span> n <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="约数" tabindex="-1"><a class="header-anchor" href="#约数"><span>约数</span></a></h2><p>根本没想到的方法。</p><div class="language-typescript" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token constant">BIG</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">30</span></span>
<span class="line">  <span class="token keyword">return</span> n <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token constant">BIG</span> <span class="token operator">%</span> n <span class="token operator">===</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div>`,8)])])}const r=a(e,[["render",o]]),i=JSON.parse('{"path":"/algorithms/231-power-of-two.html","title":"2 的幂","lang":"zh-CN","frontmatter":{"autoSort":-231},"headers":[{"level":2,"title":"二进制","slug":"二进制","link":"#二进制","children":[]},{"level":2,"title":"约数","slug":"约数","link":"#约数","children":[]}],"git":{"updatedTime":1635424694000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":1,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"algorithms/231-power-of-two.md"}');export{r as comp,i as data};
