import{r as n,o as s,c as a,a as e,b as t,w as p,F as o,d as l,e as c}from"./app.23b05bf3.js";const i={},r=e("h2",{id:"介绍",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#介绍","aria-hidden":"true"},"#"),l(" 介绍")],-1),k=l("当使用"),g=l("编译安装 Nginx"),u=l(" 后，同样希望将 Nginx 加入至 systemd 进行管理，如果可以的话希望进一步对该 Nginx 进行区分。"),d=c('<h2 id="阅读" tabindex="-1"><a class="header-anchor" href="#阅读" aria-hidden="true">#</a> 阅读</h2><p>首先需要了解一下 yum 安装的 Nginx 配置：</p><div class="language-bash ext-sh"><pre class="language-bash"><code>systemctl <span class="token function">cat</span> nginx.service\n\n<span class="token comment"># /lib/systemd/system/nginx.service</span>\n<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>\n<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx - high performance web server\n<span class="token assign-left variable">Documentation</span><span class="token operator">=</span>http://nginx.org/en/docs/\n<span class="token assign-left variable">After</span><span class="token operator">=</span>network-online.target remote-fs.target nss-lookup.target\n<span class="token assign-left variable">Wants</span><span class="token operator">=</span>network-online.target\n\n<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>\n<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking\n<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/var/run/nginx.pid\n<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/sbin/nginx -c /etc/nginx/nginx.conf\n<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/bin/kill -s HUP <span class="token variable">$MAINPID</span>\n<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/bin/kill -s <span class="token environment constant">TERM</span> <span class="token variable">$MAINPID</span>\n\n<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>\n<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target\n</code></pre></div>',3),b=l("接着可以阅读下官网的"),x={href:"https://www.nginx.com/resources/wiki/start/topics/examples/systemd/",target:"_blank",rel:"noopener noreferrer"},m=l("示例"),h=l("："),f=c('<div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>\n<span class="token assign-left variable">Description</span><span class="token operator">=</span>The NGINX HTTP and reverse proxy server\n<span class="token assign-left variable">After</span><span class="token operator">=</span>syslog.target network.target remote-fs.target nss-lookup.target\n\n<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>\n<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking\n<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/run/nginx.pid\n<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/usr/sbin/nginx -t\n<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/sbin/nginx\n<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/sbin/nginx -s reload\n<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/bin/kill -s QUIT <span class="token variable">$MAINPID</span>\n<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true\n\n<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>\n<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target\n</code></pre></div><h2 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h2><h3 id="_1-下载" tabindex="-1"><a class="header-anchor" href="#_1-下载" aria-hidden="true">#</a> 1. 下载</h3><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /usr/local/src <span class="token comment"># /usr/src 常用于存放内核源码</span>\n</code></pre></div>',4),v=l("接着按照"),y=l("之前"),E=l("操作。"),I=c('<h3 id="_2-编译" tabindex="-1"><a class="header-anchor" href="#_2-编译" aria-hidden="true">#</a> 2. 编译</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>./configure --help <span class="token operator">|</span> <span class="token function">less</span> <span class="token comment"># 查看帮助</span>\n./configure --prefix<span class="token operator">=</span>/usr/local/nginx <span class="token comment"># 指定目录</span>\n<span class="token function">make</span> <span class="token comment"># 编译</span>\n<span class="token function">make</span> <span class="token function">install</span> <span class="token comment"># 安装</span>\n\n/usr/local/nginx -V <span class="token comment"># 验证 </span>\n</code></pre></div><h3 id="_3-配置" tabindex="-1"><a class="header-anchor" href="#_3-配置" aria-hidden="true">#</a> 3. 配置</h3><p>nginx 配置：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># 启用 pid 路径</span>\n<span class="token function">vim</span> /usr/local/nginx/conf/nginx.conf\n</code></pre></div><p>systemd 配置：</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">vim</span> /usr/lib/systemd/system/nginx-compile.service <span class="token comment"># 此处自定义命名为 nginx-compile</span>\n\n<span class="token comment"># 添加如下内容</span>\n<span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>\n<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx<span class="token punctuation">(</span>compile<span class="token punctuation">)</span> - high performance web server\n<span class="token assign-left variable">Documentation</span><span class="token operator">=</span>http://nginx.org/en/docs/\n<span class="token assign-left variable">After</span><span class="token operator">=</span>syslog.target network.target remote-fs.target nss-lookup.target\n\n<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>\n<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking\n<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/usr/local/nginx/logs/nginx.pid\n<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx -t\n<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf\n<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx -s reload\n<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx -s stop\n<span class="token comment"># 官网示例如下，但个人使用的为上面两种，尚分不清好坏</span>\n<span class="token comment"># ExecReload=/bin/kill -s HUP $MAINPID</span>\n<span class="token comment"># ExecStop=/bin/kill -s QUIT $MAINPID</span>\n<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true\n\n<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>\n<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target\n</code></pre></div><h3 id="_4-验证" tabindex="-1"><a class="header-anchor" href="#_4-验证" aria-hidden="true">#</a> 4. 验证</h3><div class="language-bash ext-sh"><pre class="language-bash"><code>systemctl status nginx-compile.service <span class="token comment"># 显示正确后即可执行 systemctl 套件</span>\nsystemctl start nginx-compile.service\nsystemctl <span class="token builtin class-name">enable</span> nginx-compile.service\nsystemctl status nginx-compile.service <span class="token comment"># 验证</span>\n</code></pre></div>',9);i.render=function(l,c){const i=n("RouterLink"),D=n("OutboundLink");return s(),a(o,null,[r,e("p",null,[k,t(i,{to:"/backend/nginx/install-nginx.html#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85"},{default:p((()=>[g])),_:1}),u]),d,e("p",null,[b,e("a",x,[m,t(D)]),h]),f,e("p",null,[v,t(i,{to:"/backend/nginx/install-nginx.html#_2-%E4%B8%8B%E8%BD%BD"},{default:p((()=>[y])),_:1}),E]),I],64)};export{i as default};
