import{e as a}from"./app.f0b2ea56.js";import{_ as s}from"./plugin-vue_export-helper.5a098b48.js";const n={},p=a(`<h1 id="\u76F8\u4EA4\u94FE\u8868" tabindex="-1"><a class="header-anchor" href="#\u76F8\u4EA4\u94FE\u8868" aria-hidden="true">#</a> \u76F8\u4EA4\u94FE\u8868</h1><p>\u8FD9\u79CD\u9898\u76EE\u90FD\u53EF\u4EE5\u7528\u54C8\u5E0C\u8868\u6765\u65B9\u4FBF\u89E3\u51B3\uFF0C\u4F46\u8FFD\u6C42\u5E38\u91CF\u7A7A\u95F4\u89E3\u51B3\u65B9\u6848\u65F6\u5219\u96BE\u5EA6\u52A0\u500D\u3002</p><h2 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h2><p>\u8FD9\u4E2A\u5F88\u6709\u610F\u601D\uFF0C\u4EA4\u6362\u5F0F\uFF1A<code>a + c + b === b + c + a</code></p><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">getIntersectionNode</span><span class="token punctuation">(</span>headA<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> headB<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>headA <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> headB <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> pa<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> headA<span class="token punctuation">,</span> pb<span class="token operator">:</span> ListNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">=</span> headB
  <span class="token keyword">while</span> <span class="token punctuation">(</span>pa <span class="token operator">!==</span> pb<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    pa <span class="token operator">=</span> pa <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> headB <span class="token operator">:</span> pa<span class="token punctuation">.</span>next
    pb <span class="token operator">=</span> pb <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> headA <span class="token operator">:</span> pb<span class="token punctuation">.</span>next
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> pa
<span class="token punctuation">}</span>
</code></pre></div>`,5);function o(e,t){return p}var l=s(n,[["render",o]]);export{l as default};
