import{_ as o,M as e,p as c,q as u,Q as n,t as s,N as p,a1 as t}from"./framework-49860b1b.js";const l={},r=t('<h1 id="数学" tabindex="-1"><a class="header-anchor" href="#数学" aria-hidden="true">#</a> 数学</h1><h2 id="求和" tabindex="-1"><a class="header-anchor" href="#求和" aria-hidden="true">#</a> 求和</h2><h3 id="_1-sum" tabindex="-1"><a class="header-anchor" href="#_1-sum" aria-hidden="true">#</a> 1. sum</h3><p><strong>FROM</strong></p>',4),k={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},i=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
<span class="token function">sum</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>
</code></pre></div><h3 id="_2-sumpower" tabindex="-1"><a class="header-anchor" href="#_2-sumpower" aria-hidden="true">#</a> 2. sumPower</h3><p><strong>FROM</strong></p>`,8),d={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},g=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sumPower</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">end<span class="token punctuation">,</span> power <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> start <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token function">Array</span><span class="token punctuation">(</span>end <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> start<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> start<span class="token punctuation">)</span> <span class="token operator">**</span> power<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">+</span> b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">sumPower</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 385</span>
<span class="token function">sumPower</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3025</span>
<span class="token function">sumPower</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2925</span>
</code></pre></div><h3 id="_3-accumulate" tabindex="-1"><a class="header-anchor" href="#_3-accumulate" aria-hidden="true">#</a> 3. accumulate</h3><p><strong>FROM</strong></p>`,8),m={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},h=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">accumulate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>nums</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span>acc<span class="token punctuation">,</span> n <span class="token operator">+</span> <span class="token operator">+</span>acc<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">accumulate</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 3, 6, 10]</span>
<span class="token function">accumulate</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 3, 6, 10]</span>
</code></pre></div><h3 id="_4-distance-平方和后平方根" tabindex="-1"><a class="header-anchor" href="#_4-distance-平方和后平方根" aria-hidden="true">#</a> 4. distance（平方和后平方根）</h3><p><strong>FROM</strong></p>`,8),f={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},b=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">distance</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x0<span class="token punctuation">,</span> y0<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">hypot</span><span class="token punctuation">(</span>x1 <span class="token operator">-</span> x0<span class="token punctuation">,</span> y1 <span class="token operator">-</span> y0<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">distance</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2.23606797749979</span>
</code></pre></div><h3 id="_5-factorial-递归" tabindex="-1"><a class="header-anchor" href="#_5-factorial-递归" aria-hidden="true">#</a> 5. factorial（递归）</h3><p><strong>FROM</strong></p>`,8),v={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},_=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">factorial</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span>
  n <span class="token operator">&lt;</span> <span class="token number">0</span>
    <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;Negative numbers are not allowed!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> n <span class="token operator">&lt;=</span> <span class="token number">1</span>
    <span class="token operator">?</span> <span class="token number">1</span>
    <span class="token operator">:</span> n <span class="token operator">*</span> <span class="token function">factorial</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">factorial</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 720</span>
</code></pre></div><h2 id="均值" tabindex="-1"><a class="header-anchor" href="#均值" aria-hidden="true">#</a> 均值</h2><h3 id="_1-average" tabindex="-1"><a class="header-anchor" href="#_1-average" aria-hidden="true">#</a> 1. average</h3><p><strong>FROM</strong></p>`,9),w={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},j=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">average</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>nums</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> nums<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">average</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
<span class="token function">average</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
</code></pre></div><h3 id="_2-averageby-by" tabindex="-1"><a class="header-anchor" href="#_2-averageby-by" aria-hidden="true">#</a> 2. averageBy（by）</h3><p><strong>FROM</strong></p>`,8),y={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},x=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">averageBy</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">fn</span> <span class="token operator">:</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> val<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span>
  arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">averageBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token parameter">o</span> <span class="token operator">=&gt;</span> o<span class="token punctuation">.</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
<span class="token function">averageBy</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">n</span><span class="token operator">:</span> <span class="token number">6</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre></div><h2 id="相等" tabindex="-1"><a class="header-anchor" href="#相等" aria-hidden="true">#</a> 相等</h2><h3 id="_1-approximatelyequal-约" tabindex="-1"><a class="header-anchor" href="#_1-approximatelyequal-约" aria-hidden="true">#</a> 1. approximatelyEqual（约）</h3><p><strong>FROM</strong></p>`,9),M={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},E=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">approximatelyEqual</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">v1<span class="token punctuation">,</span> v2<span class="token punctuation">,</span> epsilon <span class="token operator">=</span> <span class="token number">0.001</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>v1 <span class="token operator">-</span> v2<span class="token punctuation">)</span> <span class="token operator">&lt;</span> epsilon<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">approximatelyEqual</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">1.5708</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_2-isnegativezero-0" tabindex="-1"><a class="header-anchor" href="#_2-isnegativezero-0" aria-hidden="true">#</a> 2. isNegativeZero（-0）</h3><p><strong>FROM</strong></p>`,8),N={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},I=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isNegativeZero</span> <span class="token operator">=</span> <span class="token parameter">val</span> <span class="token operator">=&gt;</span> val <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token number">1</span> <span class="token operator">/</span> val <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">isNegativeZero</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isNegativeZero</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="_3-ispoweroftwo-2的幂" tabindex="-1"><a class="header-anchor" href="#_3-ispoweroftwo-2的幂" aria-hidden="true">#</a> 3. isPowerOfTwo（2的幂）</h3><p><strong>FROM</strong></p>`,8),F={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},T=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPowerOfTwo</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span><span class="token operator">!</span>n <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">isPowerOfTwo</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h2 id="随机" tabindex="-1"><a class="header-anchor" href="#随机" aria-hidden="true">#</a> 随机</h2><h3 id="_1-randomhexcolorcode-颜色" tabindex="-1"><a class="header-anchor" href="#_1-randomhexcolorcode-颜色" aria-hidden="true">#</a> 1. randomHexColorCode（颜色）</h3><p><strong>FROM</strong></p>`,9),A={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},L=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">randomHexColorCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> n <span class="token operator">=</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0xfffff</span> <span class="token operator">*</span> <span class="token number">1000000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;#&#39;</span> <span class="token operator">+</span> n<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">randomHexColorCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;#e34155&quot;</span>
</code></pre></div><h3 id="_2-randomintarrayinrange-区间" tabindex="-1"><a class="header-anchor" href="#_2-randomintarrayinrange-区间" aria-hidden="true">#</a> 2. randomIntArrayInRange（区间）</h3><p><strong>FROM</strong></p>`,8),O={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},P=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">randomIntArrayInRange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> n <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max <span class="token operator">-</span> min <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">randomIntArrayInRange</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ 34, 14, 27, 17, 30, 27, 20, 26, 21, 14 ]</span>
</code></pre></div><h2 id="区间" tabindex="-1"><a class="header-anchor" href="#区间" aria-hidden="true">#</a> 区间</h2><h3 id="_1-clampnumber-更近" tabindex="-1"><a class="header-anchor" href="#_1-clampnumber-更近" aria-hidden="true">#</a> 1. clampNumber（更近）</h3><p><strong>FROM</strong></p>`,9),C={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},R=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">clampNumber</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">clampNumber</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token function">clampNumber</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>
</code></pre></div><h3 id="_2-geometricprogression-生成" tabindex="-1"><a class="header-anchor" href="#_2-geometricprogression-生成" aria-hidden="true">#</a> 2. geometricProgression（生成）</h3><p><strong>FROM</strong></p>`,8),S={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},D=t(`<p><strong>DETAIL：</strong></p><p>初看时有点懵。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">geometricProgression</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">end<span class="token punctuation">,</span> start <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> step <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>end <span class="token operator">/</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>step<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> start <span class="token operator">*</span> step <span class="token operator">**</span> i
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">geometricProgression</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 4, 8, 16, 32, 64, 128, 256]</span>
<span class="token function">geometricProgression</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3, 6, 12, 24, 48, 96, 192]</span>
<span class="token function">geometricProgression</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 4, 16, 64, 256]</span>
</code></pre></div><h3 id="_3-inrange-判断" tabindex="-1"><a class="header-anchor" href="#_3-inrange-判断" aria-hidden="true">#</a> 3. inRange（判断）</h3><p><strong>FROM</strong></p>`,8),U={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},X=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">inRange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">&amp;&amp;</span> start <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> <span class="token punctuation">[</span>end<span class="token punctuation">,</span> start<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>start<span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> end <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> n <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> n <span class="token operator">&lt;</span> start <span class="token operator">:</span> n <span class="token operator">&gt;=</span> start <span class="token operator">&amp;&amp;</span> n <span class="token operator">&lt;</span> end<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">inRange</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">inRange</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token function">inRange</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
<span class="token function">inRange</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre></div><h3 id="_4-mapnumrange-区间映射" tabindex="-1"><a class="header-anchor" href="#_4-mapnumrange-区间映射" aria-hidden="true">#</a> 4. mapNumRange（区间映射）</h3><p><strong>FROM</strong></p>`,8),q={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},z=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">mapNumRange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num<span class="token punctuation">,</span> inMin<span class="token punctuation">,</span> inMax<span class="token punctuation">,</span> outMin<span class="token punctuation">,</span> outMax</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token punctuation">(</span><span class="token punctuation">(</span>num <span class="token operator">-</span> inMin<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>outMax <span class="token operator">-</span> outMin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>inMax <span class="token operator">-</span> inMin<span class="token punctuation">)</span> <span class="token operator">+</span> outMin<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">mapNumRange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 50</span>
</code></pre></div><h3 id="_5-tosafeinteger-安全整数" tabindex="-1"><a class="header-anchor" href="#_5-tosafeinteger-安全整数" aria-hidden="true">#</a> 5. toSafeInteger（安全整数）</h3><p><strong>FROM</strong></p>`,8),B={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},V=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">toSafeInteger</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span>
  Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> Number<span class="token punctuation">.</span><span class="token constant">MAX_SAFE_INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Number<span class="token punctuation">.</span><span class="token constant">MIN_SAFE_INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">toSafeInteger</span><span class="token punctuation">(</span><span class="token string">&#39;3.2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token function">toSafeInteger</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 9007199254740991</span>
</code></pre></div><h2 id="向量" tabindex="-1"><a class="header-anchor" href="#向量" aria-hidden="true">#</a> 向量</h2><h3 id="_1-vectorangle-角度" tabindex="-1"><a class="header-anchor" href="#_1-vectorangle-角度" aria-hidden="true">#</a> 1. vectorAngle（角度）</h3><p><strong>FROM</strong></p>`,9),Y={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},J=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">vectorAngle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> mX <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> mY <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">acos</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> n<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> n <span class="token operator">*</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>mX <span class="token operator">*</span> mY<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">vectorAngle</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0.283794109208328</span>
</code></pre></div><h3 id="_2-vectordistance-距离" tabindex="-1"><a class="header-anchor" href="#_2-vectordistance-距离" aria-hidden="true">#</a> 2. vectorDistance（距离）</h3><p><strong>FROM</strong></p>`,8),Z={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},H=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">vectorDistance</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>val <span class="token operator">-</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">vectorDistance</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11.180339887498949</span>
</code></pre></div><h2 id="转换" tabindex="-1"><a class="header-anchor" href="#转换" aria-hidden="true">#</a> 转换</h2><h3 id="_1-celsiustofahrenheit-°c-°f" tabindex="-1"><a class="header-anchor" href="#_1-celsiustofahrenheit-°c-°f" aria-hidden="true">#</a> 1. celsiusToFahrenheit（°C =&gt; °F）</h3><p><strong>FROM</strong></p>`,9),$={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},G=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">celsiusToFahrenheit</span> <span class="token operator">=</span> <span class="token parameter">degrees</span> <span class="token operator">=&gt;</span> <span class="token number">1.8</span> <span class="token operator">*</span> degrees <span class="token operator">+</span> <span class="token number">32</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">celsiusToFahrenheit</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 91.4</span>
</code></pre></div><h3 id="_2-fahrenheittocelsius-°f-°c" tabindex="-1"><a class="header-anchor" href="#_2-fahrenheittocelsius-°f-°c" aria-hidden="true">#</a> 2. fahrenheitToCelsius（°F =&gt; °C）</h3><p><strong>FROM</strong></p>`,8),Q={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},K=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fahrenheitToCelsius</span> <span class="token operator">=</span> <span class="token parameter">degrees</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>degrees <span class="token operator">-</span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">9</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">fahrenheitToCelsius</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
</code></pre></div><h3 id="_3-degreestorads-角度-弧度" tabindex="-1"><a class="header-anchor" href="#_3-degreestorads-角度-弧度" aria-hidden="true">#</a> 3. degreesToRads（角度 =&gt; 弧度）</h3><p><strong>FROM</strong></p>`,8),W={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},nn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">degreesToRads</span> <span class="token operator">=</span> <span class="token parameter">deg</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>deg <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">180.0</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">degreesToRads</span><span class="token punctuation">(</span><span class="token number">90.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ~1.5708</span>
</code></pre></div><h3 id="_4-radstodegrees-弧度-角度" tabindex="-1"><a class="header-anchor" href="#_4-radstodegrees-弧度-角度" aria-hidden="true">#</a> 4. radsToDegrees（弧度 =&gt; 角度）</h3><p><strong>FROM</strong></p>`,8),sn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},an=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">radsToDegrees</span> <span class="token operator">=</span> <span class="token parameter">rad</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>rad <span class="token operator">*</span> <span class="token number">180.0</span><span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">radsToDegrees</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 90</span>
</code></pre></div><h3 id="_5-tocurrency-货币" tabindex="-1"><a class="header-anchor" href="#_5-tocurrency-货币" aria-hidden="true">#</a> 5. toCurrency（货币）</h3><p><strong>FROM</strong></p>`,8),pn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},tn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">toCurrency</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> curr<span class="token punctuation">,</span> LanguageFormat <span class="token operator">=</span> <span class="token keyword">undefined</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  Intl<span class="token punctuation">.</span><span class="token function">NumberFormat</span><span class="token punctuation">(</span>LanguageFormat<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">currency</span><span class="token operator">:</span> curr <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">toCurrency</span><span class="token punctuation">(</span><span class="token number">123456.789</span><span class="token punctuation">,</span> <span class="token string">&#39;EUR&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// €123,456.79  | currency: Euro | currencyLangFormat: Local</span>
<span class="token function">toCurrency</span><span class="token punctuation">(</span><span class="token number">123456.789</span><span class="token punctuation">,</span> <span class="token string">&#39;USD&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;en-us&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// $123,456.79  | currency: US Dollar | currencyLangFormat: English (United States)</span>
<span class="token function">toCurrency</span><span class="token punctuation">(</span><span class="token number">123456.789</span><span class="token punctuation">,</span> <span class="token string">&#39;USD&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fa&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ۱۲۳٬۴۵۶٫۷۹ ؜$ | currency: US Dollar | currencyLangFormat: Farsi</span>
<span class="token function">toCurrency</span><span class="token punctuation">(</span><span class="token number">322342436423.2435</span><span class="token punctuation">,</span> <span class="token string">&#39;JPY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ¥322,342,436,423 | currency: Japanese Yen | currencyLangFormat: Local</span>
<span class="token function">toCurrency</span><span class="token punctuation">(</span><span class="token number">322342436423.2435</span><span class="token punctuation">,</span> <span class="token string">&#39;JPY&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 322 342 436 423 ¥ | currency: Japanese Yen | currencyLangFormat: Finnish</span>
</code></pre></div><h3 id="_6-toordinalsuffix-序数" tabindex="-1"><a class="header-anchor" href="#_6-toordinalsuffix-序数" aria-hidden="true">#</a> 6. toOrdinalSuffix（序数）</h3><p><strong>FROM</strong></p>`,8),on={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},en=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">toOrdinalSuffix</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> int <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span>
    digits <span class="token operator">=</span> <span class="token punctuation">[</span>int <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">,</span> int <span class="token operator">%</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    ordinals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;st&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;rd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;th&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    oPattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    tPattern <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> oPattern<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>tPattern<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token operator">?</span> int <span class="token operator">+</span> ordinals<span class="token punctuation">[</span>digits<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>
    <span class="token operator">:</span> int <span class="token operator">+</span> ordinals<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">toOrdinalSuffix</span><span class="token punctuation">(</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;123rd&quot;</span>
</code></pre></div><h3 id="_7-digitize-string-number" tabindex="-1"><a class="header-anchor" href="#_7-digitize-string-number" aria-hidden="true">#</a> 7. digitize（string =&gt; number）</h3><p><strong>FROM</strong></p>`,8),cn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},un=t('<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">digitize</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>n<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=&gt;</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">digitize</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>\n</code></pre></div><h3 id="_8-sdbm" tabindex="-1"><a class="header-anchor" href="#_8-sdbm" aria-hidden="true">#</a> 8. sdbm</h3><p><strong>FROM</strong></p>',8),ln={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},rn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">sdbm</span> <span class="token operator">=</span> <span class="token parameter">str</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">hashCode<span class="token punctuation">,</span> currentVal</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token punctuation">(</span>hashCode <span class="token operator">=</span> currentVal<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>hashCode <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>hashCode <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">-</span> hashCode<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token number">0</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">sdbm</span><span class="token punctuation">(</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -3521204949</span>
</code></pre></div><h2 id="math" tabindex="-1"><a class="header-anchor" href="#math" aria-hidden="true">#</a> Math</h2><h3 id="_1-binomialcoefficient-二项式系数" tabindex="-1"><a class="header-anchor" href="#_1-binomialcoefficient-二项式系数" aria-hidden="true">#</a> 1. binomialCoefficient（二项式系数）</h3><p><strong>FROM</strong></p>`,9),kn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},dn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">binomialCoefficient</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">||</span> Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">NaN</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> k <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">||</span> k <span class="token operator">===</span> n<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">||</span> k <span class="token operator">===</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> n<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> k <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> k <span class="token operator">=</span> n <span class="token operator">-</span> k<span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> n<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> k<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> res <span class="token operator">*=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> j<span class="token punctuation">;</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">binomialCoefficient</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 28</span>
</code></pre></div><h3 id="_2-elo" tabindex="-1"><a class="header-anchor" href="#_2-elo" aria-hidden="true">#</a> 2. elo</h3><p><strong>FROM</strong></p>`,8),gn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},mn=n("p",null,[n("strong",null,"DETAIL：")],-1),hn={href:"https://en.wikipedia.org/wiki/Elo_rating_system",target:"_blank",rel:"noopener noreferrer"},fn=t(`<p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">elo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token operator">...</span>ratings<span class="token punctuation">]</span><span class="token punctuation">,</span> kFactor <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">,</span> selfRating</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> ratings<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">expectedScore</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">self<span class="token punctuation">,</span> opponent</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">**</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>opponent <span class="token operator">-</span> self<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">400</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">newRating</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">rating<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token punctuation">(</span>selfRating <span class="token operator">||</span> rating<span class="token punctuation">)</span> <span class="token operator">+</span> kFactor <span class="token operator">*</span> <span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token function">expectedScore</span><span class="token punctuation">(</span>i <span class="token operator">?</span> a <span class="token operator">:</span> b<span class="token punctuation">,</span> i <span class="token operator">?</span> b <span class="token operator">:</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>ratings<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token function">newRating</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">newRating</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> ratings<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      j<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">[</span>ratings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> ratings<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">elo</span><span class="token punctuation">(</span><span class="token punctuation">[</span>ratings<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> ratings<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> kFactor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ratings<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Standard 1v1s</span>
<span class="token function">elo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1216, 1184]</span>
<span class="token function">elo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1232, 1168]</span>
<span class="token comment">// 4 player FFA, all same rank</span>
<span class="token function">elo</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">,</span> <span class="token number">1200</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>round<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1246, 1215, 1185, 1154]</span>
<span class="token comment">/*
For teams, each rating can adjusted based on own team&#39;s average rating vs.
average rating of opposing team, with the score being added to their
own individual rating by supplying it as the third argument.
*/</span>
</code></pre></div><h3 id="_3-fibonacci-斐波那契数列" tabindex="-1"><a class="header-anchor" href="#_3-fibonacci-斐波那契数列" aria-hidden="true">#</a> 3. fibonacci（斐波那契数列）</h3><p><strong>FROM</strong></p>`,6),bn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},vn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">fibonacci</span> <span class="token operator">=</span> <span class="token parameter">n</span> <span class="token operator">=&gt;</span>
  Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> n <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">?</span> acc<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> acc<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">:</span> i<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">fibonacci</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 1, 2, 3, 5]</span>
</code></pre></div><h3 id="_4-gcd-最大公约数" tabindex="-1"><a class="header-anchor" href="#_4-gcd-最大公约数" aria-hidden="true">#</a> 4. gcd（最大公约数）</h3><p><strong>FROM</strong></p>`,8),_n={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},wn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">gcd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">_gcd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token operator">!</span>y <span class="token operator">?</span> x <span class="token operator">:</span> <span class="token function">gcd</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> x <span class="token operator">%</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">_gcd</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">gcd</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
<span class="token function">gcd</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
</code></pre></div><h3 id="_5-lcm-最小公倍数" tabindex="-1"><a class="header-anchor" href="#_5-lcm-最小公倍数" aria-hidden="true">#</a> 5. lcm（最小公倍数）</h3><p><strong>FROM</strong></p>`,8),jn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},yn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">lcm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">gcd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token operator">!</span>y <span class="token operator">?</span> x <span class="token operator">:</span> <span class="token function">gcd</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> x <span class="token operator">%</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">_lcm</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>x <span class="token operator">*</span> y<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">gcd</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">_lcm</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">lcm</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 84</span>
<span class="token function">lcm</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 60</span>
</code></pre></div><h3 id="_6-hammingdistance-汉明距离" tabindex="-1"><a class="header-anchor" href="#_6-hammingdistance-汉明距离" aria-hidden="true">#</a> 6. hammingDistance（汉明距离）</h3><p><strong>FROM</strong></p>`,8),xn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},Mn=t(`<p><strong>DETAIL：</strong></p><p><code>^</code> 按位异或操作。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">hammingDistance</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">num1<span class="token punctuation">,</span> num2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>num1 <span class="token operator">^</span> num2<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">1</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">hammingDistance</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
</code></pre></div><h3 id="_7-isprime-质数" tabindex="-1"><a class="header-anchor" href="#_7-isprime-质数" aria-hidden="true">#</a> 7. isPrime（质数）</h3><p><strong>FROM</strong></p>`,8),En={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},Nn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPrime</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> boundary <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> boundary<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> i <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> num <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">isPrime</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre></div><h3 id="_8-primes-质数" tabindex="-1"><a class="header-anchor" href="#_8-primes-质数" aria-hidden="true">#</a> 8. primes（质数）</h3><p><strong>FROM</strong></p>`,8),In={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},Fn=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">primes</span> <span class="token operator">=</span> <span class="token parameter">num</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> num <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    sqroot <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    numsTillSqroot <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> sqroot <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  numsTillSqroot<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>arr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">y</span> <span class="token operator">=&gt;</span> y <span class="token operator">%</span> x <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">||</span> y <span class="token operator">===</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">primes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3,5,7]</span>
</code></pre></div><h3 id="_9-median-中位数" tabindex="-1"><a class="header-anchor" href="#_9-median-中位数" aria-hidden="true">#</a> 9. median（中位数）</h3><p><strong>FROM</strong></p>`,8),Tn={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},An=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">median</span> <span class="token operator">=</span> <span class="token parameter">arr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mid <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">-</span> b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!==</span> <span class="token number">0</span> <span class="token operator">?</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">median</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre></div><h3 id="_10-standarddeviation-标准差" tabindex="-1"><a class="header-anchor" href="#_10-standarddeviation-标准差" aria-hidden="true">#</a> 10. standardDeviation（标准差）</h3><p><strong>FROM</strong></p>`,8),Ln={href:"https://www.30secondsofcode.org/tag/math",target:"_blank",rel:"noopener noreferrer"},On=t(`<p><strong>DETAIL：</strong></p><p>暂无。</p><p><strong>FUNCTION：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">standardDeviation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> usePopulation <span class="token operator">=</span> <span class="token boolean">false</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> mean <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span>
    arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">(</span>val <span class="token operator">-</span> mean<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">acc<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> acc <span class="token operator">+</span> val<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">/</span>
      <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token punctuation">(</span>usePopulation <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>EXAMPLES：</strong></p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token function">standardDeviation</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 13.284434142114991 (sample)</span>
<span class="token function">standardDeviation</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 12.29899614287479 (population)</span>
</code></pre></div><h2 id="最值" tabindex="-1"><a class="header-anchor" href="#最值" aria-hidden="true">#</a> 最值</h2><h3 id="_1-数组最大-最小值" tabindex="-1"><a class="header-anchor" href="#_1-数组最大-最小值" aria-hidden="true">#</a> 1. 数组最大/最小值</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">]</span>

arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 99</span>
arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span>next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>prev<span class="token punctuation">,</span> next<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 1</span>

Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 99</span>
Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token comment">// 1</span>

<span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>max<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span> <span class="token comment">// 99</span>
<span class="token function">Reflect</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>min<span class="token punctuation">,</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre></div>`,9);function Pn(Cn,Rn){const a=e("ExternalLinkIcon");return c(),u("div",null,[r,n("p",null,[n("a",k,[s("30 seconds of code (Math)"),p(a)])]),i,n("p",null,[n("a",d,[s("30 seconds of code (Math)"),p(a)])]),g,n("p",null,[n("a",m,[s("30 seconds of code (Math)"),p(a)])]),h,n("p",null,[n("a",f,[s("30 seconds of code (Math)"),p(a)])]),b,n("p",null,[n("a",v,[s("30 seconds of code (Math)"),p(a)])]),_,n("p",null,[n("a",w,[s("30 seconds of code (Math)"),p(a)])]),j,n("p",null,[n("a",y,[s("30 seconds of code (Math)"),p(a)])]),x,n("p",null,[n("a",M,[s("30 seconds of code (Math)"),p(a)])]),E,n("p",null,[n("a",N,[s("30 seconds of code (Math)"),p(a)])]),I,n("p",null,[n("a",F,[s("30 seconds of code (Math)"),p(a)])]),T,n("p",null,[n("a",A,[s("30 seconds of code (Math)"),p(a)])]),L,n("p",null,[n("a",O,[s("30 seconds of code (Math)"),p(a)])]),P,n("p",null,[n("a",C,[s("30 seconds of code (Math)"),p(a)])]),R,n("p",null,[n("a",S,[s("30 seconds of code (Math)"),p(a)])]),D,n("p",null,[n("a",U,[s("30 seconds of code (Math)"),p(a)])]),X,n("p",null,[n("a",q,[s("30 seconds of code (Math)"),p(a)])]),z,n("p",null,[n("a",B,[s("30 seconds of code (Math)"),p(a)])]),V,n("p",null,[n("a",Y,[s("30 seconds of code (Math)"),p(a)])]),J,n("p",null,[n("a",Z,[s("30 seconds of code (Math)"),p(a)])]),H,n("p",null,[n("a",$,[s("30 seconds of code (Math)"),p(a)])]),G,n("p",null,[n("a",Q,[s("30 seconds of code (Math)"),p(a)])]),K,n("p",null,[n("a",W,[s("30 seconds of code (Math)"),p(a)])]),nn,n("p",null,[n("a",sn,[s("30 seconds of code (Math)"),p(a)])]),an,n("p",null,[n("a",pn,[s("30 seconds of code (Math)"),p(a)])]),tn,n("p",null,[n("a",on,[s("30 seconds of code (Math)"),p(a)])]),en,n("p",null,[n("a",cn,[s("30 seconds of code (Math)"),p(a)])]),un,n("p",null,[n("a",ln,[s("30 seconds of code (Math)"),p(a)])]),rn,n("p",null,[n("a",kn,[s("30 seconds of code (Math)"),p(a)])]),dn,n("p",null,[n("a",gn,[s("30 seconds of code (Math)"),p(a)])]),mn,n("p",null,[n("a",hn,[s("等级分"),p(a)]),s(" 的实现。")]),fn,n("p",null,[n("a",bn,[s("30 seconds of code (Math)"),p(a)])]),vn,n("p",null,[n("a",_n,[s("30 seconds of code (Math)"),p(a)])]),wn,n("p",null,[n("a",jn,[s("30 seconds of code (Math)"),p(a)])]),yn,n("p",null,[n("a",xn,[s("30 seconds of code (Math)"),p(a)])]),Mn,n("p",null,[n("a",En,[s("30 seconds of code (Math)"),p(a)])]),Nn,n("p",null,[n("a",In,[s("30 seconds of code (Math)"),p(a)])]),Fn,n("p",null,[n("a",Tn,[s("30 seconds of code (Math)"),p(a)])]),An,n("p",null,[n("a",Ln,[s("30 seconds of code (Math)"),p(a)])]),On])}const Dn=o(l,[["render",Pn],["__file","code-math.html.vue"]]);export{Dn as default};
