import{_ as n,c as s,a as e,o as p}from"./app-CQrWi6O2.js";const t={};function c(l,a){return p(),s("div",null,[...a[0]||(a[0]=[e(`<h1 id="简单聊聊-npm-和-yarn-的命令" tabindex="-1"><a class="header-anchor" href="#简单聊聊-npm-和-yarn-的命令"><span>简单聊聊 NPM 和 YARN 的命令</span></a></h1><h2 id="熟悉而又陌生的-npx" tabindex="-1"><a class="header-anchor" href="#熟悉而又陌生的-npx"><span>熟悉而又陌生的 npx</span></a></h2><p><code>npx</code> 是 <code>npm v5.2.0</code> 版本引入的工具，其可以快速体验想要尝试的包而不必执行 <code>npm init</code>、<code>npm install</code>、<code>配置 scripts</code> 等步骤。</p><p>默认情况下，它会去检查包是否存在（<code>node_modules/.bin</code> 及环境变量 <code>$PATH</code>），如果存在则执行，不存在则临时安装再运行。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 查看指令的帮助信息</span></span>
<span class="line">npx <span class="token parameter variable">-h</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-常见的作用" tabindex="-1"><a class="header-anchor" href="#_1-常见的作用"><span>1. 常见的作用</span></a></h3><ol><li>避免与全局包冲突，可以测试新的版本</li><li>可直接测试 github 上的模块</li></ol><h3 id="_2-配合参数" tabindex="-1"><a class="header-anchor" href="#_2-配合参数"><span>2. 配合参数</span></a></h3><ol><li><code>--no-install</code>：强制使用本地模块，不存在则报错</li><li><code>--ignore-existing</code>：强制使用远程模块</li></ol><h2 id="认识一下-yarn" tabindex="-1"><a class="header-anchor" href="#认识一下-yarn"><span>认识一下 yarn</span></a></h2><blockquote><p>现在一些包默认都使用 <code>yarn</code> 了。</p></blockquote><h3 id="_1-强制使用-yarn" tabindex="-1"><a class="header-anchor" href="#_1-强制使用-yarn"><span>1. 强制使用 yarn</span></a></h3><p>该脚本来自于 <a href="https://github.com/vuejs/vue-next/blob/master/scripts/checkYarn.js" target="_blank" rel="noopener noreferrer">Vue</a>：</p><div class="language-javascript" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">yarn\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>npm_execpath <span class="token operator">||</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">warn</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token string">&#39;\\u001b[33mThis repository requires Yarn 1.x for scripts to work properly.\\u001b[39m\\n&#39;</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line">  process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>配合上 <code>package.json</code> 的 <code>preinstall</code> 生命周期：</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;preinstall&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node ./scripts/checkYarn.js&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>这样就大功告成了。</p><h3 id="_2-关于-link-的限制" tabindex="-1"><a class="header-anchor" href="#_2-关于-link-的限制"><span>2. 关于 link 的限制</span></a></h3><p><code>yarn link</code> 并不像 <code>npm link</code> 一样可以全局使用，需要安装到指定文件夹下才可使用，当然也是有一定的方法的：</p><div class="language-json" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;link:add&quot;</span><span class="token operator">:</span> <span class="token string">&quot;yarn global add file:$(pwd)&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><p>执行 <code>yarn link:add</code> 即可。</p><h2 id="npm-的传参" tabindex="-1"><a class="header-anchor" href="#npm-的传参"><span>npm 的传参</span></a></h2><p>常见的命令行传参是这样：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># POSIX 风格</span></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-h</span></span>
<span class="line"><span class="token comment"># GNU 风格</span></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">--help</span></span>
<span class="line"><span class="token comment"># 或许你还见过 Java 风格的，那简直是异教徒！</span></span>
<span class="line"></span></code></pre></div><p>很明显这个参数都是传递给 <code>npm</code> 的，而在使用 <code>npm run</code> 时我们实际希望使用的时 <code>package.json</code> 中 <code>scripts</code> 的命令，为了让参数传递到下层，那么自然需要一些<a href="https://docs.npmjs.com/cli/v6/commands/npm-run-script#description" target="_blank" rel="noopener noreferrer">手段</a>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> run <span class="token builtin class-name">test</span> -- <span class="token parameter variable">--grep</span><span class="token operator">=</span><span class="token string">&quot;pattern&quot;</span></span>
<span class="line"></span></code></pre></div><p>在正常的传参前增加 <code>--</code> 即可达成。</p><h2 id="从模板到-create-命令" tabindex="-1"><a class="header-anchor" href="#从模板到-create-命令"><span>从模板到 create 命令</span></a></h2><p>常常会根据模板创建项目：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># yarn</span></span>
<span class="line"><span class="token function">yarn</span> create example-app <span class="token operator">&lt;</span>project-name<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># npm</span></span>
<span class="line"><span class="token function">npm</span> create example-app <span class="token operator">&lt;</span>project-name<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># npx</span></span>
<span class="line">npx create-example-app <span class="token operator">&lt;</span>project-name<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre></div><h3 id="_1-查看帮助" tabindex="-1"><a class="header-anchor" href="#_1-查看帮助"><span>1. 查看帮助</span></a></h3><p>简单看下 <code>create</code> 命令该怎么用。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 查看帮助</span></span>
<span class="line"><span class="token function">npm</span> create <span class="token parameter variable">-h</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 输出</span></span>
<span class="line"><span class="token function">npm</span> init <span class="token punctuation">[</span>--force<span class="token operator">|</span>-f<span class="token operator">|</span>--yes<span class="token operator">|</span>-y<span class="token operator">|</span>--scope<span class="token punctuation">]</span></span>
<span class="line"><span class="token function">npm</span> init <span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span> <span class="token punctuation">(</span>same as <span class="token variable"><span class="token variable">\`</span>npx <span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/create<span class="token variable">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">npm</span> init <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span><span class="token operator">&lt;</span>name<span class="token operator">&gt;</span> <span class="token punctuation">(</span>same as <span class="token variable"><span class="token variable">\`</span>npx <span class="token punctuation">[</span><span class="token operator">&lt;</span>@scope<span class="token operator">&gt;</span>/<span class="token punctuation">]</span>create-<span class="token operator">&lt;</span>name<span class="token operator">&gt;</span><span class="token variable">\`</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">aliases: create, innit</span>
<span class="line"></span></code></pre></div><p>可以发现是 <code>init</code> 的别名，过去常用 <code>npm init -y</code> 来生成 <code>package.json</code>，这是因为匹配到了第一项；而在后面添加 <code>name</code> 时，则匹配到了其他项。</p><h3 id="_2-一个小测试" tabindex="-1"><a class="header-anchor" href="#_2-一个小测试"><span>2. 一个小测试</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> create some-example-app</span>
<span class="line"></span>
<span class="line"><span class="token comment"># npm ERR! 404  &#39;create-some-example-app@latest&#39; is not in the npm registry.</span></span>
<span class="line"></span></code></pre></div><p>提示是 <code>create-some-example-app@latest</code>，再回顾下前面的查看帮助，可以发现是在前面增加了 <code>create</code> 字段。</p><p>那我们常用的 <code>yarn create @vitejs/app</code> 呢？前往 <code>npm</code> 可以看到有一个 <a href="https://www.npmjs.com/package/@vitejs/create-app" target="_blank" rel="noopener noreferrer">@vitejs/create-app</a>，符合查看帮助的最后一项。</p><h2 id="版本" tabindex="-1"><a class="header-anchor" href="#版本"><span>版本</span></a></h2><p>一个标准的版本号：<code>MAJOR.MINOR.PATCH</code>，版本规范参考 <a href="https://semver.org/" target="_blank" rel="noopener noreferrer">semver</a>。</p><p>除此外还有先行版本，格式为 <code>MAJOR.MINOR.PATCH-FLAG.N</code>，<code>FLAG</code> 常见的有 <code>alpha(内测)</code>、<code>beta</code>，在 Vue 中又认识了 <code>rc</code>。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> version prerelease <span class="token parameter variable">--preid</span><span class="token operator">=</span>alpha</span>
<span class="line"></span></code></pre></div><h3 id="_1-打-tag" tabindex="-1"><a class="header-anchor" href="#_1-打-tag"><span>1. 打 tag</span></a></h3><p>即使你的版本是 <code>-alpha.0</code> 的先行版本，你在发布时直接指定为 <code>npm publish</code>，默认也是 <code>latest</code> 的标签，这会作为最新版被用户下载。</p><p>如果发错了标签不用担心，可以使用 <a href="https://docs.npmjs.com/cli/v7/commands/npm-dist-tag" target="_blank" rel="noopener noreferrer">npm dist-tag</a> 进行修复：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> dist-tag <span class="token function">add</span> some-package@1.1.0-beta.0 beta</span>
<span class="line"><span class="token function">npm</span> dist-tag <span class="token function">add</span> some-package@1.0.0 latest</span>
<span class="line"></span></code></pre></div><h3 id="_2-配合-git" tabindex="-1"><a class="header-anchor" href="#_2-配合-git"><span>2. 配合 git</span></a></h3><p>一般我们还会根据 version 变更打标签推送到 <code>git</code>：</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># major、minor、patch</span></span>
<span class="line"><span class="token comment"># premajor、preminor、prepatch、prerelease --preid=&lt;alpha|beta|rc&gt;</span></span>
<span class="line"><span class="token function">npm</span> version patch <span class="token parameter variable">-m</span> <span class="token string">&quot;chore: 发布 tag %s&quot;</span></span>
<span class="line"></span></code></pre></div>`,49)])])}const i=n(t,[["render",c]]),r=JSON.parse('{"path":"/backend/nodejs/npm-and-yarn-commands.html","title":"简单聊聊 NPM 和 YARN 的命令","lang":"zh-CN","frontmatter":{"description":"简单聊聊 NPM 和 YARN 的命令","tags":["npm","yarn","npx"],"sidebarDepth":2},"headers":[{"level":2,"title":"熟悉而又陌生的 npx","slug":"熟悉而又陌生的-npx","link":"#熟悉而又陌生的-npx","children":[{"level":3,"title":"1. 常见的作用","slug":"_1-常见的作用","link":"#_1-常见的作用","children":[]},{"level":3,"title":"2. 配合参数","slug":"_2-配合参数","link":"#_2-配合参数","children":[]}]},{"level":2,"title":"认识一下 yarn","slug":"认识一下-yarn","link":"#认识一下-yarn","children":[{"level":3,"title":"1. 强制使用 yarn","slug":"_1-强制使用-yarn","link":"#_1-强制使用-yarn","children":[]},{"level":3,"title":"2. 关于 link 的限制","slug":"_2-关于-link-的限制","link":"#_2-关于-link-的限制","children":[]}]},{"level":2,"title":"npm 的传参","slug":"npm-的传参","link":"#npm-的传参","children":[]},{"level":2,"title":"从模板到 create 命令","slug":"从模板到-create-命令","link":"#从模板到-create-命令","children":[{"level":3,"title":"1. 查看帮助","slug":"_1-查看帮助","link":"#_1-查看帮助","children":[]},{"level":3,"title":"2. 一个小测试","slug":"_2-一个小测试","link":"#_2-一个小测试","children":[]}]},{"level":2,"title":"版本","slug":"版本","link":"#版本","children":[{"level":3,"title":"1. 打 tag","slug":"_1-打-tag","link":"#_1-打-tag","children":[]},{"level":3,"title":"2. 配合 git","slug":"_2-配合-git","link":"#_2-配合-git","children":[]}]}],"git":{"updatedTime":1661090040000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":3,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"backend/nodejs/npm-and-yarn-commands.md"}');export{i as comp,r as data};
