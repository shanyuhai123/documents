import{_ as p,c,a as e,b as o,d as s,e as t,f as l,r as i,o as r}from"./app-DNXRdI82.js";const d={};function h(m,n){const a=i("RouteLink");return r(),c("div",null,[n[5]||(n[5]=e(`<h1 id="快速开启-nginx" tabindex="-1"><a class="header-anchor" href="#快速开启-nginx"><span>快速开启 Nginx</span></a></h1><h2 id="一些重要的事" tabindex="-1"><a class="header-anchor" href="#一些重要的事"><span>一些重要的事</span></a></h2><h3 id="防止泄漏" tabindex="-1"><a class="header-anchor" href="#防止泄漏"><span>防止泄漏</span></a></h3><p>记得设置 <code>default_server</code>，否则在删除对应的 <code>conf</code> 后可能导致不该出现的 <code>server</code> 暴露出来。</p><div class="language-nginx" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">listen</span>    <span class="token number">80</span> default_server</span><span class="token punctuation">;</span> <span class="token comment"># 在 listen 后追加，而非 server_name</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">server_name</span>  xxx.example.com example.com</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h3 id="禁止-ip-访问" tabindex="-1"><a class="header-anchor" href="#禁止-ip-访问"><span>禁止 IP 访问</span></a></h3><div class="language-nginx" data-highlighter="prismjs" data-ext="nginx" data-title="nginx"><pre><code><span class="line"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">listen</span>   <span class="token number">80</span> default_server</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">listen</span>   [::]:80 default_server</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">server_name</span>  _</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token directive"><span class="token keyword">return</span> <span class="token number">444</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre></div><h2 id="安装-nginx" tabindex="-1"><a class="header-anchor" href="#安装-nginx"><span>安装 Nginx</span></a></h2><p>虽然现在大部分时候都上 docker 了，但偶尔自己编译模块时手动安装还是比较方便的。</p><h3 id="_1-检测源" tabindex="-1"><a class="header-anchor" href="#_1-检测源"><span>1. 检测源</span></a></h3><p>首先需要检查当前源是否有 Nginx（CentOS示例），当没有的时候需要自己添加源。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">yum list <span class="token operator">|</span> <span class="token function">grep</span> nginx</span>
<span class="line"><span class="token comment"># nginx.x86_64                             1:1.12.2-2.el7                  epel   </span></span>
<span class="line"><span class="token comment"># nginx-all-modules.noarch                 1:1.12.2-2.el7                  epel   </span></span>
<span class="line"><span class="token comment"># nginx-filesystem.noarch                  1:1.12.2-2.el7    </span></span>
<span class="line"></span></code></pre></div><h3 id="_2-更新-yum-源并安装" tabindex="-1"><a class="header-anchor" href="#_2-更新-yum-源并安装"><span>2. 更新 yum 源并安装</span></a></h3><p><a href="http://nginx.org/en/download.html" target="_blank" rel="noopener noreferrer">官网</a> 中 Nginx 稳定版本已经是 <code>1.20.1</code> ，而检测结果依然是 <code>1.12.2</code>，<a href="http://nginx.org/en/linux_packages.html" target="_blank" rel="noopener noreferrer">修改</a> yum 源来获取最新版。</p>`,14)),o("p",null,[n[2]||(n[2]=s("更新 Nginx 的源在 ")),t(a,{to:"/os/centos/install-the-latest-version-of-nginx.html"},{default:l(()=>n[0]||(n[0]=[s("CentOS")])),_:1}),n[3]||(n[3]=s("、")),t(a,{to:"/os/ubuntu/install-the-latest-version-of-nginx.html"},{default:l(()=>n[1]||(n[1]=[s("Ubuntu")])),_:1}),n[4]||(n[4]=s(" 中稍有不同，需要区别安装。"))]),n[6]||(n[6]=e(`<h3 id="_3-编译安装" tabindex="-1"><a class="header-anchor" href="#_3-编译安装"><span>3. 编译安装</span></a></h3><p>当需要添加一些第三方模块时就可以使用该形式，以下为 <code>CentOS 7.6</code>。</p><h4 id="下载" tabindex="-1"><a class="header-anchor" href="#下载"><span>下载</span></a></h4><p>进入<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener noreferrer">官网</a>获取对应的版本下载链接。</p><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">wget</span> http://nginx.org/download/nginx-1.20.1.tar.gz</span>
<span class="line"></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> nginx-1.20.1.tar.gz <span class="token comment"># 解压</span></span>
<span class="line">ll nginx-1.20.1 <span class="token comment"># 验证</span></span>
<span class="line"><span class="token function">cp</span> <span class="token parameter variable">-r</span> nginx-1.20.1/contrib/vim/* ~/.vim <span class="token comment"># 拷贝 vim 配置</span></span>
<span class="line"><span class="token function">vim</span> nginx-1.20.1/conf/nginx.conf <span class="token comment"># 验证</span></span>
<span class="line"></span></code></pre></div><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h4><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./configure <span class="token parameter variable">--help</span> <span class="token operator">|</span> <span class="token function">less</span> <span class="token comment"># 查看帮助</span></span>
<span class="line">./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/home/shanyuhai/nginx <span class="token comment"># 指定目录</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 可能会缺乏依赖（解决方案）</span></span>
<span class="line">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> httpd-devel pcre perl pcre-devel zlib zlib-devel GeoIP GeoIP-devel <span class="token comment"># 重新执行，当然也可以先使用 yum 安装自动获取一遍依赖（暂不清楚是否会导致负面影响）</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 结果如下</span></span>
<span class="line"><span class="token comment"># creating objs/Makefile # 新增目录</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># nginx path prefix: &quot;/home/shanyuhai/nginx&quot;</span></span>
<span class="line"><span class="token comment"># nginx binary file: &quot;/home/shanyuhai/nginx/sbin/nginx&quot;</span></span>
<span class="line"><span class="token comment"># nginx modules path: &quot;/home/shanyuhai/nginx/modules&quot;</span></span>
<span class="line"><span class="token comment"># nginx configuration prefix: &quot;/home/shanyuhai/nginx/conf&quot;</span></span>
<span class="line"><span class="token comment"># nginx configuration file: &quot;/home/shanyuhai/nginx/conf/nginx.conf&quot;</span></span>
<span class="line"><span class="token comment"># nginx pid file: &quot;/home/shanyuhai/nginx/logs/nginx.pid&quot;</span></span>
<span class="line"><span class="token comment"># nginx error log file: &quot;/home/shanyuhai/nginx/logs/error.log&quot;</span></span>
<span class="line"><span class="token comment"># nginx http access log file: &quot;/home/shanyuhai/nginx/logs/access.log&quot;</span></span>
<span class="line"><span class="token comment"># nginx http client request body temporary files: &quot;client_body_temp&quot;</span></span>
<span class="line"><span class="token comment"># nginx http proxy temporary files: &quot;proxy_temp&quot;</span></span>
<span class="line"><span class="token comment"># nginx http fastcgi temporary files: &quot;fastcgi_temp&quot;</span></span>
<span class="line"><span class="token comment"># nginx http uwsgi temporary files: &quot;uwsgi_temp&quot;</span></span>
<span class="line"><span class="token comment"># nginx http scgi temporary files: &quot;scgi_temp&quot;</span></span>
<span class="line"></span>
<span class="line">ll objs <span class="token comment"># 查看稍后 make 的内容</span></span>
<span class="line"><span class="token function">make</span> <span class="token comment"># 编译</span></span>
<span class="line">ll objs <span class="token comment"># 验证</span></span>
<span class="line"><span class="token function">make</span> <span class="token function">install</span> <span class="token comment"># 安装</span></span>
<span class="line"></span>
<span class="line">/home/shanyuhai/nginx/sbin/nginx <span class="token parameter variable">-V</span> <span class="token comment"># 验证</span></span>
<span class="line"></span></code></pre></div><h2 id="必须知道的基本操作" tabindex="-1"><a class="header-anchor" href="#必须知道的基本操作"><span>必须知道的基本操作</span></a></h2><h3 id="启用安全组" tabindex="-1"><a class="header-anchor" href="#启用安全组"><span>启用安全组</span></a></h3><p>在一顿操作之后，明明本地可以访问，为啥外网访问不了？可能是你忘记开放云服务器的安全组了。</p><p>操作流程：</p><p><code>登录</code> &gt; <code>控制台</code> &gt; <code>云服务器ECS（左侧）</code> &gt; <code>安全组</code> &gt; <code>配置规则</code> &gt; <code>添加安全组规则</code> &gt; <code>填充内容</code> &gt; <code>确定</code></p><h3 id="进程与端口" tabindex="-1"><a class="header-anchor" href="#进程与端口"><span>进程与端口</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 进程</span></span>
<span class="line"><span class="token comment"># ps 是 Process Status 的简写，可以通过 ps 来查看对应的进程</span></span>
<span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> nginx</span>
<span class="line"><span class="token comment"># 端口</span></span>
<span class="line"><span class="token comment"># netstat 是 net status 的简写， 可以查看有哪些端口正在被占用</span></span>
<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-lntup</span></span>
<span class="line"></span></code></pre></div><h3 id="启动" tabindex="-1"><a class="header-anchor" href="#启动"><span>启动</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 直接启动</span></span>
<span class="line">nginx</span>
<span class="line"><span class="token comment"># systemctl 启动</span></span>
<span class="line">systemctl start nginx.service</span>
<span class="line"><span class="token comment"># 开机自启</span></span>
<span class="line">systemctl <span class="token builtin class-name">enable</span> nginx.service</span>
<span class="line"></span></code></pre></div><h3 id="停止" tabindex="-1"><a class="header-anchor" href="#停止"><span>停止</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># normal quit</span></span>
<span class="line">nginx <span class="token parameter variable">-s</span> quit</span>
<span class="line"><span class="token comment"># force stop</span></span>
<span class="line">nginx <span class="token parameter variable">-s</span> stop</span>
<span class="line"><span class="token comment"># systemctl</span></span>
<span class="line">systemctl stop nginx.service</span>
<span class="line"></span>
<span class="line"><span class="token comment"># kill pid</span></span>
<span class="line"><span class="token function">killall</span> nginx</span>
<span class="line"><span class="token comment">## 或</span></span>
<span class="line"><span class="token function">kill</span> <span class="token parameter variable">-9</span> pid</span>
<span class="line"></span></code></pre></div><h3 id="重启" tabindex="-1"><a class="header-anchor" href="#重启"><span>重启</span></a></h3><div class="language-bash" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># normal</span></span>
<span class="line">nginx <span class="token parameter variable">-s</span> reload</span>
<span class="line"><span class="token comment"># systemctl</span></span>
<span class="line">systemctl restart nginx.service</span>
<span class="line"></span></code></pre></div><h2 id="内置变量" tabindex="-1"><a class="header-anchor" href="#内置变量"><span>内置变量</span></a></h2><p>Nginx 提供了丰富的<a href="https://nginx.org/en/docs/varindex.html" target="_blank" rel="noopener noreferrer">内置变量</a>，如果引入了其他模块还会有对应模块的变量。</p><table><thead><tr><th style="text-align:center;">variable</th><th style="text-align:center;">module</th><th>description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>$args</code></td><td style="text-align:center;"></td><td>请求参数</td></tr><tr><td style="text-align:center;"><code>$uri</code></td><td style="text-align:center;"></td><td>当前请求的 <code>uri</code>，不带参数</td></tr><tr><td style="text-align:center;"><code>$request_uri</code></td><td style="text-align:center;"></td><td>请求的 <code>uri</code>，带完整参数</td></tr><tr><td style="text-align:center;"><code>$host</code></td><td style="text-align:center;"></td><td>请求报文的 <code>host</code> 首部</td></tr><tr><td style="text-align:center;"><code>$hostname</code></td><td style="text-align:center;"><code>ngx_http_core_module</code></td><td>Nginx 服务运行在主机的主机名</td></tr><tr><td style="text-align:center;"><code>$remote_addr</code></td><td style="text-align:center;"><code>ngx_stream_core_module</code></td><td>客户端 IP</td></tr><tr><td style="text-align:center;"><code>$remote_port</code></td><td style="text-align:center;"><code>ngx_stream_core_module</code></td><td>客户端端口</td></tr><tr><td style="text-align:center;"><code>$request_filename</code></td><td style="text-align:center;"></td><td>用户请求中的 <code>uri</code> 经过本地 <code>root</code> 或 <code>alias</code> 映射后的本地文件路径。可将其加入 <code>log</code> 中研究 <code>root</code> 和 <code>alias</code></td></tr><tr><td style="text-align:center;"><code>$server_addr</code></td><td style="text-align:center;"><code>ngx_stream_core_module</code></td><td>服务器 IP</td></tr><tr><td style="text-align:center;"><code>$server_port</code></td><td style="text-align:center;"><code>ngx_stream_core_module</code></td><td>服务求端口</td></tr><tr><td style="text-align:center;"><code>$server_protocol</code></td><td style="text-align:center;"></td><td>服务器的 HTTP 协议版本，例 <code>HTTP/1.0</code>、<code>HTTP/1.1</code></td></tr><tr><td style="text-align:center;"><code>$scheme</code></td><td style="text-align:center;"></td><td>请求中的协议，例 <code>http</code>、<code>https</code></td></tr></tbody></table><p>指定 <code>module</code> 时基本上都有 <code>ngx_http_core_module</code>。</p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2><ol><li><a href="http://nginx.org/en/docs/" target="_blank" rel="noopener noreferrer">Nginx</a></li><li>《精通Nginx》：Dimitri Aivaliotis 著</li></ol>`,26))])}const u=p(d,[["render",h],["__file","index.html.vue"]]),x=JSON.parse('{"path":"/backend/nginx/","title":"快速开启 Nginx","lang":"zh-CN","frontmatter":{"description":"快速开启 Nginx","tags":["nginx"]},"headers":[{"level":2,"title":"一些重要的事","slug":"一些重要的事","link":"#一些重要的事","children":[{"level":3,"title":"防止泄漏","slug":"防止泄漏","link":"#防止泄漏","children":[]},{"level":3,"title":"禁止 IP 访问","slug":"禁止-ip-访问","link":"#禁止-ip-访问","children":[]}]},{"level":2,"title":"安装 Nginx","slug":"安装-nginx","link":"#安装-nginx","children":[{"level":3,"title":"1. 检测源","slug":"_1-检测源","link":"#_1-检测源","children":[]},{"level":3,"title":"2. 更新 yum 源并安装","slug":"_2-更新-yum-源并安装","link":"#_2-更新-yum-源并安装","children":[]},{"level":3,"title":"3. 编译安装","slug":"_3-编译安装","link":"#_3-编译安装","children":[]}]},{"level":2,"title":"必须知道的基本操作","slug":"必须知道的基本操作","link":"#必须知道的基本操作","children":[{"level":3,"title":"启用安全组","slug":"启用安全组","link":"#启用安全组","children":[]},{"level":3,"title":"进程与端口","slug":"进程与端口","link":"#进程与端口","children":[]},{"level":3,"title":"启动","slug":"启动","link":"#启动","children":[]},{"level":3,"title":"停止","slug":"停止","link":"#停止","children":[]},{"level":3,"title":"重启","slug":"重启","link":"#重启","children":[]}]},{"level":2,"title":"内置变量","slug":"内置变量","link":"#内置变量","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"updatedTime":1637394521000,"contributors":[{"name":"shanyuhai123","username":"shanyuhai123","email":"864299347@qq.com","commits":11,"url":"https://github.com/shanyuhai123"}]},"filePathRelative":"backend/nginx/README.md"}');export{u as comp,x as data};
