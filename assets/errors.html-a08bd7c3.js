import{_ as r,M as l,p as d,q as i,R as e,t as n,N as a,a1 as t}from"./framework-e3e34937.js";const p={},u={href:"https://code.visualstudio.com/docs/setup/linux#_visual-studio-code-is-unable-to-watch-for-file-changes-in-this-large-workspace-error-enospc",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/microsoft/vscode/issues/90034#issuecomment-582115953",target:"_blank",rel:"noopener noreferrer"};function c(g,s){const o=l("ExternalLinkIcon");return d(),i("div",null,[s[15]||(s[15]=e("h1",{id:"处理-vscode-错误",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#处理-vscode-错误","aria-hidden":"true"},"#"),n(" 处理 VSCode 错误")],-1)),s[16]||(s[16]=e("h2",{id:"无法监视文件变化",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#无法监视文件变化","aria-hidden":"true"},"#"),n(" 无法监视文件变化")],-1)),s[17]||(s[17]=e("p",null,"其实这个问题存在已久，但是一直没有去处理。",-1)),e("p",null,[s[1]||(s[1]=n("当 VSCode 弹出该提示时会给一个对应的")),e("a",u,[s[0]||(s[0]=n("链接")),a(o)]),s[2]||(s[2]=n("，执行它提供的命令："))]),s[18]||(s[18]=e("div",{class:"language-bash","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"cat"),n(" /proc/sys/fs/inotify/max_user_watches "),e("span",{class:"token comment"},"# 19200"),n(`
`)])])],-1)),e("p",null,[s[4]||(s[4]=n("限制比较小，接着查看")),e("a",m,[s[3]||(s[3]=n("解决方案")),a(o)]),s[5]||(s[5]=n("。虽然提示说 ")),s[6]||(s[6]=e("code",null,"Arch Linux",-1)),s[7]||(s[7]=n(" 应当使用 ")),s[8]||(s[8]=e("code",null,"echo fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system",-1)),s[9]||(s[9]=n("，但我的 manjaro 重启后依旧存在问题。"))]),s[19]||(s[19]=t(`<p>最后的解决方案：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>ll /etc/sysctl.d/
<span class="token comment"># 40-max-user-watches.conf</span>
<span class="token comment"># 50-max_user_watches.conf # 需注意文件名区别</span>
<span class="token function">cat</span> /etc/sysctl.d/50-max_user_watches.conf
fs.inotify.max_user_watches <span class="token operator">=</span> <span class="token number">19200</span> <span class="token comment"># 利用 vim 修改后重启成功</span>
</code></pre></div><h2 id="空文件夹折叠" tabindex="-1"><a class="header-anchor" href="#空文件夹折叠" aria-hidden="true">#</a> 空文件夹折叠</h2><p>在一次更新之后 VSCode 添加了新的特性 <code>Compact Folders</code>，这种行为与 Chrome 浏览器擅自遮挡 <code>www</code> 一样恶心。</p><p>打开 <code>Settings</code>，输入 <code>Compact Folders</code> 取消选中即可。</p><h2 id="删除文件-文件夹时卡顿" tabindex="-1"><a class="header-anchor" href="#删除文件-文件夹时卡顿" aria-hidden="true">#</a> 删除文件/文件夹时卡顿</h2>`,6)),e("p",null,[s[11]||(s[11]=n("在 Arch 的 KDE 环境下会存在该问题，这是由于 ")),e("a",f,[s[10]||(s[10]=n("ELECTRON 引起的")),a(o)]),s[12]||(s[12]=n("。可通过在 ")),s[13]||(s[13]=e("code",null,"~/.config/plasma-workspace/env/electron-trash-gio.sh",-1)),s[14]||(s[14]=n(" 增加如下内容解决："))]),s[20]||(s[20]=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">ELECTRON_TRASH</span><span class="token operator">=</span>gio
</code></pre></div>`,1))])}const h=r(p,[["render",c],["__file","errors.html.vue"]]);export{h as default};
