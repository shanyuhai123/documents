import{_ as i,M as r,p,q as l,a1 as t,R as o,t as d,N as n}from"./framework-e3e34937.js";const c={},u={href:"http://zhongguose.com/",target:"_blank",rel:"noopener noreferrer"},h={id:"_1-快速启动-scripts-脚本",tabindex:"-1"},f={id:"_2-对比差异",tabindex:"-1"},x={id:"_3-时间线",tabindex:"-1"},b={id:"_4-建议预览",tabindex:"-1"},k={href:"https://code.visualstudio.com/docs",target:"_blank",rel:"noopener noreferrer"};function g(C,e){const s=r("ExternalLinkIcon"),a=r("Badge");return p(),l("div",null,[e[18]||(e[18]=t('<h1 id="编辑器-vscode" tabindex="-1"><a class="header-anchor" href="#编辑器-vscode" aria-hidden="true">#</a> 编辑器 VSCode</h1><p>插件安装位置为 <code>~/.vscode/extensions/</code> 下。</p><h2 id="喜欢的配置" tabindex="-1"><a class="header-anchor" href="#喜欢的配置" aria-hidden="true">#</a> 喜欢的配置</h2><h3 id="_1-隐藏菜单栏" tabindex="-1"><a class="header-anchor" href="#_1-隐藏菜单栏" aria-hidden="true">#</a> 1. 隐藏菜单栏</h3><blockquote><p>在稍微熟练 <code>VSCode</code> 后菜单栏的存在就显得有些多余，占位也偏多。</p></blockquote><p>打开 <code>Settings</code>，输入 <code>菜单栏(中文)</code> 或 <code>Menu Bar Visibility(英文)</code> 可找到该配置项，选择 <code>toggle</code> 即当按下 <code>ALT</code> 时会进行显隐切换。</p><h3 id="_2-侧边栏" tabindex="-1"><a class="header-anchor" href="#_2-侧边栏" aria-hidden="true">#</a> 2. 侧边栏</h3><blockquote><p>虽然侧边栏默认是在左边，但编写代码时基本无需关注菜单栏的状态，放在右边更为恰当。</p></blockquote><p>打开 <code>Settings</code>，输入 <code>侧边栏(中文)</code> 或 <code>Side Bar(英文)</code> 可找到该配置项，选择 <code>right</code> 即可。</p><p><code>CTRL + B</code> 可快速切换侧边栏显隐。</p><h3 id="_3-禅模式" tabindex="-1"><a class="header-anchor" href="#_3-禅模式" aria-hidden="true">#</a> 3. 禅模式</h3><blockquote><p>更为专注的模式，不过我也仅在编写<s>文档</s>笔记时使用。</p></blockquote><p>在 <code>VSCode</code> 界面中按下 <code>CTRL + K</code> 然后再按下 <code>Z</code> 即可进入禅模式。</p><h3 id="_4-文件跳转" tabindex="-1"><a class="header-anchor" href="#_4-文件跳转" aria-hidden="true">#</a> 4. 文件跳转</h3><p>在 <code>VSCode</code> 界面中按下 <code>CTRL + P</code> 即可进入搜索，找到对应的文件即可。</p><p>如果知道在当前文件夹且知道位置那么可以按下 <code>CTRL + SHIFT + E</code> 打开资源管理器，再使用上下键即可。</p><h3 id="_5-创建文件-文件夹" tabindex="-1"><a class="header-anchor" href="#_5-创建文件-文件夹" aria-hidden="true">#</a> 5. 创建文件/文件夹</h3><blockquote><p>可根据 <code>侧边栏</code> 或 <code>文件跳转</code> 中的步骤进入对应位置。</p></blockquote><p>先按下 <code>CTRL + K</code>，再按下 <code>CTRL + S</code> 即可进入快捷键设置。输入 <code>newFile</code> 绑定按键 <code>CTRL + N</code>，在搜索 <code>newFolder</code> 绑定按键 <code>CTRL + SHIFT + N</code>，当然也可以选择你喜欢的。</p><h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键" aria-hidden="true">#</a> 快捷键</h2><h3 id="切换工作区" tabindex="-1"><a class="header-anchor" href="#切换工作区" aria-hidden="true">#</a> 切换工作区</h3><p>编辑：<code>Ctrl + 1/2/3</code></p><p>命令行：<code>CTRL + ~</code></p><p>菜单（资源管理器）：<code>Ctrl + Shift + E</code></p><p>菜单（搜索）：<code>Ctrl + Shift + S</code></p><p>菜单（源代码管理器）：<code>Ctrl + Shift + G</code></p><p>菜单（调试）：<code>Ctrl + Shift + D</code></p><h2 id="主题配置" tabindex="-1"><a class="header-anchor" href="#主题配置" aria-hidden="true">#</a> 主题配置</h2><p>作为视觉动物，一个良好的配色可以帮助你更快的识别问题。</p><h3 id="_1-区分项目" tabindex="-1"><a class="header-anchor" href="#_1-区分项目" aria-hidden="true">#</a> 1. 区分项目</h3>',30)),o("p",null,[e[1]||(e[1]=d("可利用 ")),e[2]||(e[2]=o("code",null,"Title Bar Colors",-1)),e[3]||(e[3]=d(" 的 ")),e[4]||(e[4]=o("code",null,"激活、未激活",-1)),e[5]||(e[5]=d(" 颜色来区分开启的多个 ")),e[6]||(e[6]=o("code",null,"VSCode",-1)),e[7]||(e[7]=d(" 窗口，可在")),o("a",u,[e[0]||(e[0]=d("中国色")),n(s)]),e[8]||(e[8]=d("选取喜欢的颜色。"))]),e[19]||(e[19]=o("h2",{id:"版本提升",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#版本提升","aria-hidden":"true"},"#"),d(" 版本提升")],-1)),o("h3",h,[e[9]||(e[9]=o("a",{class:"header-anchor",href:"#_1-快速启动-scripts-脚本","aria-hidden":"true"},"#",-1)),e[10]||(e[10]=d(" 1. 快速启动 scripts 脚本 ")),n(a,{text:"v1.37"})]),e[20]||(e[20]=o("p",null,[d("打开项目后在侧边栏会根据 "),o("code",null,"package.json"),d(" 脚本生成 "),o("code",null,"NPM SCRIPTS"),d(" ，点击即可快速启动。")],-1)),o("h3",f,[e[11]||(e[11]=o("a",{class:"header-anchor",href:"#_2-对比差异","aria-hidden":"true"},"#",-1)),e[12]||(e[12]=d(" 2. 对比差异 ")),n(a,{text:"v1.41"})]),e[21]||(e[21]=o("p",null,[d("利用 "),o("code",null,"CTRL"),d(" 选中 2 个文件，然后右键 "),o("code",null,"Select for Compare"),d(" 即可查看两个文件之间的差异。")],-1)),o("h3",x,[e[13]||(e[13]=o("a",{class:"header-anchor",href:"#_3-时间线","aria-hidden":"true"},"#",-1)),e[14]||(e[14]=d(" 3. 时间线 ")),n(a,{text:"unknown"})]),e[22]||(e[22]=t(`<p>查看一个文件被 <code>git</code> 跟踪的记录。</p><p>打开 <code>Settings</code>，切换到 <code>JSON</code> 格式：</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;timeline.showView&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
</code></pre></div>`,3)),o("h3",b,[e[15]||(e[15]=o("a",{class:"header-anchor",href:"#_4-建议预览","aria-hidden":"true"},"#",-1)),e[16]||(e[16]=d(" 4. 建议预览 ")),n(a,{text:"v1.57"})]),e[23]||(e[23]=t(`<p>对提示的代码进行预览，当提示的内容较多时比较实用。</p><p>打开 <code>Settings</code>，切换到 <code>JSON</code> 格式：</p><div class="language-json" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;editor.suggest.preview&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;editor.suggest.previewMode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;subwordDiff&quot;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>`,4)),o("ol",null,[o("li",null,[o("a",k,[e[17]||(e[17]=d("VSCode")),n(s)])])])])}const q=i(c,[["render",g],["__file","index.html.vue"]]);export{q as default};
